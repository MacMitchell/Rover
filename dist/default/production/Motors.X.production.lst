

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Mar 31 15:17:02 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     8                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	inittext,global,class=CODE,delta=2
    18                           	psect	clrtext,global,class=CODE,delta=2
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	psect	text38,local,class=CODE,merge=1,delta=2
    60                           	psect	text39,local,class=CODE,merge=1,delta=2
    61                           	psect	text40,local,class=CODE,merge=1,delta=2
    62                           	psect	intentry,global,class=CODE,delta=2
    63                           	psect	text42,local,class=CODE,merge=1,delta=2
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    65                           	dabs	1,0x7E,2
    66     0000                     
    67                           ; Generated 21/06/2023 GMT
    68                           ; 
    69                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution. Publication is not required when
    83                           ;        this file is used in an embedded application.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC16F18855 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101     0000                     	;# 
   102     0001                     	;# 
   103     0002                     	;# 
   104     0003                     	;# 
   105     0004                     	;# 
   106     0005                     	;# 
   107     0006                     	;# 
   108     0007                     	;# 
   109     0008                     	;# 
   110     0009                     	;# 
   111     000A                     	;# 
   112     000B                     	;# 
   113     000C                     	;# 
   114     000D                     	;# 
   115     000E                     	;# 
   116     0010                     	;# 
   117     0011                     	;# 
   118     0012                     	;# 
   119     0013                     	;# 
   120     0016                     	;# 
   121     0017                     	;# 
   122     0018                     	;# 
   123     001C                     	;# 
   124     001C                     	;# 
   125     001D                     	;# 
   126     001D                     	;# 
   127     001E                     	;# 
   128     001F                     	;# 
   129     008C                     	;# 
   130     008C                     	;# 
   131     008D                     	;# 
   132     008E                     	;# 
   133     008E                     	;# 
   134     008F                     	;# 
   135     0090                     	;# 
   136     0090                     	;# 
   137     0091                     	;# 
   138     0093                     	;# 
   139     0094                     	;# 
   140     0095                     	;# 
   141     0096                     	;# 
   142     0097                     	;# 
   143     0098                     	;# 
   144     0099                     	;# 
   145     009A                     	;# 
   146     009B                     	;# 
   147     009C                     	;# 
   148     009D                     	;# 
   149     009E                     	;# 
   150     010C                     	;# 
   151     010D                     	;# 
   152     010E                     	;# 
   153     010E                     	;# 
   154     010F                     	;# 
   155     0110                     	;# 
   156     0110                     	;# 
   157     0111                     	;# 
   158     0112                     	;# 
   159     0112                     	;# 
   160     0113                     	;# 
   161     0114                     	;# 
   162     0114                     	;# 
   163     0115                     	;# 
   164     0116                     	;# 
   165     0116                     	;# 
   166     0117                     	;# 
   167     0119                     	;# 
   168     0119                     	;# 
   169     0119                     	;# 
   170     011A                     	;# 
   171     011A                     	;# 
   172     011A                     	;# 
   173     011B                     	;# 
   174     011B                     	;# 
   175     011B                     	;# 
   176     011B                     	;# 
   177     011B                     	;# 
   178     011C                     	;# 
   179     011C                     	;# 
   180     011C                     	;# 
   181     011D                     	;# 
   182     011D                     	;# 
   183     011D                     	;# 
   184     011E                     	;# 
   185     011E                     	;# 
   186     011E                     	;# 
   187     011F                     	;# 
   188     011F                     	;# 
   189     011F                     	;# 
   190     011F                     	;# 
   191     011F                     	;# 
   192     018C                     	;# 
   193     018D                     	;# 
   194     018E                     	;# 
   195     018F                     	;# 
   196     0190                     	;# 
   197     0191                     	;# 
   198     0192                     	;# 
   199     0196                     	;# 
   200     0197                     	;# 
   201     0198                     	;# 
   202     0199                     	;# 
   203     019A                     	;# 
   204     019B                     	;# 
   205     019C                     	;# 
   206     020C                     	;# 
   207     020C                     	;# 
   208     020D                     	;# 
   209     020E                     	;# 
   210     020F                     	;# 
   211     020F                     	;# 
   212     0210                     	;# 
   213     0210                     	;# 
   214     0211                     	;# 
   215     0211                     	;# 
   216     0212                     	;# 
   217     0212                     	;# 
   218     0213                     	;# 
   219     0214                     	;# 
   220     0215                     	;# 
   221     0215                     	;# 
   222     0216                     	;# 
   223     0216                     	;# 
   224     0217                     	;# 
   225     0217                     	;# 
   226     0218                     	;# 
   227     0218                     	;# 
   228     0219                     	;# 
   229     021A                     	;# 
   230     021B                     	;# 
   231     021B                     	;# 
   232     021C                     	;# 
   233     021C                     	;# 
   234     021D                     	;# 
   235     021D                     	;# 
   236     021E                     	;# 
   237     021F                     	;# 
   238     028C                     	;# 
   239     028C                     	;# 
   240     028D                     	;# 
   241     028D                     	;# 
   242     028E                     	;# 
   243     028F                     	;# 
   244     0290                     	;# 
   245     0290                     	;# 
   246     0291                     	;# 
   247     0292                     	;# 
   248     0292                     	;# 
   249     0293                     	;# 
   250     0293                     	;# 
   251     0294                     	;# 
   252     0295                     	;# 
   253     0296                     	;# 
   254     0296                     	;# 
   255     0297                     	;# 
   256     0298                     	;# 
   257     0298                     	;# 
   258     0299                     	;# 
   259     0299                     	;# 
   260     029A                     	;# 
   261     029B                     	;# 
   262     029C                     	;# 
   263     029C                     	;# 
   264     029D                     	;# 
   265     030C                     	;# 
   266     030C                     	;# 
   267     030D                     	;# 
   268     030E                     	;# 
   269     030F                     	;# 
   270     0310                     	;# 
   271     0310                     	;# 
   272     0311                     	;# 
   273     0312                     	;# 
   274     0313                     	;# 
   275     0314                     	;# 
   276     0314                     	;# 
   277     0315                     	;# 
   278     0316                     	;# 
   279     0317                     	;# 
   280     0318                     	;# 
   281     0318                     	;# 
   282     0319                     	;# 
   283     031A                     	;# 
   284     031B                     	;# 
   285     031C                     	;# 
   286     031C                     	;# 
   287     031D                     	;# 
   288     031E                     	;# 
   289     031F                     	;# 
   290     038C                     	;# 
   291     038C                     	;# 
   292     038D                     	;# 
   293     038E                     	;# 
   294     0390                     	;# 
   295     0390                     	;# 
   296     0391                     	;# 
   297     0392                     	;# 
   298     040C                     	;# 
   299     040D                     	;# 
   300     040E                     	;# 
   301     040F                     	;# 
   302     0410                     	;# 
   303     0411                     	;# 
   304     0416                     	;# 
   305     0416                     	;# 
   306     0417                     	;# 
   307     0418                     	;# 
   308     0418                     	;# 
   309     0419                     	;# 
   310     041A                     	;# 
   311     041A                     	;# 
   312     041B                     	;# 
   313     041C                     	;# 
   314     041C                     	;# 
   315     041D                     	;# 
   316     041E                     	;# 
   317     041F                     	;# 
   318     048C                     	;# 
   319     048C                     	;# 
   320     048D                     	;# 
   321     048E                     	;# 
   322     048F                     	;# 
   323     048F                     	;# 
   324     0490                     	;# 
   325     0491                     	;# 
   326     0492                     	;# 
   327     0492                     	;# 
   328     0493                     	;# 
   329     0494                     	;# 
   330     0495                     	;# 
   331     0495                     	;# 
   332     0496                     	;# 
   333     0497                     	;# 
   334     0498                     	;# 
   335     0499                     	;# 
   336     049A                     	;# 
   337     049B                     	;# 
   338     049C                     	;# 
   339     049D                     	;# 
   340     050C                     	;# 
   341     050C                     	;# 
   342     050D                     	;# 
   343     050E                     	;# 
   344     050F                     	;# 
   345     050F                     	;# 
   346     0510                     	;# 
   347     0511                     	;# 
   348     0512                     	;# 
   349     0512                     	;# 
   350     0513                     	;# 
   351     0514                     	;# 
   352     0515                     	;# 
   353     0515                     	;# 
   354     0516                     	;# 
   355     0517                     	;# 
   356     0518                     	;# 
   357     0519                     	;# 
   358     051A                     	;# 
   359     051B                     	;# 
   360     051C                     	;# 
   361     051D                     	;# 
   362     058C                     	;# 
   363     058C                     	;# 
   364     058D                     	;# 
   365     058E                     	;# 
   366     058F                     	;# 
   367     058F                     	;# 
   368     0590                     	;# 
   369     0591                     	;# 
   370     0592                     	;# 
   371     0593                     	;# 
   372     060C                     	;# 
   373     060D                     	;# 
   374     060E                     	;# 
   375     060F                     	;# 
   376     0610                     	;# 
   377     0611                     	;# 
   378     0612                     	;# 
   379     0613                     	;# 
   380     0614                     	;# 
   381     0616                     	;# 
   382     0617                     	;# 
   383     0618                     	;# 
   384     0619                     	;# 
   385     061A                     	;# 
   386     061B                     	;# 
   387     061C                     	;# 
   388     061D                     	;# 
   389     061E                     	;# 
   390     068C                     	;# 
   391     068D                     	;# 
   392     068E                     	;# 
   393     068F                     	;# 
   394     0690                     	;# 
   395     0691                     	;# 
   396     0692                     	;# 
   397     0693                     	;# 
   398     0694                     	;# 
   399     070C                     	;# 
   400     070D                     	;# 
   401     070E                     	;# 
   402     070F                     	;# 
   403     0710                     	;# 
   404     0711                     	;# 
   405     0712                     	;# 
   406     0713                     	;# 
   407     0714                     	;# 
   408     0716                     	;# 
   409     0717                     	;# 
   410     0718                     	;# 
   411     0719                     	;# 
   412     071A                     	;# 
   413     071B                     	;# 
   414     071C                     	;# 
   415     071D                     	;# 
   416     071E                     	;# 
   417     0796                     	;# 
   418     0797                     	;# 
   419     0798                     	;# 
   420     0799                     	;# 
   421     079A                     	;# 
   422     079B                     	;# 
   423     080C                     	;# 
   424     080D                     	;# 
   425     080E                     	;# 
   426     080F                     	;# 
   427     0810                     	;# 
   428     0811                     	;# 
   429     0812                     	;# 
   430     0813                     	;# 
   431     0814                     	;# 
   432     081A                     	;# 
   433     081B                     	;# 
   434     081C                     	;# 
   435     081D                     	;# 
   436     081E                     	;# 
   437     081F                     	;# 
   438     088C                     	;# 
   439     088D                     	;# 
   440     088E                     	;# 
   441     088F                     	;# 
   442     0890                     	;# 
   443     0891                     	;# 
   444     0892                     	;# 
   445     0893                     	;# 
   446     0895                     	;# 
   447     0896                     	;# 
   448     0897                     	;# 
   449     0898                     	;# 
   450     0899                     	;# 
   451     089A                     	;# 
   452     089B                     	;# 
   453     090C                     	;# 
   454     090E                     	;# 
   455     090F                     	;# 
   456     091F                     	;# 
   457     091F                     	;# 
   458     098F                     	;# 
   459     098F                     	;# 
   460     0990                     	;# 
   461     0991                     	;# 
   462     0992                     	;# 
   463     0993                     	;# 
   464     0994                     	;# 
   465     0995                     	;# 
   466     0996                     	;# 
   467     0997                     	;# 
   468     0E0F                     	;# 
   469     0E10                     	;# 
   470     0E11                     	;# 
   471     0E12                     	;# 
   472     0E13                     	;# 
   473     0E14                     	;# 
   474     0E15                     	;# 
   475     0E16                     	;# 
   476     0E17                     	;# 
   477     0E18                     	;# 
   478     0E19                     	;# 
   479     0E1A                     	;# 
   480     0E1B                     	;# 
   481     0E1C                     	;# 
   482     0E1D                     	;# 
   483     0E1E                     	;# 
   484     0E1F                     	;# 
   485     0E20                     	;# 
   486     0E21                     	;# 
   487     0E22                     	;# 
   488     0E23                     	;# 
   489     0E24                     	;# 
   490     0E25                     	;# 
   491     0E26                     	;# 
   492     0E27                     	;# 
   493     0E28                     	;# 
   494     0E29                     	;# 
   495     0E2A                     	;# 
   496     0E2B                     	;# 
   497     0E2C                     	;# 
   498     0E2D                     	;# 
   499     0E2E                     	;# 
   500     0E2F                     	;# 
   501     0E30                     	;# 
   502     0E31                     	;# 
   503     0E32                     	;# 
   504     0E33                     	;# 
   505     0E34                     	;# 
   506     0E35                     	;# 
   507     0E36                     	;# 
   508     0E37                     	;# 
   509     0E8F                     	;# 
   510     0E90                     	;# 
   511     0E91                     	;# 
   512     0E92                     	;# 
   513     0E93                     	;# 
   514     0E94                     	;# 
   515     0E95                     	;# 
   516     0E96                     	;# 
   517     0E97                     	;# 
   518     0E9C                     	;# 
   519     0E9D                     	;# 
   520     0E9E                     	;# 
   521     0EA1                     	;# 
   522     0EA2                     	;# 
   523     0EA3                     	;# 
   524     0EA4                     	;# 
   525     0EA5                     	;# 
   526     0EA9                     	;# 
   527     0EAA                     	;# 
   528     0EAB                     	;# 
   529     0EAC                     	;# 
   530     0EB1                     	;# 
   531     0EB2                     	;# 
   532     0EB3                     	;# 
   533     0EB8                     	;# 
   534     0EB9                     	;# 
   535     0EBA                     	;# 
   536     0EBB                     	;# 
   537     0EBC                     	;# 
   538     0EBD                     	;# 
   539     0EBE                     	;# 
   540     0EC3                     	;# 
   541     0EC5                     	;# 
   542     0EC6                     	;# 
   543     0EC7                     	;# 
   544     0EC8                     	;# 
   545     0EC9                     	;# 
   546     0ECA                     	;# 
   547     0ECB                     	;# 
   548     0ECC                     	;# 
   549     0F10                     	;# 
   550     0F11                     	;# 
   551     0F12                     	;# 
   552     0F13                     	;# 
   553     0F14                     	;# 
   554     0F15                     	;# 
   555     0F16                     	;# 
   556     0F17                     	;# 
   557     0F18                     	;# 
   558     0F19                     	;# 
   559     0F1A                     	;# 
   560     0F1B                     	;# 
   561     0F1C                     	;# 
   562     0F1D                     	;# 
   563     0F1E                     	;# 
   564     0F1F                     	;# 
   565     0F20                     	;# 
   566     0F21                     	;# 
   567     0F22                     	;# 
   568     0F23                     	;# 
   569     0F24                     	;# 
   570     0F25                     	;# 
   571     0F26                     	;# 
   572     0F27                     	;# 
   573     0F38                     	;# 
   574     0F39                     	;# 
   575     0F3A                     	;# 
   576     0F3B                     	;# 
   577     0F3C                     	;# 
   578     0F3D                     	;# 
   579     0F3E                     	;# 
   580     0F3F                     	;# 
   581     0F40                     	;# 
   582     0F41                     	;# 
   583     0F43                     	;# 
   584     0F44                     	;# 
   585     0F45                     	;# 
   586     0F46                     	;# 
   587     0F47                     	;# 
   588     0F48                     	;# 
   589     0F49                     	;# 
   590     0F4A                     	;# 
   591     0F4B                     	;# 
   592     0F4C                     	;# 
   593     0F4E                     	;# 
   594     0F4F                     	;# 
   595     0F50                     	;# 
   596     0F51                     	;# 
   597     0F52                     	;# 
   598     0F53                     	;# 
   599     0F54                     	;# 
   600     0F55                     	;# 
   601     0F56                     	;# 
   602     0F57                     	;# 
   603     0F65                     	;# 
   604     0F68                     	;# 
   605     0F69                     	;# 
   606     0F6A                     	;# 
   607     0F6B                     	;# 
   608     0FE4                     	;# 
   609     0FE5                     	;# 
   610     0FE6                     	;# 
   611     0FE7                     	;# 
   612     0FE8                     	;# 
   613     0FE9                     	;# 
   614     0FEA                     	;# 
   615     0FEB                     	;# 
   616     0FED                     	;# 
   617     0FEE                     	;# 
   618     0FEF                     	;# 
   619     0000                     	;# 
   620     0001                     	;# 
   621     0002                     	;# 
   622     0003                     	;# 
   623     0004                     	;# 
   624     0005                     	;# 
   625     0006                     	;# 
   626     0007                     	;# 
   627     0008                     	;# 
   628     0009                     	;# 
   629     000A                     	;# 
   630     000B                     	;# 
   631     000C                     	;# 
   632     000D                     	;# 
   633     000E                     	;# 
   634     0010                     	;# 
   635     0011                     	;# 
   636     0012                     	;# 
   637     0013                     	;# 
   638     0016                     	;# 
   639     0017                     	;# 
   640     0018                     	;# 
   641     001C                     	;# 
   642     001C                     	;# 
   643     001D                     	;# 
   644     001D                     	;# 
   645     001E                     	;# 
   646     001F                     	;# 
   647     008C                     	;# 
   648     008C                     	;# 
   649     008D                     	;# 
   650     008E                     	;# 
   651     008E                     	;# 
   652     008F                     	;# 
   653     0090                     	;# 
   654     0090                     	;# 
   655     0091                     	;# 
   656     0093                     	;# 
   657     0094                     	;# 
   658     0095                     	;# 
   659     0096                     	;# 
   660     0097                     	;# 
   661     0098                     	;# 
   662     0099                     	;# 
   663     009A                     	;# 
   664     009B                     	;# 
   665     009C                     	;# 
   666     009D                     	;# 
   667     009E                     	;# 
   668     010C                     	;# 
   669     010D                     	;# 
   670     010E                     	;# 
   671     010E                     	;# 
   672     010F                     	;# 
   673     0110                     	;# 
   674     0110                     	;# 
   675     0111                     	;# 
   676     0112                     	;# 
   677     0112                     	;# 
   678     0113                     	;# 
   679     0114                     	;# 
   680     0114                     	;# 
   681     0115                     	;# 
   682     0116                     	;# 
   683     0116                     	;# 
   684     0117                     	;# 
   685     0119                     	;# 
   686     0119                     	;# 
   687     0119                     	;# 
   688     011A                     	;# 
   689     011A                     	;# 
   690     011A                     	;# 
   691     011B                     	;# 
   692     011B                     	;# 
   693     011B                     	;# 
   694     011B                     	;# 
   695     011B                     	;# 
   696     011C                     	;# 
   697     011C                     	;# 
   698     011C                     	;# 
   699     011D                     	;# 
   700     011D                     	;# 
   701     011D                     	;# 
   702     011E                     	;# 
   703     011E                     	;# 
   704     011E                     	;# 
   705     011F                     	;# 
   706     011F                     	;# 
   707     011F                     	;# 
   708     011F                     	;# 
   709     011F                     	;# 
   710     018C                     	;# 
   711     018D                     	;# 
   712     018E                     	;# 
   713     018F                     	;# 
   714     0190                     	;# 
   715     0191                     	;# 
   716     0192                     	;# 
   717     0196                     	;# 
   718     0197                     	;# 
   719     0198                     	;# 
   720     0199                     	;# 
   721     019A                     	;# 
   722     019B                     	;# 
   723     019C                     	;# 
   724     020C                     	;# 
   725     020C                     	;# 
   726     020D                     	;# 
   727     020E                     	;# 
   728     020F                     	;# 
   729     020F                     	;# 
   730     0210                     	;# 
   731     0210                     	;# 
   732     0211                     	;# 
   733     0211                     	;# 
   734     0212                     	;# 
   735     0212                     	;# 
   736     0213                     	;# 
   737     0214                     	;# 
   738     0215                     	;# 
   739     0215                     	;# 
   740     0216                     	;# 
   741     0216                     	;# 
   742     0217                     	;# 
   743     0217                     	;# 
   744     0218                     	;# 
   745     0218                     	;# 
   746     0219                     	;# 
   747     021A                     	;# 
   748     021B                     	;# 
   749     021B                     	;# 
   750     021C                     	;# 
   751     021C                     	;# 
   752     021D                     	;# 
   753     021D                     	;# 
   754     021E                     	;# 
   755     021F                     	;# 
   756     028C                     	;# 
   757     028C                     	;# 
   758     028D                     	;# 
   759     028D                     	;# 
   760     028E                     	;# 
   761     028F                     	;# 
   762     0290                     	;# 
   763     0290                     	;# 
   764     0291                     	;# 
   765     0292                     	;# 
   766     0292                     	;# 
   767     0293                     	;# 
   768     0293                     	;# 
   769     0294                     	;# 
   770     0295                     	;# 
   771     0296                     	;# 
   772     0296                     	;# 
   773     0297                     	;# 
   774     0298                     	;# 
   775     0298                     	;# 
   776     0299                     	;# 
   777     0299                     	;# 
   778     029A                     	;# 
   779     029B                     	;# 
   780     029C                     	;# 
   781     029C                     	;# 
   782     029D                     	;# 
   783     030C                     	;# 
   784     030C                     	;# 
   785     030D                     	;# 
   786     030E                     	;# 
   787     030F                     	;# 
   788     0310                     	;# 
   789     0310                     	;# 
   790     0311                     	;# 
   791     0312                     	;# 
   792     0313                     	;# 
   793     0314                     	;# 
   794     0314                     	;# 
   795     0315                     	;# 
   796     0316                     	;# 
   797     0317                     	;# 
   798     0318                     	;# 
   799     0318                     	;# 
   800     0319                     	;# 
   801     031A                     	;# 
   802     031B                     	;# 
   803     031C                     	;# 
   804     031C                     	;# 
   805     031D                     	;# 
   806     031E                     	;# 
   807     031F                     	;# 
   808     038C                     	;# 
   809     038C                     	;# 
   810     038D                     	;# 
   811     038E                     	;# 
   812     0390                     	;# 
   813     0390                     	;# 
   814     0391                     	;# 
   815     0392                     	;# 
   816     040C                     	;# 
   817     040D                     	;# 
   818     040E                     	;# 
   819     040F                     	;# 
   820     0410                     	;# 
   821     0411                     	;# 
   822     0416                     	;# 
   823     0416                     	;# 
   824     0417                     	;# 
   825     0418                     	;# 
   826     0418                     	;# 
   827     0419                     	;# 
   828     041A                     	;# 
   829     041A                     	;# 
   830     041B                     	;# 
   831     041C                     	;# 
   832     041C                     	;# 
   833     041D                     	;# 
   834     041E                     	;# 
   835     041F                     	;# 
   836     048C                     	;# 
   837     048C                     	;# 
   838     048D                     	;# 
   839     048E                     	;# 
   840     048F                     	;# 
   841     048F                     	;# 
   842     0490                     	;# 
   843     0491                     	;# 
   844     0492                     	;# 
   845     0492                     	;# 
   846     0493                     	;# 
   847     0494                     	;# 
   848     0495                     	;# 
   849     0495                     	;# 
   850     0496                     	;# 
   851     0497                     	;# 
   852     0498                     	;# 
   853     0499                     	;# 
   854     049A                     	;# 
   855     049B                     	;# 
   856     049C                     	;# 
   857     049D                     	;# 
   858     050C                     	;# 
   859     050C                     	;# 
   860     050D                     	;# 
   861     050E                     	;# 
   862     050F                     	;# 
   863     050F                     	;# 
   864     0510                     	;# 
   865     0511                     	;# 
   866     0512                     	;# 
   867     0512                     	;# 
   868     0513                     	;# 
   869     0514                     	;# 
   870     0515                     	;# 
   871     0515                     	;# 
   872     0516                     	;# 
   873     0517                     	;# 
   874     0518                     	;# 
   875     0519                     	;# 
   876     051A                     	;# 
   877     051B                     	;# 
   878     051C                     	;# 
   879     051D                     	;# 
   880     058C                     	;# 
   881     058C                     	;# 
   882     058D                     	;# 
   883     058E                     	;# 
   884     058F                     	;# 
   885     058F                     	;# 
   886     0590                     	;# 
   887     0591                     	;# 
   888     0592                     	;# 
   889     0593                     	;# 
   890     060C                     	;# 
   891     060D                     	;# 
   892     060E                     	;# 
   893     060F                     	;# 
   894     0610                     	;# 
   895     0611                     	;# 
   896     0612                     	;# 
   897     0613                     	;# 
   898     0614                     	;# 
   899     0616                     	;# 
   900     0617                     	;# 
   901     0618                     	;# 
   902     0619                     	;# 
   903     061A                     	;# 
   904     061B                     	;# 
   905     061C                     	;# 
   906     061D                     	;# 
   907     061E                     	;# 
   908     068C                     	;# 
   909     068D                     	;# 
   910     068E                     	;# 
   911     068F                     	;# 
   912     0690                     	;# 
   913     0691                     	;# 
   914     0692                     	;# 
   915     0693                     	;# 
   916     0694                     	;# 
   917     070C                     	;# 
   918     070D                     	;# 
   919     070E                     	;# 
   920     070F                     	;# 
   921     0710                     	;# 
   922     0711                     	;# 
   923     0712                     	;# 
   924     0713                     	;# 
   925     0714                     	;# 
   926     0716                     	;# 
   927     0717                     	;# 
   928     0718                     	;# 
   929     0719                     	;# 
   930     071A                     	;# 
   931     071B                     	;# 
   932     071C                     	;# 
   933     071D                     	;# 
   934     071E                     	;# 
   935     0796                     	;# 
   936     0797                     	;# 
   937     0798                     	;# 
   938     0799                     	;# 
   939     079A                     	;# 
   940     079B                     	;# 
   941     080C                     	;# 
   942     080D                     	;# 
   943     080E                     	;# 
   944     080F                     	;# 
   945     0810                     	;# 
   946     0811                     	;# 
   947     0812                     	;# 
   948     0813                     	;# 
   949     0814                     	;# 
   950     081A                     	;# 
   951     081B                     	;# 
   952     081C                     	;# 
   953     081D                     	;# 
   954     081E                     	;# 
   955     081F                     	;# 
   956     088C                     	;# 
   957     088D                     	;# 
   958     088E                     	;# 
   959     088F                     	;# 
   960     0890                     	;# 
   961     0891                     	;# 
   962     0892                     	;# 
   963     0893                     	;# 
   964     0895                     	;# 
   965     0896                     	;# 
   966     0897                     	;# 
   967     0898                     	;# 
   968     0899                     	;# 
   969     089A                     	;# 
   970     089B                     	;# 
   971     090C                     	;# 
   972     090E                     	;# 
   973     090F                     	;# 
   974     091F                     	;# 
   975     091F                     	;# 
   976     098F                     	;# 
   977     098F                     	;# 
   978     0990                     	;# 
   979     0991                     	;# 
   980     0992                     	;# 
   981     0993                     	;# 
   982     0994                     	;# 
   983     0995                     	;# 
   984     0996                     	;# 
   985     0997                     	;# 
   986     0E0F                     	;# 
   987     0E10                     	;# 
   988     0E11                     	;# 
   989     0E12                     	;# 
   990     0E13                     	;# 
   991     0E14                     	;# 
   992     0E15                     	;# 
   993     0E16                     	;# 
   994     0E17                     	;# 
   995     0E18                     	;# 
   996     0E19                     	;# 
   997     0E1A                     	;# 
   998     0E1B                     	;# 
   999     0E1C                     	;# 
  1000     0E1D                     	;# 
  1001     0E1E                     	;# 
  1002     0E1F                     	;# 
  1003     0E20                     	;# 
  1004     0E21                     	;# 
  1005     0E22                     	;# 
  1006     0E23                     	;# 
  1007     0E24                     	;# 
  1008     0E25                     	;# 
  1009     0E26                     	;# 
  1010     0E27                     	;# 
  1011     0E28                     	;# 
  1012     0E29                     	;# 
  1013     0E2A                     	;# 
  1014     0E2B                     	;# 
  1015     0E2C                     	;# 
  1016     0E2D                     	;# 
  1017     0E2E                     	;# 
  1018     0E2F                     	;# 
  1019     0E30                     	;# 
  1020     0E31                     	;# 
  1021     0E32                     	;# 
  1022     0E33                     	;# 
  1023     0E34                     	;# 
  1024     0E35                     	;# 
  1025     0E36                     	;# 
  1026     0E37                     	;# 
  1027     0E8F                     	;# 
  1028     0E90                     	;# 
  1029     0E91                     	;# 
  1030     0E92                     	;# 
  1031     0E93                     	;# 
  1032     0E94                     	;# 
  1033     0E95                     	;# 
  1034     0E96                     	;# 
  1035     0E97                     	;# 
  1036     0E9C                     	;# 
  1037     0E9D                     	;# 
  1038     0E9E                     	;# 
  1039     0EA1                     	;# 
  1040     0EA2                     	;# 
  1041     0EA3                     	;# 
  1042     0EA4                     	;# 
  1043     0EA5                     	;# 
  1044     0EA9                     	;# 
  1045     0EAA                     	;# 
  1046     0EAB                     	;# 
  1047     0EAC                     	;# 
  1048     0EB1                     	;# 
  1049     0EB2                     	;# 
  1050     0EB3                     	;# 
  1051     0EB8                     	;# 
  1052     0EB9                     	;# 
  1053     0EBA                     	;# 
  1054     0EBB                     	;# 
  1055     0EBC                     	;# 
  1056     0EBD                     	;# 
  1057     0EBE                     	;# 
  1058     0EC3                     	;# 
  1059     0EC5                     	;# 
  1060     0EC6                     	;# 
  1061     0EC7                     	;# 
  1062     0EC8                     	;# 
  1063     0EC9                     	;# 
  1064     0ECA                     	;# 
  1065     0ECB                     	;# 
  1066     0ECC                     	;# 
  1067     0F10                     	;# 
  1068     0F11                     	;# 
  1069     0F12                     	;# 
  1070     0F13                     	;# 
  1071     0F14                     	;# 
  1072     0F15                     	;# 
  1073     0F16                     	;# 
  1074     0F17                     	;# 
  1075     0F18                     	;# 
  1076     0F19                     	;# 
  1077     0F1A                     	;# 
  1078     0F1B                     	;# 
  1079     0F1C                     	;# 
  1080     0F1D                     	;# 
  1081     0F1E                     	;# 
  1082     0F1F                     	;# 
  1083     0F20                     	;# 
  1084     0F21                     	;# 
  1085     0F22                     	;# 
  1086     0F23                     	;# 
  1087     0F24                     	;# 
  1088     0F25                     	;# 
  1089     0F26                     	;# 
  1090     0F27                     	;# 
  1091     0F38                     	;# 
  1092     0F39                     	;# 
  1093     0F3A                     	;# 
  1094     0F3B                     	;# 
  1095     0F3C                     	;# 
  1096     0F3D                     	;# 
  1097     0F3E                     	;# 
  1098     0F3F                     	;# 
  1099     0F40                     	;# 
  1100     0F41                     	;# 
  1101     0F43                     	;# 
  1102     0F44                     	;# 
  1103     0F45                     	;# 
  1104     0F46                     	;# 
  1105     0F47                     	;# 
  1106     0F48                     	;# 
  1107     0F49                     	;# 
  1108     0F4A                     	;# 
  1109     0F4B                     	;# 
  1110     0F4C                     	;# 
  1111     0F4E                     	;# 
  1112     0F4F                     	;# 
  1113     0F50                     	;# 
  1114     0F51                     	;# 
  1115     0F52                     	;# 
  1116     0F53                     	;# 
  1117     0F54                     	;# 
  1118     0F55                     	;# 
  1119     0F56                     	;# 
  1120     0F57                     	;# 
  1121     0F65                     	;# 
  1122     0F68                     	;# 
  1123     0F69                     	;# 
  1124     0F6A                     	;# 
  1125     0F6B                     	;# 
  1126     0FE4                     	;# 
  1127     0FE5                     	;# 
  1128     0FE6                     	;# 
  1129     0FE7                     	;# 
  1130     0FE8                     	;# 
  1131     0FE9                     	;# 
  1132     0FEA                     	;# 
  1133     0FEB                     	;# 
  1134     0FED                     	;# 
  1135     0FEE                     	;# 
  1136     0FEF                     	;# 
  1137                           
  1138                           	psect	idataCOMMON
  1139     0B24                     __pidataCOMMON:
  1140                           
  1141                           ;initializer for _cycle
  1142     0B24  344B               	retlw	75
  1143     0B25  342E               	retlw	46
  1144                           
  1145                           ;initializer for _frequency
  1146     0B26  348C               	retlw	140
  1147     0B27  340A               	retlw	10
  1148                           
  1149                           	psect	idataBANK0
  1150     0B45                     __pidataBANK0:
  1151                           
  1152                           ;initializer for _CONTROL_OUTPUT
  1153     0B45  3401               	retlw	1
  1154     0B46  3400               	retlw	0
  1155                           
  1156                           ;initializer for _GREEN
  1157     0B47  3403               	retlw	3
  1158                           
  1159                           ;initializer for _BLUE
  1160     0B48  3402               	retlw	2
  1161                           
  1162                           ;initializer for _RED
  1163     0B49  3401               	retlw	1
  1164                           
  1165                           ;initializer for _newI2CMessage
  1166     0B4A  3401               	retlw	1
  1167                           
  1168                           	psect	idataBANK1
  1169     0D18                     __pidataBANK1:
  1170                           
  1171                           ;initializer for _SWITCH_MID
  1172     0D18  34DC               	retlw	220
  1173     0D19  3405               	retlw	5
  1174                           
  1175                           ;initializer for _SWITCH_MIN
  1176     0D1A  34E8               	retlw	232
  1177     0D1B  3403               	retlw	3
  1178                           
  1179                           ;initializer for _SWITCH_MAX
  1180     0D1C  34D0               	retlw	208
  1181     0D1D  3407               	retlw	7
  1182                           
  1183                           ;initializer for _MoveBackwardCommand
  1184     0D1E  34FE               	retlw	254
  1185     0D1F  3419               	retlw	25
  1186     0D20  3401               	retlw	1
  1187     0D21  3406               	retlw	6
  1188     0D22  3404               	retlw	4
  1189     0D23  3400               	retlw	0
  1190     0D24  3402               	retlw	2
  1191     0D25  3432               	retlw	50
  1192     0D26  3402               	retlw	2
  1193     0D27  3432               	retlw	50
  1194                           
  1195                           ;initializer for _MoveForwardCommand
  1196     0D28  34FE               	retlw	254
  1197     0D29  3419               	retlw	25
  1198     0D2A  3401               	retlw	1
  1199     0D2B  3406               	retlw	6
  1200     0D2C  3404               	retlw	4
  1201     0D2D  3400               	retlw	0
  1202     0D2E  3401               	retlw	1
  1203     0D2F  3432               	retlw	50
  1204     0D30  3401               	retlw	1
  1205     0D31  3432               	retlw	50
  1206                           
  1207                           ;initializer for _TurnRightCommand
  1208     0D32  34FE               	retlw	254
  1209     0D33  3419               	retlw	25
  1210     0D34  3401               	retlw	1
  1211     0D35  3406               	retlw	6
  1212     0D36  3404               	retlw	4
  1213     0D37  3400               	retlw	0
  1214     0D38  3402               	retlw	2
  1215     0D39  3432               	retlw	50
  1216     0D3A  3401               	retlw	1
  1217     0D3B  3432               	retlw	50
  1218                           
  1219                           ;initializer for _TurnLeftCommand
  1220     0D3C  34FE               	retlw	254
  1221     0D3D  3419               	retlw	25
  1222     0D3E  3401               	retlw	1
  1223     0D3F  3406               	retlw	6
  1224     0D40  3404               	retlw	4
  1225     0D41  3400               	retlw	0
  1226     0D42  3401               	retlw	1
  1227     0D43  3432               	retlw	50
  1228     0D44  3402               	retlw	2
  1229     0D45  3432               	retlw	50
  1230                           
  1231                           ;initializer for _GetUserDataCommand
  1232     0D46  34FE               	retlw	254
  1233     0D47  3419               	retlw	25
  1234     0D48  3401               	retlw	1
  1235     0D49  3405               	retlw	5
  1236     0D4A  3400               	retlw	0
  1237     0D4B  3400               	retlw	0
  1238                           
  1239                           	psect	idataBANK2
  1240     0BC6                     __pidataBANK2:
  1241                           
  1242                           ;initializer for _EnableLaserScopeCommand
  1243     0BC6  34FE               	retlw	254
  1244     0BC7  3419               	retlw	25
  1245     0BC8  3401               	retlw	1
  1246     0BC9  3408               	retlw	8
  1247     0BCA  3401               	retlw	1
  1248     0BCB  3400               	retlw	0
  1249     0BCC  3401               	retlw	1
  1250                           
  1251                           ;initializer for _Break
  1252     0BCD  34FE               	retlw	254
  1253     0BCE  3419               	retlw	25
  1254     0BCF  3401               	retlw	1
  1255     0BD0  3406               	retlw	6
  1256     0BD1  3404               	retlw	4
  1257     0BD2  3400               	retlw	0
  1258     0BD3  3400               	retlw	0
  1259     0BD4  3400               	retlw	0
  1260     0BD5  3400               	retlw	0
  1261     0BD6  3400               	retlw	0
  1262                           
  1263                           	psect	stringtext1
  1264     1000                     __pstringtext1:
  1265     1000                     _CONTROL_INPUT:
  1266     1000  3401               	retlw	1
  1267     1001  3400               	retlw	0
  1268     1002                     __end_of_CONTROL_INPUT:
  1269     0017                     _LATBbits	set	23
  1270     0012                     _TRISBbits	set	18
  1271     000B                     _INTCONbits	set	11
  1272     0011                     _TRISAbits	set	17
  1273     0016                     _LATAbits	set	22
  1274     0013                     _TRISCbits	set	19
  1275     011A                     _TX1REGbits	set	282
  1276     0119                     _RCREG	set	281
  1277     011D                     _RC1STAbits	set	285
  1278     011B                     _SP1BRGLbits	set	283
  1279     011E                     _TX1STAbits	set	286
  1280     011F                     _BAUD1CONbits	set	287
  1281     018C                     _SSP1BUFbits	set	396
  1282     0191                     _SSP1CON2bits	set	401
  1283     018C                     _SSP1BUF	set	396
  1284     0190                     _SSP1CON1	set	400
  1285     018D                     _SSP1ADD	set	397
  1286     0719                     _PIE3bits	set	1817
  1287     070F                     _PIR3bits	set	1807
  1288     090F                     _DAC1CON1bits	set	2319
  1289     0ECB                     _RXPPSbits	set	3787
  1290     0EC6                     _SSP1DATPPSbits	set	3782
  1291     0EC5                     _SSP1CLKPPSbits	set	3781
  1292     0F43                     _ANSELBbits	set	3907
  1293     0F25                     _RC5PPS	set	3877
  1294     0F38                     _ANSELAbits	set	3896
  1295     0F4F                     _WPUCbits	set	3919
  1296     0F4E                     _ANSELCbits	set	3918
  1297     0F24                     _RC4PPS	set	3876
  1298     0F23                     _RC3PPS	set	3875
  1299                           
  1300                           	psect	cinit
  1301     008B                     start_initialization:	
  1302                           ; #config settings
  1303                           
  1304     008B                     __initialization:
  1305                           
  1306                           ; Initialize objects allocated to COMMON
  1307     008B  3024               	movlw	low __pidataCOMMON
  1308     008C  0084               	movwf	4
  1309     008D  308B               	movlw	(high __pidataCOMMON)| (0+128)
  1310     008E  0085               	movwf	5
  1311     008F  3079               	movlw	low __pdataCOMMON
  1312     0090  0086               	movwf	6
  1313     0091  3000               	movlw	high __pdataCOMMON
  1314     0092  0087               	movwf	7
  1315     0093  3004               	movlw	4
  1316     0094  318B  233F  3180   	fcall	init_ram
  1317                           
  1318                           ; Initialize objects allocated to BANK0
  1319     0097  3045               	movlw	low __pidataBANK0
  1320     0098  0084               	movwf	4
  1321     0099  308B               	movlw	(high __pidataBANK0)| (0+128)
  1322     009A  0085               	movwf	5
  1323     009B  3069               	movlw	low __pdataBANK0
  1324     009C  0086               	movwf	6
  1325     009D  3000               	movlw	high __pdataBANK0
  1326     009E  0087               	movwf	7
  1327     009F  3006               	movlw	6
  1328     00A0  318B  233F  3180   	fcall	init_ram
  1329                           
  1330                           ; Initialize objects allocated to BANK1
  1331     00A3  3018               	movlw	low __pidataBANK1
  1332     00A4  0084               	movwf	4
  1333     00A5  308D               	movlw	(high __pidataBANK1)| (0+128)
  1334     00A6  0085               	movwf	5
  1335     00A7  30A0               	movlw	low __pdataBANK1
  1336     00A8  0086               	movwf	6
  1337     00A9  3000               	movlw	high __pdataBANK1
  1338     00AA  0087               	movwf	7
  1339     00AB  3034               	movlw	52
  1340     00AC  318B  233F  3180   	fcall	init_ram
  1341                           
  1342                           ; Initialize objects allocated to BANK2
  1343     00AF  30C6               	movlw	low __pidataBANK2
  1344     00B0  0084               	movwf	4
  1345     00B1  308B               	movlw	(high __pidataBANK2)| (0+128)
  1346     00B2  0085               	movwf	5
  1347     00B3  3051               	movlw	low __pdataBANK2
  1348     00B4  0086               	movwf	6
  1349     00B5  3001               	movlw	high __pdataBANK2
  1350     00B6  0087               	movwf	7
  1351     00B7  3011               	movlw	17
  1352     00B8  318B  233F  3180   	fcall	init_ram
  1353                           
  1354                           ; Clear objects allocated to BANK0
  1355     00BB  3055               	movlw	low __pbssBANK0
  1356     00BC  0084               	movwf	4
  1357     00BD  3000               	movlw	high __pbssBANK0
  1358     00BE  0085               	movwf	5
  1359     00BF  3014               	movlw	20
  1360     00C0  318B  2339  3180   	fcall	clear_ram0
  1361                           
  1362                           ; Clear objects allocated to BANK1
  1363     00C3  30D4               	movlw	low __pbssBANK1
  1364     00C4  0084               	movwf	4
  1365     00C5  3000               	movlw	high __pbssBANK1
  1366     00C6  0085               	movwf	5
  1367     00C7  301C               	movlw	28
  1368     00C8  318B  2339  3180   	fcall	clear_ram0
  1369                           
  1370                           ; Clear objects allocated to BANK2
  1371     00CB  3020               	movlw	low __pbssBANK2
  1372     00CC  0084               	movwf	4
  1373     00CD  3001               	movlw	high __pbssBANK2
  1374     00CE  0085               	movwf	5
  1375     00CF  3031               	movlw	49
  1376     00D0  318B  2339  3180   	fcall	clear_ram0
  1377     00D3                     end_of_initialization:	
  1378                           ;End of C runtime variable initialization code
  1379                           
  1380     00D3                     __end_of__initialization:
  1381     00D3  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1382     00D4  0020               	movlb	0
  1383     00D5  318F  2F6C         	ljmp	_main	;jump to C main() function
  1384                           
  1385                           	psect	dataCOMMON
  1386     0079                     __pdataCOMMON:
  1387     0079                     _cycle:
  1388     0079                     	ds	2
  1389     007B                     _frequency:
  1390     007B                     	ds	2
  1391                           
  1392                           	psect	bssBANK0
  1393     0055                     __pbssBANK0:
  1394     0055                     _currentCommand:
  1395     0055                     	ds	15
  1396     0064                     _currentInput:
  1397     0064                     	ds	2
  1398     0066                     _I2CStage:
  1399     0066                     	ds	2
  1400     0068                     _color:
  1401     0068                     	ds	1
  1402                           
  1403                           	psect	dataBANK0
  1404     0069                     __pdataBANK0:
  1405     0069                     _CONTROL_OUTPUT:
  1406     0069                     	ds	2
  1407     006B                     _GREEN:
  1408     006B                     	ds	1
  1409     006C                     _BLUE:
  1410     006C                     	ds	1
  1411     006D                     _RED:
  1412     006D                     	ds	1
  1413     006E                     _newI2CMessage:
  1414     006E                     	ds	1
  1415                           
  1416                           	psect	bssBANK1
  1417     00D4                     __pbssBANK1:
  1418     00D4                     _controls:
  1419     00D4                     	ds	22
  1420     00EA                     _counter:
  1421     00EA                     	ds	2
  1422     00EC                     _commandIt:
  1423     00EC                     	ds	2
  1424     00EE                     _inputStage:
  1425     00EE                     	ds	2
  1426                           
  1427                           	psect	dataBANK1
  1428     00A0                     __pdataBANK1:
  1429     00A0                     _SWITCH_MID:
  1430     00A0                     	ds	2
  1431     00A2                     _SWITCH_MIN:
  1432     00A2                     	ds	2
  1433     00A4                     _SWITCH_MAX:
  1434     00A4                     	ds	2
  1435     00A6                     _MoveBackwardCommand:
  1436     00A6                     	ds	10
  1437     00B0                     _MoveForwardCommand:
  1438     00B0                     	ds	10
  1439     00BA                     _TurnRightCommand:
  1440     00BA                     	ds	10
  1441     00C4                     _TurnLeftCommand:
  1442     00C4                     	ds	10
  1443     00CE                     _GetUserDataCommand:
  1444     00CE                     	ds	6
  1445                           
  1446                           	psect	bssBANK2
  1447     0120                     __pbssBANK2:
  1448     0120                     _Controls:
  1449     0120                     	ds	22
  1450     0136                     _Command:
  1451     0136                     	ds	15
  1452     0145                     _colors:
  1453     0145                     	ds	12
  1454                           
  1455                           	psect	dataBANK2
  1456     0151                     __pdataBANK2:
  1457     0151                     _EnableLaserScopeCommand:
  1458     0151                     	ds	7
  1459     0158                     _Break:
  1460     0158                     	ds	10
  1461                           
  1462                           	psect	inittext
  1463     0B3F                     init_ram:
  1464     0B3F  00FE               	movwf	btemp
  1465     0B40                     initloop:
  1466     0B40  0012               	moviw fsr0++
  1467     0B41  001E               	movwi fsr1++
  1468     0B42  0BFE               	decfsz	btemp,f
  1469     0B43  2B40               	goto	initloop
  1470     0B44  3400               	retlw	0
  1471                           
  1472                           	psect	clrtext
  1473     0B39                     clear_ram0:	
  1474                           ;	Called with FSR0 containing the base address, and
  1475                           ;	WREG with the size to clear
  1476                           
  1477     0B39  0064               	clrwdt	;clear the watchdog before getting into this loop
  1478     0B3A                     clrloop0:
  1479     0B3A  0180               	clrf	0	;clear RAM location pointed to by FSR
  1480     0B3B  3101               	addfsr 0,1
  1481     0B3C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1482     0B3D  2B3A               	goto	clrloop0	;have we reached the end yet?
  1483     0B3E  3400               	retlw	0	;all done for this memory range, return
  1484                           
  1485                           	psect	cstackCOMMON
  1486     0070                     __pcstackCOMMON:
  1487     0070                     ?_StartIC2Transmission:
  1488     0070                     ?_StartWriteRequest:	
  1489                           ; 1 bytes @ 0x0
  1490                           
  1491     0070                     ?_RepeatedStart:	
  1492                           ; 1 bytes @ 0x0
  1493                           
  1494     0070                     ?_StartReadRequest:	
  1495                           ; 1 bytes @ 0x0
  1496                           
  1497     0070                     ?_EndIC2Transmission:	
  1498                           ; 1 bytes @ 0x0
  1499                           
  1500     0070                     ?_SetUpPumpArm:	
  1501                           ; 1 bytes @ 0x0
  1502                           
  1503     0070                     ?_SetUpPump:	
  1504                           ; 1 bytes @ 0x0
  1505                           
  1506     0070                     ?_CreateControlsCommand:	
  1507                           ; 1 bytes @ 0x0
  1508                           
  1509     0070                     ?_drive:	
  1510                           ; 1 bytes @ 0x0
  1511                           
  1512     0070                     ?_CreateBreak:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515     0070                     ?_SetUpI2CPins:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518     0070                     ?_SetUpIC2Clock:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521     0070                     ?_SetUpI2C:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524     0070                     ?_Reset:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527     0070                     ?_StartI2C:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530     0070                     ?_EndI2C:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533     0070                     ?_WriteI2C:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536     0070                     ?_ReadAddressI2C:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539     0070                     ?_ReadI2C:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542     0070                     ?_RepeatI2C:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545     0070                     ?_IncrementColorStage:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548     0070                     ?_GetValueAndEndI2C:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551     0070                     ?_SetUpColorSensor:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554     0070                     ?_main:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557     0070                     ?_GetControllerInput:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560     0070                     ?_myFunction:	
  1561                           ; 1 bytes @ 0x0
  1562                           
  1563     0070                     GetControllerInput@input:	
  1564                           ; 1 bytes @ 0x0
  1565                           
  1566                           
  1567                           ; 2 bytes @ 0x0
  1568     0070                     	ds	2
  1569     0072                     ??_GetControllerInput:
  1570                           
  1571                           ; 1 bytes @ 0x2
  1572     0072                     	ds	3
  1573     0075                     ??_myFunction:
  1574                           
  1575                           ; 1 bytes @ 0x5
  1576     0075                     	ds	2
  1577     0077                     myFunction@input:
  1578                           
  1579                           ; 2 bytes @ 0x7
  1580     0077                     	ds	2
  1581                           
  1582                           	psect	cstackBANK0
  1583     0020                     __pcstackBANK0:
  1584     0020                     ??_StartIC2Transmission:
  1585     0020                     ??_StartWriteRequest:	
  1586                           ; 1 bytes @ 0x0
  1587                           
  1588     0020                     ??_RepeatedStart:	
  1589                           ; 1 bytes @ 0x0
  1590                           
  1591     0020                     ??_StartReadRequest:	
  1592                           ; 1 bytes @ 0x0
  1593                           
  1594     0020                     ??_EndIC2Transmission:	
  1595                           ; 1 bytes @ 0x0
  1596                           
  1597     0020                     ??_SetUpPumpArm:	
  1598                           ; 1 bytes @ 0x0
  1599                           
  1600     0020                     ??_SetUpPump:	
  1601                           ; 1 bytes @ 0x0
  1602                           
  1603     0020                     ??_CreateControlsCommand:	
  1604                           ; 1 bytes @ 0x0
  1605                           
  1606     0020                     ?_MovePumpArm:	
  1607                           ; 1 bytes @ 0x0
  1608                           
  1609     0020                     ?_ActivatePump:	
  1610                           ; 1 bytes @ 0x0
  1611                           
  1612     0020                     ?_CreateTurnRightCommmand:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615     0020                     ?_CreateTurnLeftCommmand:	
  1616                           ; 1 bytes @ 0x0
  1617                           
  1618     0020                     ?_CreateMoveForwardCommmand:	
  1619                           ; 1 bytes @ 0x0
  1620                           
  1621     0020                     ?_CreateMoveBackwardCommmand:	
  1622                           ; 1 bytes @ 0x0
  1623                           
  1624     0020                     ??_CreateBreak:	
  1625                           ; 1 bytes @ 0x0
  1626                           
  1627     0020                     ??_SetUpI2CPins:	
  1628                           ; 1 bytes @ 0x0
  1629                           
  1630     0020                     ??_SetUpIC2Clock:	
  1631                           ; 1 bytes @ 0x0
  1632                           
  1633     0020                     ??_SetUpI2C:	
  1634                           ; 1 bytes @ 0x0
  1635                           
  1636     0020                     ?_SelectColourRegister:	
  1637                           ; 1 bytes @ 0x0
  1638                           
  1639     0020                     ??_Reset:	
  1640                           ; 1 bytes @ 0x0
  1641                           
  1642     0020                     ??_StartI2C:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645     0020                     ??_EndI2C:	
  1646                           ; 1 bytes @ 0x0
  1647                           
  1648     0020                     ??_WriteI2C:	
  1649                           ; 1 bytes @ 0x0
  1650                           
  1651     0020                     ??_ReadAddressI2C:	
  1652                           ; 1 bytes @ 0x0
  1653                           
  1654     0020                     ??_ReadI2C:	
  1655                           ; 1 bytes @ 0x0
  1656                           
  1657     0020                     ??_RepeatI2C:	
  1658                           ; 1 bytes @ 0x0
  1659                           
  1660     0020                     ??_IncrementColorStage:	
  1661                           ; 1 bytes @ 0x0
  1662                           
  1663     0020                     ?_LoadTemp:	
  1664                           ; 1 bytes @ 0x0
  1665                           
  1666     0020                     ?__Umul8_16:	
  1667                           ; 1 bytes @ 0x0
  1668                           
  1669     0020                     ?_SetUp:	
  1670                           ; 2 bytes @ 0x0
  1671                           
  1672     0020                     ?___awmod:	
  1673                           ; 2 bytes @ 0x0
  1674                           
  1675     0020                     ?___xxtofl:	
  1676                           ; 2 bytes @ 0x0
  1677                           
  1678     0020                     Reset@colors:	
  1679                           ; 4 bytes @ 0x0
  1680                           
  1681     0020                     IncrementColorStage@colors:	
  1682                           ; 1 bytes @ 0x0
  1683                           
  1684     0020                     LoadTemp@value:	
  1685                           ; 1 bytes @ 0x0
  1686                           
  1687     0020                     __Umul8_16@multiplicand:	
  1688                           ; 1 bytes @ 0x0
  1689                           
  1690     0020                     SelectColourRegister@colorStage:	
  1691                           ; 1 bytes @ 0x0
  1692                           
  1693     0020                     CreateTurnRightCommmand@pwm:	
  1694                           ; 2 bytes @ 0x0
  1695                           
  1696     0020                     CreateTurnLeftCommmand@pwm:	
  1697                           ; 2 bytes @ 0x0
  1698                           
  1699     0020                     CreateMoveForwardCommmand@pwm:	
  1700                           ; 2 bytes @ 0x0
  1701                           
  1702     0020                     CreateMoveBackwardCommmand@pwm:	
  1703                           ; 2 bytes @ 0x0
  1704                           
  1705     0020                     MovePumpArm@switchValue:	
  1706                           ; 2 bytes @ 0x0
  1707                           
  1708     0020                     ActivatePump@switchValue:	
  1709                           ; 2 bytes @ 0x0
  1710                           
  1711     0020                     ___awmod@divisor:	
  1712                           ; 2 bytes @ 0x0
  1713                           
  1714     0020                     ___xxtofl@val:	
  1715                           ; 2 bytes @ 0x0
  1716                           
  1717                           
  1718                           ; 4 bytes @ 0x0
  1719     0020                     	ds	1
  1720     0021                     ??_LoadTemp:
  1721     0021                     ?_ReadColorReady:	
  1722                           ; 1 bytes @ 0x1
  1723                           
  1724     0021                     LoadTemp@colors:	
  1725                           ; 1 bytes @ 0x1
  1726                           
  1727     0021                     ReadColorReady@buffer:	
  1728                           ; 1 bytes @ 0x1
  1729                           
  1730                           
  1731                           ; 1 bytes @ 0x1
  1732     0021                     	ds	1
  1733     0022                     ??_MovePumpArm:
  1734     0022                     ??_ActivatePump:	
  1735                           ; 1 bytes @ 0x2
  1736                           
  1737     0022                     ??_CreateTurnRightCommmand:	
  1738                           ; 1 bytes @ 0x2
  1739                           
  1740     0022                     ??_CreateTurnLeftCommmand:	
  1741                           ; 1 bytes @ 0x2
  1742                           
  1743     0022                     ??_CreateMoveForwardCommmand:	
  1744                           ; 1 bytes @ 0x2
  1745                           
  1746     0022                     ??_CreateMoveBackwardCommmand:	
  1747                           ; 1 bytes @ 0x2
  1748                           
  1749     0022                     ??__Umul8_16:	
  1750                           ; 1 bytes @ 0x2
  1751                           
  1752     0022                     ??_SetUp:	
  1753                           ; 1 bytes @ 0x2
  1754                           
  1755     0022                     ??_SelectColourRegister:	
  1756                           ; 1 bytes @ 0x2
  1757                           
  1758     0022                     ??_ReadColorReady:	
  1759                           ; 1 bytes @ 0x2
  1760                           
  1761     0022                     SelectColourRegister@writeValue:	
  1762                           ; 1 bytes @ 0x2
  1763                           
  1764     0022                     ReadColorReady@colors:	
  1765                           ; 1 bytes @ 0x2
  1766                           
  1767     0022                     ___awmod@dividend:	
  1768                           ; 1 bytes @ 0x2
  1769                           
  1770                           
  1771                           ; 2 bytes @ 0x2
  1772     0022                     	ds	1
  1773     0023                     ??_GetValueAndEndI2C:
  1774     0023                     GetValueAndEndI2C@value:	
  1775                           ; 1 bytes @ 0x3
  1776                           
  1777                           
  1778                           ; 1 bytes @ 0x3
  1779     0023                     	ds	1
  1780     0024                     ??___awmod:
  1781     0024                     ??___xxtofl:	
  1782                           ; 1 bytes @ 0x4
  1783                           
  1784     0024                     GetValueAndEndI2C@colors:	
  1785                           ; 1 bytes @ 0x4
  1786                           
  1787     0024                     SetUp@value:	
  1788                           ; 1 bytes @ 0x4
  1789                           
  1790     0024                     __Umul8_16@product:	
  1791                           ; 2 bytes @ 0x4
  1792                           
  1793                           
  1794                           ; 2 bytes @ 0x4
  1795     0024                     	ds	1
  1796     0025                     ___awmod@counter:
  1797                           
  1798                           ; 1 bytes @ 0x5
  1799     0025                     	ds	1
  1800     0026                     ??_SetUpColorSensor:
  1801     0026                     ___awmod@sign:	
  1802                           ; 1 bytes @ 0x6
  1803                           
  1804     0026                     __Umul8_16@word_mpld:	
  1805                           ; 1 bytes @ 0x6
  1806                           
  1807                           
  1808                           ; 2 bytes @ 0x6
  1809     0026                     	ds	1
  1810     0027                     ?_UpdateColors:
  1811     0027                     UpdateColors@stageValue:	
  1812                           ; 1 bytes @ 0x7
  1813                           
  1814                           
  1815                           ; 2 bytes @ 0x7
  1816     0027                     	ds	1
  1817     0028                     __Umul8_16@multiplier:
  1818     0028                     ___xxtofl@sign:	
  1819                           ; 1 bytes @ 0x8
  1820                           
  1821     0028                     SetUpColorSensor@result:	
  1822                           ; 1 bytes @ 0x8
  1823                           
  1824                           
  1825                           ; 2 bytes @ 0x8
  1826     0028                     	ds	1
  1827     0029                     ??_UpdateColors:
  1828     0029                     ___xxtofl@exp:	
  1829                           ; 1 bytes @ 0x9
  1830                           
  1831                           
  1832                           ; 1 bytes @ 0x9
  1833     0029                     	ds	1
  1834     002A                     ___xxtofl@arg:
  1835                           
  1836                           ; 4 bytes @ 0xA
  1837     002A                     	ds	1
  1838     002B                     UpdateColors@colors:
  1839                           
  1840                           ; 1 bytes @ 0xB
  1841     002B                     	ds	1
  1842     002C                     ?_ColorSensor:
  1843     002C                     ColorSensor@I2CStage:	
  1844                           ; 1 bytes @ 0xC
  1845                           
  1846                           
  1847                           ; 1 bytes @ 0xC
  1848     002C                     	ds	1
  1849     002D                     ColorSensor@colors:
  1850                           
  1851                           ; 1 bytes @ 0xD
  1852     002D                     	ds	1
  1853     002E                     ?___flmul:
  1854     002E                     ColorSensor@color:	
  1855                           ; 4 bytes @ 0xE
  1856                           
  1857     002E                     ___flmul@b:	
  1858                           ; 1 bytes @ 0xE
  1859                           
  1860                           
  1861                           ; 4 bytes @ 0xE
  1862     002E                     	ds	1
  1863     002F                     ??_ColorSensor:
  1864                           
  1865                           ; 1 bytes @ 0xF
  1866     002F                     	ds	3
  1867     0032                     ___flmul@a:
  1868                           
  1869                           ; 4 bytes @ 0x12
  1870     0032                     	ds	2
  1871     0034                     ColorSensor@newI2CMessage:
  1872                           
  1873                           ; 1 bytes @ 0x14
  1874     0034                     	ds	2
  1875     0036                     ??___flmul:
  1876                           
  1877                           ; 1 bytes @ 0x16
  1878     0036                     	ds	5
  1879     003B                     ___flmul@sign:
  1880                           
  1881                           ; 1 bytes @ 0x1B
  1882     003B                     	ds	1
  1883     003C                     ___flmul@grs:
  1884                           
  1885                           ; 4 bytes @ 0x1C
  1886     003C                     	ds	4
  1887     0040                     ___flmul@aexp:
  1888                           
  1889                           ; 1 bytes @ 0x20
  1890     0040                     	ds	1
  1891     0041                     ___flmul@bexp:
  1892                           
  1893                           ; 1 bytes @ 0x21
  1894     0041                     	ds	1
  1895     0042                     ___flmul@prod:
  1896                           
  1897                           ; 4 bytes @ 0x22
  1898     0042                     	ds	4
  1899     0046                     ___flmul@temp:
  1900                           
  1901                           ; 2 bytes @ 0x26
  1902     0046                     	ds	2
  1903     0048                     ?___fltol:
  1904     0048                     ___fltol@f1:	
  1905                           ; 4 bytes @ 0x28
  1906                           
  1907                           
  1908                           ; 4 bytes @ 0x28
  1909     0048                     	ds	4
  1910     004C                     ??___fltol:
  1911                           
  1912                           ; 1 bytes @ 0x2C
  1913     004C                     	ds	4
  1914     0050                     ___fltol@sign1:
  1915                           
  1916                           ; 1 bytes @ 0x30
  1917     0050                     	ds	1
  1918     0051                     ___fltol@exp1:
  1919                           
  1920                           ; 1 bytes @ 0x31
  1921     0051                     	ds	1
  1922     0052                     ??_drive:
  1923                           
  1924                           ; 1 bytes @ 0x32
  1925     0052                     	ds	1
  1926     0053                     drive@power:
  1927                           
  1928                           ; 2 bytes @ 0x33
  1929     0053                     	ds	2
  1930     0055                     ??_main:
  1931                           
  1932                           	psect	maintext
  1933     0F6C                     __pmaintext:	
  1934                           ; 1 bytes @ 0x35
  1935 ;;
  1936 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1937 ;;
  1938 ;; *************** function _main *****************
  1939 ;; Defined at:
  1940 ;;		line 126 in file "motorMain.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;		None
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;		None
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  1    wreg      void 
  1947 ;; Registers used:
  1948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1949 ;; Tracked objects:
  1950 ;;		On entry : B1F/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1958 ;;Total ram usage:        0 bytes
  1959 ;; Hardware stack levels required when called: 7
  1960 ;; This function calls:
  1961 ;;		_ActivatePump
  1962 ;;		_ColorSensor
  1963 ;;		_CreateControlsCommand
  1964 ;;		_MovePumpArm
  1965 ;;		_SetUpColorSensor
  1966 ;;		_SetUpPump
  1967 ;;		_SetUpPumpArm
  1968 ;;		_drive
  1969 ;; This function is called by:
  1970 ;;		Startup code after reset
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974     0F6C                     _main:	
  1975                           ;psect for function _main
  1976                           
  1977     0F6C                     l3054:	
  1978                           ;incstack = 0
  1979                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1980                           
  1981                           
  1982                           ;motorMain.c: 128:    TRISAbits.TRISA5 = 1;
  1983     0F6C  0020               	movlb	0	; select bank0
  1984     0F6D  1691               	bsf	17,5	;volatile
  1985                           
  1986                           ;motorMain.c: 129:     ANSELAbits.ANSA5 = 0;
  1987     0F6E  003E               	movlb	30	; select bank30
  1988     0F6F  12B8               	bcf	56,5	;volatile
  1989                           
  1990                           ;motorMain.c: 131:     TRISAbits.TRISA0 = 0;
  1991     0F70  0020               	movlb	0	; select bank0
  1992     0F71  1011               	bcf	17,0	;volatile
  1993                           
  1994                           ;motorMain.c: 132:     TRISAbits.TRISA1 = 0;
  1995     0F72  1091               	bcf	17,1	;volatile
  1996                           
  1997                           ;motorMain.c: 133:     TRISAbits.TRISA2 = 0;
  1998     0F73  1111               	bcf	17,2	;volatile
  1999                           
  2000                           ;motorMain.c: 134:     TRISAbits.TRISA3 = 0;
  2001     0F74  1191               	bcf	17,3	;volatile
  2002                           
  2003                           ;motorMain.c: 137:     LATAbits.LATA0 = 0;
  2004     0F75  1016               	bcf	22,0	;volatile
  2005                           
  2006                           ;motorMain.c: 138:     LATAbits.LATA1 = 0;
  2007     0F76  1096               	bcf	22,1	;volatile
  2008                           
  2009                           ;motorMain.c: 139:     LATAbits.LATA2 = 0;
  2010     0F77  1116               	bcf	22,2	;volatile
  2011                           
  2012                           ;motorMain.c: 140:     LATAbits.LATA3 = 0;
  2013     0F78  1196               	bcf	22,3	;volatile
  2014     0F79                     l3056:
  2015                           
  2016                           ;motorMain.c: 142:     SetUpPumpArm();
  2017     0F79  318B  237C  318F   	fcall	_SetUpPumpArm
  2018                           
  2019                           ;motorMain.c: 143:     SetUpPump();
  2020     0F7C  318B  2372  318F   	fcall	_SetUpPump
  2021     0F7F                     l3058:
  2022                           
  2023                           ;motorMain.c: 145:     BAUD1CONbits.BRG16=1;
  2024     0F7F  0022               	movlb	2	; select bank2
  2025     0F80  159F               	bsf	31,3	;volatile
  2026     0F81                     l3060:
  2027                           
  2028                           ;motorMain.c: 147:     TX1STAbits.BRGH = 0x1;
  2029     0F81  151E               	bsf	30,2	;volatile
  2030     0F82                     l3062:
  2031                           
  2032                           ;motorMain.c: 151:     RC5PPS = 0x10;
  2033     0F82  3010               	movlw	16
  2034     0F83  003E               	movlb	30	; select bank30
  2035     0F84  00A5               	movwf	37	;volatile
  2036     0F85                     l3064:
  2037                           
  2038                           ;motorMain.c: 152:     TRISCbits.TRISC5 = 0;
  2039     0F85  0020               	movlb	0	; select bank0
  2040     0F86  1293               	bcf	19,5	;volatile
  2041     0F87                     l3066:
  2042                           
  2043                           ;motorMain.c: 154:     RXPPSbits.RXPPS = 0x16;
  2044     0F87  003D               	movlb	29	; select bank29
  2045     0F88  084B               	movf	75,w	;volatile
  2046     0F89  39E0               	andlw	-32
  2047     0F8A  3816               	iorlw	22
  2048     0F8B  00CB               	movwf	75	;volatile
  2049     0F8C                     l3068:
  2050                           
  2051                           ;motorMain.c: 155:     TRISCbits.TRISC6 = 1;
  2052     0F8C  0020               	movlb	0	; select bank0
  2053     0F8D  1713               	bsf	19,6	;volatile
  2054     0F8E                     l3070:
  2055                           
  2056                           ;motorMain.c: 156:     ANSELCbits.ANSC6 = 0;
  2057     0F8E  003E               	movlb	30	; select bank30
  2058     0F8F  134E               	bcf	78,6	;volatile
  2059     0F90                     l3072:
  2060                           
  2061                           ;motorMain.c: 159:     SP1BRGLbits.SP1BRGL = 68;
  2062     0F90  3044               	movlw	68
  2063     0F91  0022               	movlb	2	; select bank2
  2064     0F92  009B               	movwf	27	;volatile
  2065     0F93                     l3074:
  2066                           
  2067                           ;motorMain.c: 161:     CreateControlsCommand();
  2068     0F93  318C  2453  318F   	fcall	_CreateControlsCommand
  2069     0F96                     l3076:
  2070                           
  2071                           ;motorMain.c: 164:     RC1STAbits.SPEN = 1;
  2072     0F96  0022               	movlb	2	; select bank2
  2073     0F97  179D               	bsf	29,7	;volatile
  2074     0F98                     l3078:
  2075                           
  2076                           ;motorMain.c: 165:     TX1STAbits.TXEN =1;
  2077     0F98  169E               	bsf	30,5	;volatile
  2078     0F99                     l3080:
  2079                           
  2080                           ;motorMain.c: 166:     TX1STAbits.SYNC=0;
  2081     0F99  121E               	bcf	30,4	;volatile
  2082     0F9A                     l3082:
  2083                           
  2084                           ;motorMain.c: 168:     RC1STAbits.CREN = 1;
  2085     0F9A  161D               	bsf	29,4	;volatile
  2086     0F9B                     l3084:
  2087                           
  2088                           ;motorMain.c: 171:     SetUpColorSensor();
  2089     0F9B  318E  263D  318F   	fcall	_SetUpColorSensor
  2090     0F9E                     l3086:
  2091                           
  2092                           ;motorMain.c: 177:     INTCONbits.PEIE = 1;
  2093     0F9E  170B               	bsf	11,6	;volatile
  2094     0F9F                     l3088:
  2095                           
  2096                           ;motorMain.c: 178:     PIE3bits.RCIE = 1;
  2097     0F9F  002E               	movlb	14	; select bank14
  2098     0FA0  1699               	bsf	25,5	;volatile
  2099     0FA1                     l3090:
  2100                           
  2101                           ;motorMain.c: 179:     PIE3bits.TXIE = 1;
  2102     0FA1  1619               	bsf	25,4	;volatile
  2103     0FA2                     l3092:
  2104                           
  2105                           ;motorMain.c: 180:     PIE3bits.SSP1IE = 1;
  2106     0FA2  1419               	bsf	25,0	;volatile
  2107     0FA3                     l3094:
  2108                           
  2109                           ;motorMain.c: 181:     INTCONbits.GIE = 1;
  2110     0FA3  178B               	bsf	11,7	;volatile
  2111     0FA4                     l3096:
  2112                           
  2113                           ;motorMain.c: 185:         if(controls.switchA <= SWITCH_MIN){
  2114     0FA4  3003               	movlw	3
  2115     0FA5  0021               	movlb	1	; select bank1
  2116     0FA6  025D               	subwf	((_controls+1)^(0+128)+8),w
  2117     0FA7  30E9               	movlw	233
  2118     0FA8  1903               	skipnz
  2119     0FA9  025C               	subwf	(_controls^(0+128)+8),w
  2120     0FAA  1803               	skipnc
  2121     0FAB  2FAD               	goto	u2331
  2122     0FAC  2FAE               	goto	u2330
  2123     0FAD                     u2331:
  2124     0FAD  2FD9               	goto	l3104
  2125     0FAE                     u2330:
  2126     0FAE                     l3098:
  2127                           
  2128                           ;motorMain.c: 187:             MovePumpArm(controls.switchC);
  2129     0FAE  0861               	movf	((_controls+1)^(0+128)+12),w
  2130     0FAF  0020               	movlb	0	; select bank0
  2131     0FB0  00A1               	movwf	MovePumpArm@switchValue+1
  2132     0FB1  0021               	movlb	1	; select bank1
  2133     0FB2  0860               	movf	(_controls^(0+128)+12),w
  2134     0FB3  0020               	movlb	0	; select bank0
  2135     0FB4  00A0               	movwf	MovePumpArm@switchValue
  2136     0FB5  318C  2438  318F   	fcall	_MovePumpArm
  2137                           
  2138                           ;motorMain.c: 188:             ActivatePump(controls.switchD);
  2139     0FB8  0021               	movlb	1	; select bank1
  2140     0FB9  0863               	movf	((_controls+1)^(0+128)+14),w
  2141     0FBA  0020               	movlb	0	; select bank0
  2142     0FBB  00A1               	movwf	ActivatePump@switchValue+1
  2143     0FBC  0021               	movlb	1	; select bank1
  2144     0FBD  0862               	movf	(_controls^(0+128)+14),w
  2145     0FBE  0020               	movlb	0	; select bank0
  2146     0FBF  00A0               	movwf	ActivatePump@switchValue
  2147     0FC0  318B  2386  318F   	fcall	_ActivatePump
  2148     0FC3                     l3100:
  2149                           
  2150                           ;motorMain.c: 190:             if(controls.switchB <= SWITCH_MIN){
  2151     0FC3  3003               	movlw	3
  2152     0FC4  0021               	movlb	1	; select bank1
  2153     0FC5  025F               	subwf	((_controls+1)^(0+128)+10),w
  2154     0FC6  30E9               	movlw	233
  2155     0FC7  1903               	skipnz
  2156     0FC8  025E               	subwf	(_controls^(0+128)+10),w
  2157     0FC9  1803               	skipnc
  2158     0FCA  2FCC               	goto	u2341
  2159     0FCB  2FCD               	goto	u2340
  2160     0FCC                     u2341:
  2161     0FCC  2FEA               	goto	l3106
  2162     0FCD                     u2340:
  2163     0FCD                     l3102:
  2164                           
  2165                           ;motorMain.c: 191:                 ColorSensor(&newI2CMessage,&I2CStage,&colors,&color);
  2166     0FCD  3066               	movlw	(low (_I2CStage| 0))& (0+255)
  2167     0FCE  0020               	movlb	0	; select bank0
  2168     0FCF  00AC               	movwf	ColorSensor@I2CStage
  2169     0FD0  3045               	movlw	(low (_colors| (0+256)))& (0+255)
  2170     0FD1  00AD               	movwf	ColorSensor@colors
  2171     0FD2  3068               	movlw	(low (_color| 0))& (0+255)
  2172     0FD3  00AE               	movwf	ColorSensor@color
  2173     0FD4  306E               	movlw	(low (_newI2CMessage| 0))& (0+255)
  2174     0FD5  3185  258C  318F   	fcall	_ColorSensor
  2175     0FD8  2FEA               	goto	l3118
  2176     0FD9                     l3104:
  2177                           
  2178                           ;motorMain.c: 196:             MovePumpArm(SWITCH_MID);
  2179     0FD9  30DC               	movlw	220
  2180     0FDA  0020               	movlb	0	; select bank0
  2181     0FDB  00A0               	movwf	MovePumpArm@switchValue
  2182     0FDC  3005               	movlw	5
  2183     0FDD  00A1               	movwf	MovePumpArm@switchValue+1
  2184     0FDE  318C  2438  318F   	fcall	_MovePumpArm
  2185                           
  2186                           ;motorMain.c: 197:             ActivatePump(SWITCH_MAX);
  2187     0FE1  30D0               	movlw	208
  2188     0FE2  0020               	movlb	0	; select bank0
  2189     0FE3  00A0               	movwf	ActivatePump@switchValue
  2190     0FE4  3007               	movlw	7
  2191     0FE5  00A1               	movwf	ActivatePump@switchValue+1
  2192     0FE6  318B  2386  318F   	fcall	_ActivatePump
  2193     0FE9  2FEA               	goto	l3118
  2194     0FEA                     l3106:
  2195     0FEA                     l3118:
  2196                           
  2197                           ;motorMain.c: 219:         if(currentCommand.done){
  2198     0FEA  0020               	movlb	0	; select bank0
  2199     0FEB  0863               	movf	_currentCommand+14,w
  2200     0FEC  1903               	btfsc	3,2
  2201     0FED  2FEF               	goto	u2351
  2202     0FEE  2FF0               	goto	u2350
  2203     0FEF                     u2351:
  2204     0FEF  2FA4               	goto	l3096
  2205     0FF0                     u2350:
  2206     0FF0                     l3120:
  2207                           
  2208                           ;motorMain.c: 220:             if(currentCommand.sendId == CONTROL_INPUT){
  2209     0FF0  0359               	decf	_currentCommand+4,w
  2210     0FF1  045A               	iorwf	_currentCommand+5,w
  2211     0FF2  1D03               	btfss	3,2
  2212     0FF3  2FF5               	goto	u2361
  2213     0FF4  2FF6               	goto	u2360
  2214     0FF5                     u2361:
  2215     0FF5  2FFA               	goto	l3124
  2216     0FF6                     u2360:
  2217     0FF6                     l3122:
  2218                           
  2219                           ;motorMain.c: 221:                 drive();
  2220     0FF6  3183  2312  318F   	fcall	_drive
  2221                           
  2222                           ;motorMain.c: 222:             }
  2223     0FF9  2FA4               	goto	l3096
  2224     0FFA                     l3124:
  2225                           
  2226                           ;motorMain.c: 224:                 CreateControlsCommand();
  2227     0FFA  318C  2453  318F   	fcall	_CreateControlsCommand
  2228     0FFD  2FA4               	goto	l3096
  2229     0FFE  3180  2889         	ljmp	start
  2230     1000                     __end_of_main:
  2231                           
  2232                           	psect	text1
  2233     0312                     __ptext1:	
  2234 ;; *************** function _drive *****************
  2235 ;; Defined at:
  2236 ;;		line 263 in file "motorMain.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;		None
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;  power           2   51[BANK0 ] unsigned int 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      void 
  2243 ;; Registers used:
  2244 ;;		wreg, status,2, status,0, pclath, cstack
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2251 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2252 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2253 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2254 ;;Total ram usage:        3 bytes
  2255 ;; Hardware stack levels used: 1
  2256 ;; Hardware stack levels required when called: 4
  2257 ;; This function calls:
  2258 ;;		_CreateBreak
  2259 ;;		_CreateControlsCommand
  2260 ;;		_CreateMoveBackwardCommmand
  2261 ;;		_CreateMoveForwardCommmand
  2262 ;;		_CreateTurnLeftCommmand
  2263 ;;		_CreateTurnRightCommmand
  2264 ;;		___flmul
  2265 ;;		___fltol
  2266 ;;		___xxtofl
  2267 ;; This function is called by:
  2268 ;;		_main
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272     0312                     _drive:	
  2273                           ;psect for function _drive
  2274                           
  2275     0312                     l2792:	
  2276                           ;incstack = 0
  2277                           ; Regs used in _drive: [wreg+status,2+status,0+pclath+cstack]
  2278                           
  2279                           
  2280                           ;motorMain.c: 265:     unsigned int power = (controls.potentionmeterB - 0x3E8) * (100.0/
      +                          1000.00);
  2281     0312  0021               	movlb	1	; select bank1
  2282     0313  0866               	movf	(_controls^(0+128)+18),w
  2283     0314  3E18               	addlw	24
  2284     0315  0020               	movlb	0	; select bank0
  2285     0316  00A0               	movwf	___xxtofl@val
  2286     0317  30FC               	movlw	252
  2287     0318  0021               	movlb	1	; select bank1
  2288     0319  3D67               	addwfc	((_controls+1)^(0+128)+18),w
  2289     031A  0020               	movlb	0	; select bank0
  2290     031B  00A1               	movwf	___xxtofl@val+1
  2291     031C  01A2               	clrf	___xxtofl@val+2
  2292     031D  1BA1               	btfsc	___xxtofl@val+1,7
  2293     031E  03A2               	decf	___xxtofl@val+2,f
  2294     031F  0822               	movf	___xxtofl@val+2,w
  2295     0320  00A3               	movwf	___xxtofl@val+3
  2296     0321  3001               	movlw	1
  2297     0322  3187  274C  3183   	fcall	___xxtofl
  2298     0325  0020               	movlb	0	; select bank0
  2299     0326  0823               	movf	?___xxtofl+3,w
  2300     0327  00B5               	movwf	___flmul@a+3
  2301     0328  0822               	movf	?___xxtofl+2,w
  2302     0329  00B4               	movwf	___flmul@a+2
  2303     032A  0821               	movf	?___xxtofl+1,w
  2304     032B  00B3               	movwf	___flmul@a+1
  2305     032C  0820               	movf	?___xxtofl,w
  2306     032D  00B2               	movwf	___flmul@a
  2307     032E  303D               	movlw	61
  2308     032F  00B1               	movwf	___flmul@b+3
  2309     0330  30CC               	movlw	204
  2310     0331  00B0               	movwf	___flmul@b+2
  2311     0332  30CC               	movlw	204
  2312     0333  00AF               	movwf	___flmul@b+1
  2313     0334  30CD               	movlw	205
  2314     0335  00AE               	movwf	___flmul@b
  2315     0336  3180  20D7  3183   	fcall	___flmul
  2316     0339  0020               	movlb	0	; select bank0
  2317     033A  0831               	movf	?___flmul+3,w
  2318     033B  00CB               	movwf	___fltol@f1+3
  2319     033C  0830               	movf	?___flmul+2,w
  2320     033D  00CA               	movwf	___fltol@f1+2
  2321     033E  082F               	movf	?___flmul+1,w
  2322     033F  00C9               	movwf	___fltol@f1+1
  2323     0340  082E               	movf	?___flmul,w
  2324     0341  00C8               	movwf	___fltol@f1
  2325     0342  318E  26FB  3183   	fcall	___fltol
  2326     0345  0020               	movlb	0	; select bank0
  2327     0346  0849               	movf	?___fltol+1,w
  2328     0347  00D4               	movwf	drive@power+1
  2329     0348  0848               	movf	?___fltol,w
  2330     0349  00D3               	movwf	drive@power
  2331     034A                     l2794:
  2332                           
  2333                           ;motorMain.c: 267:     if((controls.rightX >= 0x6A4) && (controls.rightY >= 0x546 && con
      +                          trols.rightY <= 0x672)){
  2334     034A  0021               	movlb	1	; select bank1
  2335     034B  0855               	movf	(_controls+1)^(0+128),w
  2336     034C  3A80               	xorlw	128
  2337     034D  0020               	movlb	0	; select bank0
  2338     034E  00D2               	movwf	??_drive
  2339     034F  3086               	movlw	134
  2340     0350  0252               	subwf	??_drive,w
  2341     0351  1D03               	skipz
  2342     0352  2B56               	goto	u2145
  2343     0353  30A4               	movlw	164
  2344     0354  0021               	movlb	1	; select bank1
  2345     0355  0254               	subwf	_controls^(0+128),w
  2346     0356                     u2145:
  2347     0356  1C03               	skipc
  2348     0357  2B59               	goto	u2141
  2349     0358  2B5A               	goto	u2140
  2350     0359                     u2141:
  2351     0359  2B83               	goto	l2802
  2352     035A                     u2140:
  2353     035A                     l2796:
  2354     035A  0021               	movlb	1	; select bank1
  2355     035B  0857               	movf	((_controls+1)^(0+128)+2),w
  2356     035C  3A80               	xorlw	128
  2357     035D  0020               	movlb	0	; select bank0
  2358     035E  00D2               	movwf	??_drive
  2359     035F  3085               	movlw	133
  2360     0360  0252               	subwf	??_drive,w
  2361     0361  1D03               	skipz
  2362     0362  2B66               	goto	u2155
  2363     0363  3046               	movlw	70
  2364     0364  0021               	movlb	1	; select bank1
  2365     0365  0256               	subwf	(_controls^(0+128)+2),w
  2366     0366                     u2155:
  2367     0366  1C03               	skipc
  2368     0367  2B69               	goto	u2151
  2369     0368  2B6A               	goto	u2150
  2370     0369                     u2151:
  2371     0369  2B83               	goto	l2802
  2372     036A                     u2150:
  2373     036A                     l2798:
  2374     036A  0021               	movlb	1	; select bank1
  2375     036B  0857               	movf	((_controls+1)^(0+128)+2),w
  2376     036C  3A80               	xorlw	128
  2377     036D  0020               	movlb	0	; select bank0
  2378     036E  00D2               	movwf	??_drive
  2379     036F  3086               	movlw	134
  2380     0370  0252               	subwf	??_drive,w
  2381     0371  1D03               	skipz
  2382     0372  2B76               	goto	u2165
  2383     0373  3073               	movlw	115
  2384     0374  0021               	movlb	1	; select bank1
  2385     0375  0256               	subwf	(_controls^(0+128)+2),w
  2386     0376                     u2165:
  2387     0376  1803               	skipnc
  2388     0377  2B79               	goto	u2161
  2389     0378  2B7A               	goto	u2160
  2390     0379                     u2161:
  2391     0379  2B83               	goto	l2802
  2392     037A                     u2160:
  2393     037A                     l2800:
  2394                           
  2395                           ;motorMain.c: 268:         CreateTurnRightCommmand(power);
  2396     037A  0020               	movlb	0	; select bank0
  2397     037B  0854               	movf	drive@power+1,w
  2398     037C  00A1               	movwf	CreateTurnRightCommmand@pwm+1
  2399     037D  0853               	movf	drive@power,w
  2400     037E  00A0               	movwf	CreateTurnRightCommmand@pwm
  2401     037F  318C  24D3  3183   	fcall	_CreateTurnRightCommmand
  2402                           
  2403                           ;motorMain.c: 269:     }else if((controls.rightX <= 0x514) && (controls.rightY >= 0x546 
      +                          && controls.rightY <= 0x672)){
  2404     0382  2C75               	goto	l410
  2405     0383                     l2802:
  2406     0383  0021               	movlb	1	; select bank1
  2407     0384  0855               	movf	(_controls+1)^(0+128),w
  2408     0385  3A80               	xorlw	128
  2409     0386  0020               	movlb	0	; select bank0
  2410     0387  00D2               	movwf	??_drive
  2411     0388  3085               	movlw	133
  2412     0389  0252               	subwf	??_drive,w
  2413     038A  1D03               	skipz
  2414     038B  2B8F               	goto	u2175
  2415     038C  3015               	movlw	21
  2416     038D  0021               	movlb	1	; select bank1
  2417     038E  0254               	subwf	_controls^(0+128),w
  2418     038F                     u2175:
  2419     038F  1803               	skipnc
  2420     0390  2B92               	goto	u2171
  2421     0391  2B93               	goto	u2170
  2422     0392                     u2171:
  2423     0392  2BBC               	goto	l2810
  2424     0393                     u2170:
  2425     0393                     l2804:
  2426     0393  0021               	movlb	1	; select bank1
  2427     0394  0857               	movf	((_controls+1)^(0+128)+2),w
  2428     0395  3A80               	xorlw	128
  2429     0396  0020               	movlb	0	; select bank0
  2430     0397  00D2               	movwf	??_drive
  2431     0398  3085               	movlw	133
  2432     0399  0252               	subwf	??_drive,w
  2433     039A  1D03               	skipz
  2434     039B  2B9F               	goto	u2185
  2435     039C  3046               	movlw	70
  2436     039D  0021               	movlb	1	; select bank1
  2437     039E  0256               	subwf	(_controls^(0+128)+2),w
  2438     039F                     u2185:
  2439     039F  1C03               	skipc
  2440     03A0  2BA2               	goto	u2181
  2441     03A1  2BA3               	goto	u2180
  2442     03A2                     u2181:
  2443     03A2  2BBC               	goto	l2810
  2444     03A3                     u2180:
  2445     03A3                     l2806:
  2446     03A3  0021               	movlb	1	; select bank1
  2447     03A4  0857               	movf	((_controls+1)^(0+128)+2),w
  2448     03A5  3A80               	xorlw	128
  2449     03A6  0020               	movlb	0	; select bank0
  2450     03A7  00D2               	movwf	??_drive
  2451     03A8  3086               	movlw	134
  2452     03A9  0252               	subwf	??_drive,w
  2453     03AA  1D03               	skipz
  2454     03AB  2BAF               	goto	u2195
  2455     03AC  3073               	movlw	115
  2456     03AD  0021               	movlb	1	; select bank1
  2457     03AE  0256               	subwf	(_controls^(0+128)+2),w
  2458     03AF                     u2195:
  2459     03AF  1803               	skipnc
  2460     03B0  2BB2               	goto	u2191
  2461     03B1  2BB3               	goto	u2190
  2462     03B2                     u2191:
  2463     03B2  2BBC               	goto	l2810
  2464     03B3                     u2190:
  2465     03B3                     l2808:
  2466                           
  2467                           ;motorMain.c: 270:         CreateTurnLeftCommmand(power);
  2468     03B3  0020               	movlb	0	; select bank0
  2469     03B4  0854               	movf	drive@power+1,w
  2470     03B5  00A1               	movwf	CreateTurnLeftCommmand@pwm+1
  2471     03B6  0853               	movf	drive@power,w
  2472     03B7  00A0               	movwf	CreateTurnLeftCommmand@pwm
  2473     03B8  318C  24B2  3183   	fcall	_CreateTurnLeftCommmand
  2474                           
  2475                           ;motorMain.c: 271:     }else if((controls.rightY >= 0x6A4) && (controls.rightX >= 0x546 
      +                          && controls.rightX <= 0x672)){
  2476     03BB  2C75               	goto	l410
  2477     03BC                     l2810:
  2478     03BC  0021               	movlb	1	; select bank1
  2479     03BD  0857               	movf	((_controls+1)^(0+128)+2),w
  2480     03BE  3A80               	xorlw	128
  2481     03BF  0020               	movlb	0	; select bank0
  2482     03C0  00D2               	movwf	??_drive
  2483     03C1  3086               	movlw	134
  2484     03C2  0252               	subwf	??_drive,w
  2485     03C3  1D03               	skipz
  2486     03C4  2BC8               	goto	u2205
  2487     03C5  30A4               	movlw	164
  2488     03C6  0021               	movlb	1	; select bank1
  2489     03C7  0256               	subwf	(_controls^(0+128)+2),w
  2490     03C8                     u2205:
  2491     03C8  1C03               	skipc
  2492     03C9  2BCB               	goto	u2201
  2493     03CA  2BCC               	goto	u2200
  2494     03CB                     u2201:
  2495     03CB  2BF5               	goto	l2818
  2496     03CC                     u2200:
  2497     03CC                     l2812:
  2498     03CC  0021               	movlb	1	; select bank1
  2499     03CD  0855               	movf	(_controls+1)^(0+128),w
  2500     03CE  3A80               	xorlw	128
  2501     03CF  0020               	movlb	0	; select bank0
  2502     03D0  00D2               	movwf	??_drive
  2503     03D1  3085               	movlw	133
  2504     03D2  0252               	subwf	??_drive,w
  2505     03D3  1D03               	skipz
  2506     03D4  2BD8               	goto	u2215
  2507     03D5  3046               	movlw	70
  2508     03D6  0021               	movlb	1	; select bank1
  2509     03D7  0254               	subwf	_controls^(0+128),w
  2510     03D8                     u2215:
  2511     03D8  1C03               	skipc
  2512     03D9  2BDB               	goto	u2211
  2513     03DA  2BDC               	goto	u2210
  2514     03DB                     u2211:
  2515     03DB  2BF5               	goto	l2818
  2516     03DC                     u2210:
  2517     03DC                     l2814:
  2518     03DC  0021               	movlb	1	; select bank1
  2519     03DD  0855               	movf	(_controls+1)^(0+128),w
  2520     03DE  3A80               	xorlw	128
  2521     03DF  0020               	movlb	0	; select bank0
  2522     03E0  00D2               	movwf	??_drive
  2523     03E1  3086               	movlw	134
  2524     03E2  0252               	subwf	??_drive,w
  2525     03E3  1D03               	skipz
  2526     03E4  2BE8               	goto	u2225
  2527     03E5  3073               	movlw	115
  2528     03E6  0021               	movlb	1	; select bank1
  2529     03E7  0254               	subwf	_controls^(0+128),w
  2530     03E8                     u2225:
  2531     03E8  1803               	skipnc
  2532     03E9  2BEB               	goto	u2221
  2533     03EA  2BEC               	goto	u2220
  2534     03EB                     u2221:
  2535     03EB  2BF5               	goto	l2818
  2536     03EC                     u2220:
  2537     03EC                     l2816:
  2538                           
  2539                           ;motorMain.c: 272:         CreateMoveForwardCommmand(power);
  2540     03EC  0020               	movlb	0	; select bank0
  2541     03ED  0854               	movf	drive@power+1,w
  2542     03EE  00A1               	movwf	CreateMoveForwardCommmand@pwm+1
  2543     03EF  0853               	movf	drive@power,w
  2544     03F0  00A0               	movwf	CreateMoveForwardCommmand@pwm
  2545     03F1  318C  2491  3183   	fcall	_CreateMoveForwardCommmand
  2546                           
  2547                           ;motorMain.c: 273:     }else if((controls.rightY <= 0x514) && (controls.rightX >= 0x546 
      +                          && controls.rightX <= 0x672)){
  2548     03F4  2C75               	goto	l410
  2549     03F5                     l2818:
  2550     03F5  0021               	movlb	1	; select bank1
  2551     03F6  0857               	movf	((_controls+1)^(0+128)+2),w
  2552     03F7  3A80               	xorlw	128
  2553     03F8  0020               	movlb	0	; select bank0
  2554     03F9  00D2               	movwf	??_drive
  2555     03FA  3085               	movlw	133
  2556     03FB  0252               	subwf	??_drive,w
  2557     03FC  1D03               	skipz
  2558     03FD  2C01               	goto	u2235
  2559     03FE  3015               	movlw	21
  2560     03FF  0021               	movlb	1	; select bank1
  2561     0400  0256               	subwf	(_controls^(0+128)+2),w
  2562     0401                     u2235:
  2563     0401  1803               	skipnc
  2564     0402  2C04               	goto	u2231
  2565     0403  2C05               	goto	u2230
  2566     0404                     u2231:
  2567     0404  2C2E               	goto	l2826
  2568     0405                     u2230:
  2569     0405                     l2820:
  2570     0405  0021               	movlb	1	; select bank1
  2571     0406  0855               	movf	(_controls+1)^(0+128),w
  2572     0407  3A80               	xorlw	128
  2573     0408  0020               	movlb	0	; select bank0
  2574     0409  00D2               	movwf	??_drive
  2575     040A  3085               	movlw	133
  2576     040B  0252               	subwf	??_drive,w
  2577     040C  1D03               	skipz
  2578     040D  2C11               	goto	u2245
  2579     040E  3046               	movlw	70
  2580     040F  0021               	movlb	1	; select bank1
  2581     0410  0254               	subwf	_controls^(0+128),w
  2582     0411                     u2245:
  2583     0411  1C03               	skipc
  2584     0412  2C14               	goto	u2241
  2585     0413  2C15               	goto	u2240
  2586     0414                     u2241:
  2587     0414  2C2E               	goto	l2826
  2588     0415                     u2240:
  2589     0415                     l2822:
  2590     0415  0021               	movlb	1	; select bank1
  2591     0416  0855               	movf	(_controls+1)^(0+128),w
  2592     0417  3A80               	xorlw	128
  2593     0418  0020               	movlb	0	; select bank0
  2594     0419  00D2               	movwf	??_drive
  2595     041A  3086               	movlw	134
  2596     041B  0252               	subwf	??_drive,w
  2597     041C  1D03               	skipz
  2598     041D  2C21               	goto	u2255
  2599     041E  3073               	movlw	115
  2600     041F  0021               	movlb	1	; select bank1
  2601     0420  0254               	subwf	_controls^(0+128),w
  2602     0421                     u2255:
  2603     0421  1803               	skipnc
  2604     0422  2C24               	goto	u2251
  2605     0423  2C25               	goto	u2250
  2606     0424                     u2251:
  2607     0424  2C2E               	goto	l2826
  2608     0425                     u2250:
  2609     0425                     l2824:
  2610                           
  2611                           ;motorMain.c: 274:         CreateMoveBackwardCommmand(power);
  2612     0425  0020               	movlb	0	; select bank0
  2613     0426  0854               	movf	drive@power+1,w
  2614     0427  00A1               	movwf	CreateMoveBackwardCommmand@pwm+1
  2615     0428  0853               	movf	drive@power,w
  2616     0429  00A0               	movwf	CreateMoveBackwardCommmand@pwm
  2617     042A  318C  2470  3183   	fcall	_CreateMoveBackwardCommmand
  2618                           
  2619                           ;motorMain.c: 275:     }else if((controls.rightY >= 0x546 && controls.rightY <= 0x672) &
      +                          & (controls.rightX >= 0x546 && controls.rightX <= 0x672)){
  2620     042D  2C75               	goto	l410
  2621     042E                     l2826:
  2622     042E  0021               	movlb	1	; select bank1
  2623     042F  0857               	movf	((_controls+1)^(0+128)+2),w
  2624     0430  3A80               	xorlw	128
  2625     0431  0020               	movlb	0	; select bank0
  2626     0432  00D2               	movwf	??_drive
  2627     0433  3085               	movlw	133
  2628     0434  0252               	subwf	??_drive,w
  2629     0435  1D03               	skipz
  2630     0436  2C3A               	goto	u2265
  2631     0437  3046               	movlw	70
  2632     0438  0021               	movlb	1	; select bank1
  2633     0439  0256               	subwf	(_controls^(0+128)+2),w
  2634     043A                     u2265:
  2635     043A  1C03               	skipc
  2636     043B  2C3D               	goto	u2261
  2637     043C  2C3E               	goto	u2260
  2638     043D                     u2261:
  2639     043D  2C72               	goto	l2836
  2640     043E                     u2260:
  2641     043E                     l2828:
  2642     043E  0021               	movlb	1	; select bank1
  2643     043F  0857               	movf	((_controls+1)^(0+128)+2),w
  2644     0440  3A80               	xorlw	128
  2645     0441  0020               	movlb	0	; select bank0
  2646     0442  00D2               	movwf	??_drive
  2647     0443  3086               	movlw	134
  2648     0444  0252               	subwf	??_drive,w
  2649     0445  1D03               	skipz
  2650     0446  2C4A               	goto	u2275
  2651     0447  3073               	movlw	115
  2652     0448  0021               	movlb	1	; select bank1
  2653     0449  0256               	subwf	(_controls^(0+128)+2),w
  2654     044A                     u2275:
  2655     044A  1803               	skipnc
  2656     044B  2C4D               	goto	u2271
  2657     044C  2C4E               	goto	u2270
  2658     044D                     u2271:
  2659     044D  2C72               	goto	l2836
  2660     044E                     u2270:
  2661     044E                     l2830:
  2662     044E  0021               	movlb	1	; select bank1
  2663     044F  0855               	movf	(_controls+1)^(0+128),w
  2664     0450  3A80               	xorlw	128
  2665     0451  0020               	movlb	0	; select bank0
  2666     0452  00D2               	movwf	??_drive
  2667     0453  3085               	movlw	133
  2668     0454  0252               	subwf	??_drive,w
  2669     0455  1D03               	skipz
  2670     0456  2C5A               	goto	u2285
  2671     0457  3046               	movlw	70
  2672     0458  0021               	movlb	1	; select bank1
  2673     0459  0254               	subwf	_controls^(0+128),w
  2674     045A                     u2285:
  2675     045A  1C03               	skipc
  2676     045B  2C5D               	goto	u2281
  2677     045C  2C5E               	goto	u2280
  2678     045D                     u2281:
  2679     045D  2C72               	goto	l2836
  2680     045E                     u2280:
  2681     045E                     l2832:
  2682     045E  0021               	movlb	1	; select bank1
  2683     045F  0855               	movf	(_controls+1)^(0+128),w
  2684     0460  3A80               	xorlw	128
  2685     0461  0020               	movlb	0	; select bank0
  2686     0462  00D2               	movwf	??_drive
  2687     0463  3086               	movlw	134
  2688     0464  0252               	subwf	??_drive,w
  2689     0465  1D03               	skipz
  2690     0466  2C6A               	goto	u2295
  2691     0467  3073               	movlw	115
  2692     0468  0021               	movlb	1	; select bank1
  2693     0469  0254               	subwf	_controls^(0+128),w
  2694     046A                     u2295:
  2695     046A  1803               	skipnc
  2696     046B  2C6D               	goto	u2291
  2697     046C  2C6E               	goto	u2290
  2698     046D                     u2291:
  2699     046D  2C72               	goto	l2836
  2700     046E                     u2290:
  2701     046E                     l2834:
  2702                           
  2703                           ;motorMain.c: 276:         CreateBreak();
  2704     046E  318C  2404  3183   	fcall	_CreateBreak
  2705                           
  2706                           ;motorMain.c: 277:     }
  2707     0471  2C75               	goto	l410
  2708     0472                     l2836:
  2709                           
  2710                           ;motorMain.c: 279:         CreateControlsCommand();
  2711     0472  318C  2453  3183   	fcall	_CreateControlsCommand
  2712     0475                     l410:
  2713     0475  0008               	return
  2714     0476                     __end_of_drive:
  2715                           
  2716                           	psect	text2
  2717     074C                     __ptext2:	
  2718 ;; *************** function ___xxtofl *****************
  2719 ;; Defined at:
  2720 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;  sign            1    wreg     unsigned char 
  2723 ;;  val             4    0[BANK0 ] long 
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;  sign            1    8[BANK0 ] unsigned char 
  2726 ;;  arg             4   10[BANK0 ] unsigned long 
  2727 ;;  exp             1    9[BANK0 ] unsigned char 
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  4    0[BANK0 ] unsigned char 
  2730 ;; Registers used:
  2731 ;;		wreg, status,2, status,0
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2737 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2738 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2739 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2740 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2741 ;;Total ram usage:       14 bytes
  2742 ;; Hardware stack levels used: 1
  2743 ;; Hardware stack levels required when called: 2
  2744 ;; This function calls:
  2745 ;;		Nothing
  2746 ;; This function is called by:
  2747 ;;		_drive
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751     074C                     ___xxtofl:	
  2752                           ;psect for function ___xxtofl
  2753                           
  2754                           
  2755                           ;incstack = 0
  2756                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2757                           ;___xxtofl@sign stored from wreg
  2758     074C  0020               	movlb	0	; select bank0
  2759     074D  00A8               	movwf	___xxtofl@sign
  2760     074E                     l2666:
  2761     074E  0828               	movf	___xxtofl@sign,w
  2762     074F  1903               	btfsc	3,2
  2763     0750  2F52               	goto	u1881
  2764     0751  2F53               	goto	u1880
  2765     0752                     u1881:
  2766     0752  2F67               	goto	l2672
  2767     0753                     u1880:
  2768     0753                     l2668:
  2769     0753  1FA3               	btfss	___xxtofl@val+3,7
  2770     0754  2F56               	goto	u1891
  2771     0755  2F57               	goto	u1890
  2772     0756                     u1891:
  2773     0756  2F67               	goto	l2672
  2774     0757                     u1890:
  2775     0757                     l2670:
  2776     0757  0920               	comf	___xxtofl@val,w
  2777     0758  00AA               	movwf	___xxtofl@arg
  2778     0759  0921               	comf	___xxtofl@val+1,w
  2779     075A  00AB               	movwf	___xxtofl@arg+1
  2780     075B  0922               	comf	___xxtofl@val+2,w
  2781     075C  00AC               	movwf	___xxtofl@arg+2
  2782     075D  0923               	comf	___xxtofl@val+3,w
  2783     075E  00AD               	movwf	___xxtofl@arg+3
  2784     075F  0AAA               	incf	___xxtofl@arg,f
  2785     0760  1903               	skipnz
  2786     0761  0AAB               	incf	___xxtofl@arg+1,f
  2787     0762  1903               	skipnz
  2788     0763  0AAC               	incf	___xxtofl@arg+2,f
  2789     0764  1903               	skipnz
  2790     0765  0AAD               	incf	___xxtofl@arg+3,f
  2791     0766  2F6F               	goto	l1051
  2792     0767                     l2672:
  2793     0767  0823               	movf	___xxtofl@val+3,w
  2794     0768  00AD               	movwf	___xxtofl@arg+3
  2795     0769  0822               	movf	___xxtofl@val+2,w
  2796     076A  00AC               	movwf	___xxtofl@arg+2
  2797     076B  0821               	movf	___xxtofl@val+1,w
  2798     076C  00AB               	movwf	___xxtofl@arg+1
  2799     076D  0820               	movf	___xxtofl@val,w
  2800     076E  00AA               	movwf	___xxtofl@arg
  2801     076F                     l1051:
  2802     076F  0823               	movf	___xxtofl@val+3,w
  2803     0770  0422               	iorwf	___xxtofl@val+2,w
  2804     0771  0421               	iorwf	___xxtofl@val+1,w
  2805     0772  0420               	iorwf	___xxtofl@val,w
  2806     0773  1D03               	skipz
  2807     0774  2F76               	goto	u1901
  2808     0775  2F77               	goto	u1900
  2809     0776                     u1901:
  2810     0776  2F80               	goto	l2678
  2811     0777                     u1900:
  2812     0777                     l2674:
  2813     0777  3000               	movlw	0
  2814     0778  00A3               	movwf	?___xxtofl+3
  2815     0779  3000               	movlw	0
  2816     077A  00A2               	movwf	?___xxtofl+2
  2817     077B  3000               	movlw	0
  2818     077C  00A1               	movwf	?___xxtofl+1
  2819     077D  3000               	movlw	0
  2820     077E  00A0               	movwf	?___xxtofl
  2821     077F  2FF6               	goto	l1053
  2822     0780                     l2678:
  2823     0780  3096               	movlw	150
  2824     0781  00A9               	movwf	___xxtofl@exp
  2825     0782  2F8E               	goto	l2682
  2826     0783                     l2680:
  2827     0783  3001               	movlw	1
  2828     0784  00A4               	movwf	??___xxtofl
  2829     0785  0824               	movf	??___xxtofl,w
  2830     0786  07A9               	addwf	___xxtofl@exp,f
  2831     0787  3001               	movlw	1
  2832     0788                     u1915:
  2833     0788  36AD               	lsrf	___xxtofl@arg+3,f
  2834     0789  0CAC               	rrf	___xxtofl@arg+2,f
  2835     078A  0CAB               	rrf	___xxtofl@arg+1,f
  2836     078B  0CAA               	rrf	___xxtofl@arg,f
  2837     078C  0B89               	decfsz	9,f
  2838     078D  2F88               	goto	u1915
  2839     078E                     l2682:
  2840     078E  30FE               	movlw	254
  2841     078F  052D               	andwf	___xxtofl@arg+3,w
  2842     0790  1D03               	btfss	3,2
  2843     0791  2F93               	goto	u1921
  2844     0792  2F94               	goto	u1920
  2845     0793                     u1921:
  2846     0793  2F83               	goto	l2680
  2847     0794                     u1920:
  2848     0794  2FA8               	goto	l1057
  2849     0795                     l2684:
  2850     0795  3001               	movlw	1
  2851     0796  00A4               	movwf	??___xxtofl
  2852     0797  0824               	movf	??___xxtofl,w
  2853     0798  07A9               	addwf	___xxtofl@exp,f
  2854     0799                     l2686:
  2855     0799  3001               	movlw	1
  2856     079A  07AA               	addwf	___xxtofl@arg,f
  2857     079B  3000               	movlw	0
  2858     079C  3DAB               	addwfc	___xxtofl@arg+1,f
  2859     079D  3000               	movlw	0
  2860     079E  3DAC               	addwfc	___xxtofl@arg+2,f
  2861     079F  3000               	movlw	0
  2862     07A0  3DAD               	addwfc	___xxtofl@arg+3,f
  2863     07A1                     l2688:
  2864     07A1  3001               	movlw	1
  2865     07A2                     u1935:
  2866     07A2  36AD               	lsrf	___xxtofl@arg+3,f
  2867     07A3  0CAC               	rrf	___xxtofl@arg+2,f
  2868     07A4  0CAB               	rrf	___xxtofl@arg+1,f
  2869     07A5  0CAA               	rrf	___xxtofl@arg,f
  2870     07A6  0B89               	decfsz	9,f
  2871     07A7  2FA2               	goto	u1935
  2872     07A8                     l1057:
  2873     07A8  30FF               	movlw	255
  2874     07A9  052D               	andwf	___xxtofl@arg+3,w
  2875     07AA  1D03               	btfss	3,2
  2876     07AB  2FAD               	goto	u1941
  2877     07AC  2FAE               	goto	u1940
  2878     07AD                     u1941:
  2879     07AD  2F95               	goto	l2684
  2880     07AE                     u1940:
  2881     07AE  2FB8               	goto	l2692
  2882     07AF                     l2690:
  2883     07AF  3001               	movlw	1
  2884     07B0  02A9               	subwf	___xxtofl@exp,f
  2885     07B1  3001               	movlw	1
  2886     07B2                     u1955:
  2887     07B2  35AA               	lslf	___xxtofl@arg,f
  2888     07B3  0DAB               	rlf	___xxtofl@arg+1,f
  2889     07B4  0DAC               	rlf	___xxtofl@arg+2,f
  2890     07B5  0DAD               	rlf	___xxtofl@arg+3,f
  2891     07B6  0B89               	decfsz	9,f
  2892     07B7  2FB2               	goto	u1955
  2893     07B8                     l2692:
  2894     07B8  1BAC               	btfsc	___xxtofl@arg+2,7
  2895     07B9  2FBB               	goto	u1961
  2896     07BA  2FBC               	goto	u1960
  2897     07BB                     u1961:
  2898     07BB  2FC2               	goto	l1064
  2899     07BC                     u1960:
  2900     07BC                     l2694:
  2901     07BC  3002               	movlw	2
  2902     07BD  0229               	subwf	___xxtofl@exp,w
  2903     07BE  1803               	skipnc
  2904     07BF  2FC1               	goto	u1971
  2905     07C0  2FC2               	goto	u1970
  2906     07C1                     u1971:
  2907     07C1  2FAF               	goto	l2690
  2908     07C2                     u1970:
  2909     07C2                     l1064:
  2910     07C2  1829               	btfsc	___xxtofl@exp,0
  2911     07C3  2FC5               	goto	u1981
  2912     07C4  2FC6               	goto	u1980
  2913     07C5                     u1981:
  2914     07C5  2FCE               	goto	l1065
  2915     07C6                     u1980:
  2916     07C6                     l2696:
  2917     07C6  30FF               	movlw	255
  2918     07C7  05AA               	andwf	___xxtofl@arg,f
  2919     07C8  30FF               	movlw	255
  2920     07C9  05AB               	andwf	___xxtofl@arg+1,f
  2921     07CA  307F               	movlw	127
  2922     07CB  05AC               	andwf	___xxtofl@arg+2,f
  2923     07CC  30FF               	movlw	255
  2924     07CD  05AD               	andwf	___xxtofl@arg+3,f
  2925     07CE                     l1065:
  2926     07CE  1003               	clrc
  2927     07CF  0CA9               	rrf	___xxtofl@exp,f
  2928     07D0                     l2698:
  2929     07D0  0829               	movf	___xxtofl@exp,w
  2930     07D1  00A4               	movwf	??___xxtofl
  2931     07D2  01A5               	clrf	??___xxtofl+1
  2932     07D3  01A6               	clrf	??___xxtofl+2
  2933     07D4  01A7               	clrf	??___xxtofl+3
  2934     07D5  3018               	movlw	24
  2935     07D6                     u1995:
  2936     07D6  35A4               	lslf	??___xxtofl,f
  2937     07D7  0DA5               	rlf	??___xxtofl+1,f
  2938     07D8  0DA6               	rlf	??___xxtofl+2,f
  2939     07D9  0DA7               	rlf	??___xxtofl+3,f
  2940     07DA                     u1990:
  2941     07DA  0B89               	decfsz	9,f
  2942     07DB  2FD6               	goto	u1995
  2943     07DC  0824               	movf	??___xxtofl,w
  2944     07DD  04AA               	iorwf	___xxtofl@arg,f
  2945     07DE  0825               	movf	??___xxtofl+1,w
  2946     07DF  04AB               	iorwf	___xxtofl@arg+1,f
  2947     07E0  0826               	movf	??___xxtofl+2,w
  2948     07E1  04AC               	iorwf	___xxtofl@arg+2,f
  2949     07E2  0827               	movf	??___xxtofl+3,w
  2950     07E3  04AD               	iorwf	___xxtofl@arg+3,f
  2951     07E4                     l2700:
  2952     07E4  0828               	movf	___xxtofl@sign,w
  2953     07E5  1903               	btfsc	3,2
  2954     07E6  2FE8               	goto	u2001
  2955     07E7  2FE9               	goto	u2000
  2956     07E8                     u2001:
  2957     07E8  2FEE               	goto	l2706
  2958     07E9                     u2000:
  2959     07E9                     l2702:
  2960     07E9  1FA3               	btfss	___xxtofl@val+3,7
  2961     07EA  2FEC               	goto	u2011
  2962     07EB  2FED               	goto	u2010
  2963     07EC                     u2011:
  2964     07EC  2FEE               	goto	l2706
  2965     07ED                     u2010:
  2966     07ED                     l2704:
  2967     07ED  17AD               	bsf	___xxtofl@arg+3,7
  2968     07EE                     l2706:
  2969     07EE  082D               	movf	___xxtofl@arg+3,w
  2970     07EF  00A3               	movwf	?___xxtofl+3
  2971     07F0  082C               	movf	___xxtofl@arg+2,w
  2972     07F1  00A2               	movwf	?___xxtofl+2
  2973     07F2  082B               	movf	___xxtofl@arg+1,w
  2974     07F3  00A1               	movwf	?___xxtofl+1
  2975     07F4  082A               	movf	___xxtofl@arg,w
  2976     07F5  00A0               	movwf	?___xxtofl
  2977     07F6                     l1053:
  2978     07F6  0008               	return
  2979     07F7                     __end_of___xxtofl:
  2980                           
  2981                           	psect	text3
  2982     0EFB                     __ptext3:	
  2983 ;; *************** function ___fltol *****************
  2984 ;; Defined at:
  2985 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;  f1              4   40[BANK0 ] unsigned char 
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;  exp1            1   49[BANK0 ] unsigned char 
  2990 ;;  sign1           1   48[BANK0 ] unsigned char 
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  4   40[BANK0 ] long 
  2993 ;; Registers used:
  2994 ;;		wreg, status,2, status,0
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3000 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3001 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3002 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3003 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3004 ;;Total ram usage:       10 bytes
  3005 ;; Hardware stack levels used: 1
  3006 ;; Hardware stack levels required when called: 2
  3007 ;; This function calls:
  3008 ;;		Nothing
  3009 ;; This function is called by:
  3010 ;;		_drive
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014     0EFB                     ___fltol:	
  3015                           ;psect for function ___fltol
  3016                           
  3017     0EFB                     l2490:	
  3018                           ;incstack = 0
  3019                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3020                           
  3021     0EFB  1003               	clrc
  3022     0EFC  0020               	movlb	0	; select bank0
  3023     0EFD  0D4A               	rlf	___fltol@f1+2,w
  3024     0EFE  0D4B               	rlf	___fltol@f1+3,w
  3025     0EFF  00D1               	movwf	___fltol@exp1
  3026     0F00  0851               	movf	___fltol@exp1,w
  3027     0F01  1D03               	btfss	3,2
  3028     0F02  2F04               	goto	u1521
  3029     0F03  2F05               	goto	u1520
  3030     0F04                     u1521:
  3031     0F04  2F0E               	goto	l2496
  3032     0F05                     u1520:
  3033     0F05                     l2492:
  3034     0F05  3000               	movlw	0
  3035     0F06  00CB               	movwf	?___fltol+3
  3036     0F07  3000               	movlw	0
  3037     0F08  00CA               	movwf	?___fltol+2
  3038     0F09  3000               	movlw	0
  3039     0F0A  00C9               	movwf	?___fltol+1
  3040     0F0B  3000               	movlw	0
  3041     0F0C  00C8               	movwf	?___fltol
  3042     0F0D  2F6B               	goto	l804
  3043     0F0E                     l2496:
  3044     0F0E  0848               	movf	___fltol@f1,w
  3045     0F0F  00CC               	movwf	??___fltol
  3046     0F10  0849               	movf	___fltol@f1+1,w
  3047     0F11  00CD               	movwf	??___fltol+1
  3048     0F12  084A               	movf	___fltol@f1+2,w
  3049     0F13  00CE               	movwf	??___fltol+2
  3050     0F14  084B               	movf	___fltol@f1+3,w
  3051     0F15  00CF               	movwf	??___fltol+3
  3052     0F16  301F               	movlw	31
  3053     0F17                     u1535:
  3054     0F17  36CF               	lsrf	??___fltol+3,f
  3055     0F18  0CCE               	rrf	??___fltol+2,f
  3056     0F19  0CCD               	rrf	??___fltol+1,f
  3057     0F1A  0CCC               	rrf	??___fltol,f
  3058     0F1B                     u1530:
  3059     0F1B  0B89               	decfsz	9,f
  3060     0F1C  2F17               	goto	u1535
  3061     0F1D  084C               	movf	??___fltol,w
  3062     0F1E  00D0               	movwf	___fltol@sign1
  3063     0F1F                     l2498:
  3064     0F1F  17CA               	bsf	___fltol@f1+2,7
  3065     0F20                     l2500:
  3066     0F20  30FF               	movlw	255
  3067     0F21  05C8               	andwf	___fltol@f1,f
  3068     0F22  30FF               	movlw	255
  3069     0F23  05C9               	andwf	___fltol@f1+1,f
  3070     0F24  30FF               	movlw	255
  3071     0F25  05CA               	andwf	___fltol@f1+2,f
  3072     0F26  3000               	movlw	0
  3073     0F27  05CB               	andwf	___fltol@f1+3,f
  3074     0F28                     l2502:
  3075     0F28  3096               	movlw	150
  3076     0F29  02D1               	subwf	___fltol@exp1,f
  3077     0F2A                     l2504:
  3078     0F2A  1FD1               	btfss	___fltol@exp1,7
  3079     0F2B  2F2D               	goto	u1541
  3080     0F2C  2F2E               	goto	u1540
  3081     0F2D                     u1541:
  3082     0F2D  2F46               	goto	l2514
  3083     0F2E                     u1540:
  3084     0F2E                     l2506:
  3085     0F2E  0851               	movf	___fltol@exp1,w
  3086     0F2F  3A80               	xorlw	128
  3087     0F30  3E97               	addlw	151
  3088     0F31  1803               	skipnc
  3089     0F32  2F34               	goto	u1551
  3090     0F33  2F35               	goto	u1550
  3091     0F34                     u1551:
  3092     0F34  2F36               	goto	l2512
  3093     0F35                     u1550:
  3094     0F35  2F05               	goto	l2492
  3095     0F36                     l2512:
  3096     0F36  3001               	movlw	1
  3097     0F37                     u1565:
  3098     0F37  36CB               	lsrf	___fltol@f1+3,f
  3099     0F38  0CCA               	rrf	___fltol@f1+2,f
  3100     0F39  0CC9               	rrf	___fltol@f1+1,f
  3101     0F3A  0CC8               	rrf	___fltol@f1,f
  3102     0F3B  0B89               	decfsz	9,f
  3103     0F3C  2F37               	goto	u1565
  3104     0F3D  3001               	movlw	1
  3105     0F3E  00CC               	movwf	??___fltol
  3106     0F3F  084C               	movf	??___fltol,w
  3107     0F40  07D1               	addwf	___fltol@exp1,f
  3108     0F41  1D03               	btfss	3,2
  3109     0F42  2F44               	goto	u1571
  3110     0F43  2F45               	goto	u1570
  3111     0F44                     u1571:
  3112     0F44  2F36               	goto	l2512
  3113     0F45                     u1570:
  3114     0F45  2F5B               	goto	l2522
  3115     0F46                     l2514:
  3116     0F46  3020               	movlw	32
  3117     0F47  0251               	subwf	___fltol@exp1,w
  3118     0F48  1C03               	skipc
  3119     0F49  2F4B               	goto	u1581
  3120     0F4A  2F4C               	goto	u1580
  3121     0F4B                     u1581:
  3122     0F4B  2F56               	goto	l811
  3123     0F4C                     u1580:
  3124     0F4C  2F05               	goto	l2492
  3125     0F4D                     l2520:
  3126     0F4D  3001               	movlw	1
  3127     0F4E                     u1595:
  3128     0F4E  35C8               	lslf	___fltol@f1,f
  3129     0F4F  0DC9               	rlf	___fltol@f1+1,f
  3130     0F50  0DCA               	rlf	___fltol@f1+2,f
  3131     0F51  0DCB               	rlf	___fltol@f1+3,f
  3132     0F52  0B89               	decfsz	9,f
  3133     0F53  2F4E               	goto	u1595
  3134     0F54  3001               	movlw	1
  3135     0F55  02D1               	subwf	___fltol@exp1,f
  3136     0F56                     l811:
  3137     0F56  0851               	movf	___fltol@exp1,w
  3138     0F57  1D03               	btfss	3,2
  3139     0F58  2F5A               	goto	u1601
  3140     0F59  2F5B               	goto	u1600
  3141     0F5A                     u1601:
  3142     0F5A  2F4D               	goto	l2520
  3143     0F5B                     u1600:
  3144     0F5B                     l2522:
  3145     0F5B  0850               	movf	___fltol@sign1,w
  3146     0F5C  1903               	btfsc	3,2
  3147     0F5D  2F5F               	goto	u1611
  3148     0F5E  2F60               	goto	u1610
  3149     0F5F                     u1611:
  3150     0F5F  2F6B               	goto	l814
  3151     0F60                     u1610:
  3152     0F60                     l2524:
  3153     0F60  09C8               	comf	___fltol@f1,f
  3154     0F61  09C9               	comf	___fltol@f1+1,f
  3155     0F62  09CA               	comf	___fltol@f1+2,f
  3156     0F63  09CB               	comf	___fltol@f1+3,f
  3157     0F64  0AC8               	incf	___fltol@f1,f
  3158     0F65  1903               	skipnz
  3159     0F66  0AC9               	incf	___fltol@f1+1,f
  3160     0F67  1903               	skipnz
  3161     0F68  0ACA               	incf	___fltol@f1+2,f
  3162     0F69  1903               	skipnz
  3163     0F6A  0ACB               	incf	___fltol@f1+3,f
  3164     0F6B                     l814:
  3165     0F6B                     l804:
  3166     0F6B  0008               	return
  3167     0F6C                     __end_of___fltol:
  3168                           
  3169                           	psect	text4
  3170     00D7                     __ptext4:	
  3171 ;; *************** function ___flmul *****************
  3172 ;; Defined at:
  3173 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;  b               4   14[BANK0 ] long 
  3176 ;;  a               4   18[BANK0 ] long 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  prod            4   34[BANK0 ] struct .
  3179 ;;  grs             4   28[BANK0 ] unsigned long 
  3180 ;;  temp            2   38[BANK0 ] struct .
  3181 ;;  bexp            1   33[BANK0 ] unsigned char 
  3182 ;;  aexp            1   32[BANK0 ] unsigned char 
  3183 ;;  sign            1   27[BANK0 ] unsigned char 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  4   14[BANK0 ] unsigned char 
  3186 ;; Registers used:
  3187 ;;		wreg, status,2, status,0, pclath, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3193 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3194 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3195 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3196 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3197 ;;Total ram usage:       26 bytes
  3198 ;; Hardware stack levels used: 1
  3199 ;; Hardware stack levels required when called: 3
  3200 ;; This function calls:
  3201 ;;		__Umul8_16
  3202 ;; This function is called by:
  3203 ;;		_drive
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207     00D7                     ___flmul:	
  3208                           ;psect for function ___flmul
  3209                           
  3210     00D7                     l2526:	
  3211                           ;incstack = 0
  3212                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  3213                           
  3214     00D7  0020               	movlb	0	; select bank0
  3215     00D8  0831               	movf	___flmul@b+3,w
  3216     00D9  3980               	andlw	128
  3217     00DA  00BB               	movwf	___flmul@sign
  3218     00DB                     l2528:
  3219     00DB  3531               	lslf	___flmul@b+3,w
  3220     00DC  00C1               	movwf	___flmul@bexp
  3221     00DD                     l2530:
  3222     00DD  1FB0               	btfss	___flmul@b+2,7
  3223     00DE  28E0               	goto	u1621
  3224     00DF  28E1               	goto	u1620
  3225     00E0                     u1621:
  3226     00E0  28E2               	goto	l2534
  3227     00E1                     u1620:
  3228     00E1                     l2532:
  3229     00E1  1441               	bsf	___flmul@bexp,0
  3230     00E2                     l2534:
  3231     00E2  0841               	movf	___flmul@bexp,w
  3232     00E3  1903               	btfsc	3,2
  3233     00E4  28E6               	goto	u1631
  3234     00E5  28E7               	goto	u1630
  3235     00E6                     u1631:
  3236     00E6  28F6               	goto	l2542
  3237     00E7                     u1630:
  3238     00E7                     l2536:
  3239     00E7  0A41               	incf	___flmul@bexp,w
  3240     00E8  1D03               	btfss	3,2
  3241     00E9  28EB               	goto	u1641
  3242     00EA  28EC               	goto	u1640
  3243     00EB                     u1641:
  3244     00EB  28F4               	goto	l2540
  3245     00EC                     u1640:
  3246     00EC                     l2538:
  3247     00EC  3000               	movlw	0
  3248     00ED  00B1               	movwf	___flmul@b+3
  3249     00EE  3000               	movlw	0
  3250     00EF  00B0               	movwf	___flmul@b+2
  3251     00F0  3000               	movlw	0
  3252     00F1  00AF               	movwf	___flmul@b+1
  3253     00F2  3000               	movlw	0
  3254     00F3  00AE               	movwf	___flmul@b
  3255     00F4                     l2540:
  3256     00F4  17B0               	bsf	___flmul@b+2,7
  3257     00F5  28FE               	goto	l2544
  3258     00F6                     l2542:
  3259     00F6  3000               	movlw	0
  3260     00F7  00B1               	movwf	___flmul@b+3
  3261     00F8  3000               	movlw	0
  3262     00F9  00B0               	movwf	___flmul@b+2
  3263     00FA  3000               	movlw	0
  3264     00FB  00AF               	movwf	___flmul@b+1
  3265     00FC  3000               	movlw	0
  3266     00FD  00AE               	movwf	___flmul@b
  3267     00FE                     l2544:
  3268     00FE  0835               	movf	___flmul@a+3,w
  3269     00FF  3980               	andlw	128
  3270     0100  00B6               	movwf	??___flmul
  3271     0101  0836               	movf	??___flmul,w
  3272     0102  06BB               	xorwf	___flmul@sign,f
  3273     0103                     l2546:
  3274     0103  3535               	lslf	___flmul@a+3,w
  3275     0104  00C0               	movwf	___flmul@aexp
  3276     0105                     l2548:
  3277     0105  1FB4               	btfss	___flmul@a+2,7
  3278     0106  2908               	goto	u1651
  3279     0107  2909               	goto	u1650
  3280     0108                     u1651:
  3281     0108  290A               	goto	l2552
  3282     0109                     u1650:
  3283     0109                     l2550:
  3284     0109  1440               	bsf	___flmul@aexp,0
  3285     010A                     l2552:
  3286     010A  0840               	movf	___flmul@aexp,w
  3287     010B  1903               	btfsc	3,2
  3288     010C  290E               	goto	u1661
  3289     010D  290F               	goto	u1660
  3290     010E                     u1661:
  3291     010E  291E               	goto	l2560
  3292     010F                     u1660:
  3293     010F                     l2554:
  3294     010F  0A40               	incf	___flmul@aexp,w
  3295     0110  1D03               	btfss	3,2
  3296     0111  2913               	goto	u1671
  3297     0112  2914               	goto	u1670
  3298     0113                     u1671:
  3299     0113  291C               	goto	l2558
  3300     0114                     u1670:
  3301     0114                     l2556:
  3302     0114  3000               	movlw	0
  3303     0115  00B5               	movwf	___flmul@a+3
  3304     0116  3000               	movlw	0
  3305     0117  00B4               	movwf	___flmul@a+2
  3306     0118  3000               	movlw	0
  3307     0119  00B3               	movwf	___flmul@a+1
  3308     011A  3000               	movlw	0
  3309     011B  00B2               	movwf	___flmul@a
  3310     011C                     l2558:
  3311     011C  17B4               	bsf	___flmul@a+2,7
  3312     011D  2926               	goto	l2562
  3313     011E                     l2560:
  3314     011E  3000               	movlw	0
  3315     011F  00B5               	movwf	___flmul@a+3
  3316     0120  3000               	movlw	0
  3317     0121  00B4               	movwf	___flmul@a+2
  3318     0122  3000               	movlw	0
  3319     0123  00B3               	movwf	___flmul@a+1
  3320     0124  3000               	movlw	0
  3321     0125  00B2               	movwf	___flmul@a
  3322     0126                     l2562:
  3323     0126  0840               	movf	___flmul@aexp,w
  3324     0127  1903               	btfsc	3,2
  3325     0128  292A               	goto	u1681
  3326     0129  292B               	goto	u1680
  3327     012A                     u1681:
  3328     012A  2930               	goto	l2566
  3329     012B                     u1680:
  3330     012B                     l2564:
  3331     012B  0841               	movf	___flmul@bexp,w
  3332     012C  1D03               	btfss	3,2
  3333     012D  292F               	goto	u1691
  3334     012E  2930               	goto	u1690
  3335     012F                     u1691:
  3336     012F  2939               	goto	l2570
  3337     0130                     u1690:
  3338     0130                     l2566:
  3339     0130  3000               	movlw	0
  3340     0131  00B1               	movwf	?___flmul+3
  3341     0132  3000               	movlw	0
  3342     0133  00B0               	movwf	?___flmul+2
  3343     0134  3000               	movlw	0
  3344     0135  00AF               	movwf	?___flmul+1
  3345     0136  3000               	movlw	0
  3346     0137  00AE               	movwf	?___flmul
  3347     0138  2B11               	goto	l1007
  3348     0139                     l2570:
  3349     0139  082E               	movf	___flmul@b,w
  3350     013A  00A0               	movwf	__Umul8_16@multiplicand
  3351     013B  0834               	movf	___flmul@a+2,w
  3352     013C  318C  24F4  3180   	fcall	__Umul8_16
  3353     013F  0020               	movlb	0	; select bank0
  3354     0140  0821               	movf	?__Umul8_16+1,w
  3355     0141  00C7               	movwf	___flmul@temp+1
  3356     0142  0820               	movf	?__Umul8_16,w
  3357     0143  00C6               	movwf	___flmul@temp
  3358     0144                     l2572:
  3359     0144  0846               	movf	___flmul@temp,w
  3360     0145  00B6               	movwf	??___flmul
  3361     0146  01B7               	clrf	??___flmul+1
  3362     0147  01B8               	clrf	??___flmul+2
  3363     0148  01B9               	clrf	??___flmul+3
  3364     0149  0839               	movf	??___flmul+3,w
  3365     014A  00BF               	movwf	___flmul@grs+3
  3366     014B  0838               	movf	??___flmul+2,w
  3367     014C  00BE               	movwf	___flmul@grs+2
  3368     014D  0837               	movf	??___flmul+1,w
  3369     014E  00BD               	movwf	___flmul@grs+1
  3370     014F  0836               	movf	??___flmul,w
  3371     0150  00BC               	movwf	___flmul@grs
  3372     0151                     l2574:
  3373     0151  0847               	movf	___flmul@temp+1,w
  3374     0152  00B6               	movwf	??___flmul
  3375     0153  01B7               	clrf	??___flmul+1
  3376     0154  01B8               	clrf	??___flmul+2
  3377     0155  01B9               	clrf	??___flmul+3
  3378     0156  0839               	movf	??___flmul+3,w
  3379     0157  00C5               	movwf	___flmul@prod+3
  3380     0158  0838               	movf	??___flmul+2,w
  3381     0159  00C4               	movwf	___flmul@prod+2
  3382     015A  0837               	movf	??___flmul+1,w
  3383     015B  00C3               	movwf	___flmul@prod+1
  3384     015C  0836               	movf	??___flmul,w
  3385     015D  00C2               	movwf	___flmul@prod
  3386     015E  082F               	movf	___flmul@b+1,w
  3387     015F  00A0               	movwf	__Umul8_16@multiplicand
  3388     0160  0833               	movf	___flmul@a+1,w
  3389     0161  318C  24F4  3180   	fcall	__Umul8_16
  3390     0164  0020               	movlb	0	; select bank0
  3391     0165  0821               	movf	?__Umul8_16+1,w
  3392     0166  00C7               	movwf	___flmul@temp+1
  3393     0167  0820               	movf	?__Umul8_16,w
  3394     0168  00C6               	movwf	___flmul@temp
  3395     0169                     l2576:
  3396     0169  0846               	movf	___flmul@temp,w
  3397     016A  00B6               	movwf	??___flmul
  3398     016B  01B7               	clrf	??___flmul+1
  3399     016C  01B8               	clrf	??___flmul+2
  3400     016D  01B9               	clrf	??___flmul+3
  3401     016E  0836               	movf	??___flmul,w
  3402     016F  07BC               	addwf	___flmul@grs,f
  3403     0170  0837               	movf	??___flmul+1,w
  3404     0171  3DBD               	addwfc	___flmul@grs+1,f
  3405     0172  0838               	movf	??___flmul+2,w
  3406     0173  3DBE               	addwfc	___flmul@grs+2,f
  3407     0174  0839               	movf	??___flmul+3,w
  3408     0175  3DBF               	addwfc	___flmul@grs+3,f
  3409     0176                     l2578:
  3410     0176  0847               	movf	___flmul@temp+1,w
  3411     0177  00B6               	movwf	??___flmul
  3412     0178  01B7               	clrf	??___flmul+1
  3413     0179  01B8               	clrf	??___flmul+2
  3414     017A  01B9               	clrf	??___flmul+3
  3415     017B  0836               	movf	??___flmul,w
  3416     017C  07C2               	addwf	___flmul@prod,f
  3417     017D  0837               	movf	??___flmul+1,w
  3418     017E  3DC3               	addwfc	___flmul@prod+1,f
  3419     017F  0838               	movf	??___flmul+2,w
  3420     0180  3DC4               	addwfc	___flmul@prod+2,f
  3421     0181  0839               	movf	??___flmul+3,w
  3422     0182  3DC5               	addwfc	___flmul@prod+3,f
  3423     0183  0830               	movf	___flmul@b+2,w
  3424     0184  00A0               	movwf	__Umul8_16@multiplicand
  3425     0185  0832               	movf	___flmul@a,w
  3426     0186  318C  24F4  3180   	fcall	__Umul8_16
  3427     0189  0020               	movlb	0	; select bank0
  3428     018A  0821               	movf	?__Umul8_16+1,w
  3429     018B  00C7               	movwf	___flmul@temp+1
  3430     018C  0820               	movf	?__Umul8_16,w
  3431     018D  00C6               	movwf	___flmul@temp
  3432     018E                     l2580:
  3433     018E  0846               	movf	___flmul@temp,w
  3434     018F  00B6               	movwf	??___flmul
  3435     0190  01B7               	clrf	??___flmul+1
  3436     0191  01B8               	clrf	??___flmul+2
  3437     0192  01B9               	clrf	??___flmul+3
  3438     0193  0836               	movf	??___flmul,w
  3439     0194  07BC               	addwf	___flmul@grs,f
  3440     0195  0837               	movf	??___flmul+1,w
  3441     0196  3DBD               	addwfc	___flmul@grs+1,f
  3442     0197  0838               	movf	??___flmul+2,w
  3443     0198  3DBE               	addwfc	___flmul@grs+2,f
  3444     0199  0839               	movf	??___flmul+3,w
  3445     019A  3DBF               	addwfc	___flmul@grs+3,f
  3446     019B                     l2582:
  3447     019B  0847               	movf	___flmul@temp+1,w
  3448     019C  00B6               	movwf	??___flmul
  3449     019D  01B7               	clrf	??___flmul+1
  3450     019E  01B8               	clrf	??___flmul+2
  3451     019F  01B9               	clrf	??___flmul+3
  3452     01A0  0836               	movf	??___flmul,w
  3453     01A1  07C2               	addwf	___flmul@prod,f
  3454     01A2  0837               	movf	??___flmul+1,w
  3455     01A3  3DC3               	addwfc	___flmul@prod+1,f
  3456     01A4  0838               	movf	??___flmul+2,w
  3457     01A5  3DC4               	addwfc	___flmul@prod+2,f
  3458     01A6  0839               	movf	??___flmul+3,w
  3459     01A7  3DC5               	addwfc	___flmul@prod+3,f
  3460     01A8                     l2584:
  3461     01A8  3008               	movlw	8
  3462     01A9                     u1705:
  3463     01A9  35BC               	lslf	___flmul@grs,f
  3464     01AA  0DBD               	rlf	___flmul@grs+1,f
  3465     01AB  0DBE               	rlf	___flmul@grs+2,f
  3466     01AC  0DBF               	rlf	___flmul@grs+3,f
  3467     01AD  0B89               	decfsz	9,f
  3468     01AE  29A9               	goto	u1705
  3469     01AF                     l2586:
  3470     01AF  082F               	movf	___flmul@b+1,w
  3471     01B0  00A0               	movwf	__Umul8_16@multiplicand
  3472     01B1  0832               	movf	___flmul@a,w
  3473     01B2  318C  24F4  3180   	fcall	__Umul8_16
  3474     01B5  0020               	movlb	0	; select bank0
  3475     01B6  0821               	movf	?__Umul8_16+1,w
  3476     01B7  00C7               	movwf	___flmul@temp+1
  3477     01B8  0820               	movf	?__Umul8_16,w
  3478     01B9  00C6               	movwf	___flmul@temp
  3479     01BA                     l2588:
  3480     01BA  0846               	movf	___flmul@temp,w
  3481     01BB  07BC               	addwf	___flmul@grs,f
  3482     01BC  0847               	movf	___flmul@temp+1,w
  3483     01BD  3DBD               	addwfc	___flmul@grs+1,f
  3484     01BE  3000               	movlw	0
  3485     01BF  3DBE               	addwfc	___flmul@grs+2,f
  3486     01C0  3DBF               	addwfc	___flmul@grs+3,f
  3487     01C1                     l2590:
  3488     01C1  082E               	movf	___flmul@b,w
  3489     01C2  00A0               	movwf	__Umul8_16@multiplicand
  3490     01C3  0833               	movf	___flmul@a+1,w
  3491     01C4  318C  24F4  3180   	fcall	__Umul8_16
  3492     01C7  0020               	movlb	0	; select bank0
  3493     01C8  0821               	movf	?__Umul8_16+1,w
  3494     01C9  00C7               	movwf	___flmul@temp+1
  3495     01CA  0820               	movf	?__Umul8_16,w
  3496     01CB  00C6               	movwf	___flmul@temp
  3497     01CC                     l2592:
  3498     01CC  0846               	movf	___flmul@temp,w
  3499     01CD  07BC               	addwf	___flmul@grs,f
  3500     01CE  0847               	movf	___flmul@temp+1,w
  3501     01CF  3DBD               	addwfc	___flmul@grs+1,f
  3502     01D0  3000               	movlw	0
  3503     01D1  3DBE               	addwfc	___flmul@grs+2,f
  3504     01D2  3DBF               	addwfc	___flmul@grs+3,f
  3505     01D3                     l2594:
  3506     01D3  3008               	movlw	8
  3507     01D4                     u1715:
  3508     01D4  35BC               	lslf	___flmul@grs,f
  3509     01D5  0DBD               	rlf	___flmul@grs+1,f
  3510     01D6  0DBE               	rlf	___flmul@grs+2,f
  3511     01D7  0DBF               	rlf	___flmul@grs+3,f
  3512     01D8  0B89               	decfsz	9,f
  3513     01D9  29D4               	goto	u1715
  3514     01DA  082E               	movf	___flmul@b,w
  3515     01DB  00A0               	movwf	__Umul8_16@multiplicand
  3516     01DC  0832               	movf	___flmul@a,w
  3517     01DD  318C  24F4  3180   	fcall	__Umul8_16
  3518     01E0  0020               	movlb	0	; select bank0
  3519     01E1  0821               	movf	?__Umul8_16+1,w
  3520     01E2  00C7               	movwf	___flmul@temp+1
  3521     01E3  0820               	movf	?__Umul8_16,w
  3522     01E4  00C6               	movwf	___flmul@temp
  3523     01E5                     l2596:
  3524     01E5  0846               	movf	___flmul@temp,w
  3525     01E6  07BC               	addwf	___flmul@grs,f
  3526     01E7  0847               	movf	___flmul@temp+1,w
  3527     01E8  3DBD               	addwfc	___flmul@grs+1,f
  3528     01E9  3000               	movlw	0
  3529     01EA  3DBE               	addwfc	___flmul@grs+2,f
  3530     01EB  3DBF               	addwfc	___flmul@grs+3,f
  3531     01EC                     l2598:
  3532     01EC  082F               	movf	___flmul@b+1,w
  3533     01ED  00A0               	movwf	__Umul8_16@multiplicand
  3534     01EE  0834               	movf	___flmul@a+2,w
  3535     01EF  318C  24F4  3180   	fcall	__Umul8_16
  3536     01F2  0020               	movlb	0	; select bank0
  3537     01F3  0821               	movf	?__Umul8_16+1,w
  3538     01F4  00C7               	movwf	___flmul@temp+1
  3539     01F5  0820               	movf	?__Umul8_16,w
  3540     01F6  00C6               	movwf	___flmul@temp
  3541     01F7  0846               	movf	___flmul@temp,w
  3542     01F8  07C2               	addwf	___flmul@prod,f
  3543     01F9  0847               	movf	___flmul@temp+1,w
  3544     01FA  3DC3               	addwfc	___flmul@prod+1,f
  3545     01FB  3000               	movlw	0
  3546     01FC  3DC4               	addwfc	___flmul@prod+2,f
  3547     01FD  3DC5               	addwfc	___flmul@prod+3,f
  3548     01FE                     l2600:
  3549     01FE  0830               	movf	___flmul@b+2,w
  3550     01FF  00A0               	movwf	__Umul8_16@multiplicand
  3551     0200  0833               	movf	___flmul@a+1,w
  3552     0201  318C  24F4  3180   	fcall	__Umul8_16
  3553     0204  0020               	movlb	0	; select bank0
  3554     0205  0821               	movf	?__Umul8_16+1,w
  3555     0206  00C7               	movwf	___flmul@temp+1
  3556     0207  0820               	movf	?__Umul8_16,w
  3557     0208  00C6               	movwf	___flmul@temp
  3558     0209                     l2602:
  3559     0209  0846               	movf	___flmul@temp,w
  3560     020A  07C2               	addwf	___flmul@prod,f
  3561     020B  0847               	movf	___flmul@temp+1,w
  3562     020C  3DC3               	addwfc	___flmul@prod+1,f
  3563     020D  3000               	movlw	0
  3564     020E  3DC4               	addwfc	___flmul@prod+2,f
  3565     020F  3DC5               	addwfc	___flmul@prod+3,f
  3566     0210  0830               	movf	___flmul@b+2,w
  3567     0211  00A0               	movwf	__Umul8_16@multiplicand
  3568     0212  0834               	movf	___flmul@a+2,w
  3569     0213  318C  24F4  3180   	fcall	__Umul8_16
  3570     0216  0020               	movlb	0	; select bank0
  3571     0217  0821               	movf	?__Umul8_16+1,w
  3572     0218  00C7               	movwf	___flmul@temp+1
  3573     0219  0820               	movf	?__Umul8_16,w
  3574     021A  00C6               	movwf	___flmul@temp
  3575     021B                     l2604:
  3576     021B  0846               	movf	___flmul@temp,w
  3577     021C  00B6               	movwf	??___flmul
  3578     021D  0847               	movf	___flmul@temp+1,w
  3579     021E  00B7               	movwf	??___flmul+1
  3580     021F  01B8               	clrf	??___flmul+2
  3581     0220  01B9               	clrf	??___flmul+3
  3582     0221  3008               	movlw	8
  3583     0222                     u1725:
  3584     0222  35B6               	lslf	??___flmul,f
  3585     0223  0DB7               	rlf	??___flmul+1,f
  3586     0224  0DB8               	rlf	??___flmul+2,f
  3587     0225  0DB9               	rlf	??___flmul+3,f
  3588     0226                     u1720:
  3589     0226  0B89               	decfsz	9,f
  3590     0227  2A22               	goto	u1725
  3591     0228  0836               	movf	??___flmul,w
  3592     0229  07C2               	addwf	___flmul@prod,f
  3593     022A  0837               	movf	??___flmul+1,w
  3594     022B  3DC3               	addwfc	___flmul@prod+1,f
  3595     022C  0838               	movf	??___flmul+2,w
  3596     022D  3DC4               	addwfc	___flmul@prod+2,f
  3597     022E  0839               	movf	??___flmul+3,w
  3598     022F  3DC5               	addwfc	___flmul@prod+3,f
  3599     0230                     l2606:
  3600     0230  083C               	movf	___flmul@grs,w
  3601     0231  00B6               	movwf	??___flmul
  3602     0232  083D               	movf	___flmul@grs+1,w
  3603     0233  00B7               	movwf	??___flmul+1
  3604     0234  083E               	movf	___flmul@grs+2,w
  3605     0235  00B8               	movwf	??___flmul+2
  3606     0236  083F               	movf	___flmul@grs+3,w
  3607     0237  00B9               	movwf	??___flmul+3
  3608     0238  3018               	movlw	24
  3609     0239                     u1735:
  3610     0239  36B9               	lsrf	??___flmul+3,f
  3611     023A  0CB8               	rrf	??___flmul+2,f
  3612     023B  0CB7               	rrf	??___flmul+1,f
  3613     023C  0CB6               	rrf	??___flmul,f
  3614     023D                     u1730:
  3615     023D  0B89               	decfsz	9,f
  3616     023E  2A39               	goto	u1735
  3617     023F  0836               	movf	??___flmul,w
  3618     0240  07C2               	addwf	___flmul@prod,f
  3619     0241  0837               	movf	??___flmul+1,w
  3620     0242  3DC3               	addwfc	___flmul@prod+1,f
  3621     0243  0838               	movf	??___flmul+2,w
  3622     0244  3DC4               	addwfc	___flmul@prod+2,f
  3623     0245  0839               	movf	??___flmul+3,w
  3624     0246  3DC5               	addwfc	___flmul@prod+3,f
  3625     0247                     l2608:
  3626     0247  3008               	movlw	8
  3627     0248                     u1745:
  3628     0248  35BC               	lslf	___flmul@grs,f
  3629     0249  0DBD               	rlf	___flmul@grs+1,f
  3630     024A  0DBE               	rlf	___flmul@grs+2,f
  3631     024B  0DBF               	rlf	___flmul@grs+3,f
  3632     024C  0B89               	decfsz	9,f
  3633     024D  2A48               	goto	u1745
  3634     024E                     l2610:
  3635     024E  0841               	movf	___flmul@bexp,w
  3636     024F  0740               	addwf	___flmul@aexp,w
  3637     0250  00B6               	movwf	??___flmul
  3638     0251  01B7               	clrf	??___flmul+1
  3639     0252  0DB7               	rlf	??___flmul+1,f
  3640     0253  0836               	movf	??___flmul,w
  3641     0254  3E82               	addlw	130
  3642     0255  00C6               	movwf	___flmul@temp
  3643     0256  30FF               	movlw	255
  3644     0257  3D37               	addwfc	??___flmul+1,w
  3645     0258  00C7               	movwf	___flmul@temp+1
  3646     0259  2A71               	goto	l2622
  3647     025A                     l2612:
  3648     025A  3001               	movlw	1
  3649     025B                     u1755:
  3650     025B  35C2               	lslf	___flmul@prod,f
  3651     025C  0DC3               	rlf	___flmul@prod+1,f
  3652     025D  0DC4               	rlf	___flmul@prod+2,f
  3653     025E  0DC5               	rlf	___flmul@prod+3,f
  3654     025F  0B89               	decfsz	9,f
  3655     0260  2A5B               	goto	u1755
  3656     0261                     l2614:
  3657     0261  1FBF               	btfss	___flmul@grs+3,7
  3658     0262  2A64               	goto	u1761
  3659     0263  2A65               	goto	u1760
  3660     0264                     u1761:
  3661     0264  2A66               	goto	l2618
  3662     0265                     u1760:
  3663     0265                     l2616:
  3664     0265  1442               	bsf	___flmul@prod,0
  3665     0266                     l2618:
  3666     0266  3001               	movlw	1
  3667     0267                     u1775:
  3668     0267  35BC               	lslf	___flmul@grs,f
  3669     0268  0DBD               	rlf	___flmul@grs+1,f
  3670     0269  0DBE               	rlf	___flmul@grs+2,f
  3671     026A  0DBF               	rlf	___flmul@grs+3,f
  3672     026B  0B89               	decfsz	9,f
  3673     026C  2A67               	goto	u1775
  3674     026D                     l2620:
  3675     026D  30FF               	movlw	255
  3676     026E  07C6               	addwf	___flmul@temp,f
  3677     026F  30FF               	movlw	255
  3678     0270  3DC7               	addwfc	___flmul@temp+1,f
  3679     0271                     l2622:
  3680     0271  1FC4               	btfss	___flmul@prod+2,7
  3681     0272  2A74               	goto	u1781
  3682     0273  2A75               	goto	u1780
  3683     0274                     u1781:
  3684     0274  2A5A               	goto	l2612
  3685     0275                     u1780:
  3686     0275                     l2624:
  3687     0275  01C0               	clrf	___flmul@aexp
  3688     0276                     l2626:
  3689     0276  1FBF               	btfss	___flmul@grs+3,7
  3690     0277  2A79               	goto	u1791
  3691     0278  2A7A               	goto	u1790
  3692     0279                     u1791:
  3693     0279  2A96               	goto	l2634
  3694     027A                     u1790:
  3695     027A                     l2628:
  3696     027A  30FF               	movlw	255
  3697     027B  053C               	andwf	___flmul@grs,w
  3698     027C  00B6               	movwf	??___flmul
  3699     027D  30FF               	movlw	255
  3700     027E  053D               	andwf	___flmul@grs+1,w
  3701     027F  00B7               	movwf	??___flmul+1
  3702     0280  30FF               	movlw	255
  3703     0281  053E               	andwf	___flmul@grs+2,w
  3704     0282  00B8               	movwf	??___flmul+2
  3705     0283  307F               	movlw	127
  3706     0284  053F               	andwf	___flmul@grs+3,w
  3707     0285  00B9               	movwf	??___flmul+3
  3708     0286  0839               	movf	??___flmul+3,w
  3709     0287  0438               	iorwf	??___flmul+2,w
  3710     0288  0437               	iorwf	??___flmul+1,w
  3711     0289  0436               	iorwf	??___flmul,w
  3712     028A  1903               	skipnz
  3713     028B  2A8D               	goto	u1801
  3714     028C  2A8E               	goto	u1800
  3715     028D                     u1801:
  3716     028D  2A91               	goto	l1013
  3717     028E                     u1800:
  3718     028E                     l2630:
  3719     028E  01C0               	clrf	___flmul@aexp
  3720     028F  0AC0               	incf	___flmul@aexp,f
  3721     0290  2A96               	goto	l2634
  3722     0291                     l1013:
  3723     0291  1C42               	btfss	___flmul@prod,0
  3724     0292  2A94               	goto	u1811
  3725     0293  2A95               	goto	u1810
  3726     0294                     u1811:
  3727     0294  2A96               	goto	l2634
  3728     0295                     u1810:
  3729     0295  2A8E               	goto	l2630
  3730     0296                     l2634:
  3731     0296  0840               	movf	___flmul@aexp,w
  3732     0297  1903               	btfsc	3,2
  3733     0298  2A9A               	goto	u1821
  3734     0299  2A9B               	goto	u1820
  3735     029A                     u1821:
  3736     029A  2AC3               	goto	l2644
  3737     029B                     u1820:
  3738     029B                     l2636:
  3739     029B  3001               	movlw	1
  3740     029C  07C2               	addwf	___flmul@prod,f
  3741     029D  3000               	movlw	0
  3742     029E  3DC3               	addwfc	___flmul@prod+1,f
  3743     029F  3000               	movlw	0
  3744     02A0  3DC4               	addwfc	___flmul@prod+2,f
  3745     02A1  3000               	movlw	0
  3746     02A2  3DC5               	addwfc	___flmul@prod+3,f
  3747     02A3                     l2638:
  3748     02A3  1C45               	btfss	___flmul@prod+3,0
  3749     02A4  2AA6               	goto	u1831
  3750     02A5  2AA7               	goto	u1830
  3751     02A6                     u1831:
  3752     02A6  2AC3               	goto	l2644
  3753     02A7                     u1830:
  3754     02A7                     l2640:
  3755     02A7  0842               	movf	___flmul@prod,w
  3756     02A8  00B6               	movwf	??___flmul
  3757     02A9  0843               	movf	___flmul@prod+1,w
  3758     02AA  00B7               	movwf	??___flmul+1
  3759     02AB  0844               	movf	___flmul@prod+2,w
  3760     02AC  00B8               	movwf	??___flmul+2
  3761     02AD  0845               	movf	___flmul@prod+3,w
  3762     02AE  00B9               	movwf	??___flmul+3
  3763     02AF  3001               	movlw	1
  3764     02B0  00BA               	movwf	??___flmul+4
  3765     02B1                     u1845:
  3766     02B1  37B9               	asrf	??___flmul+3,f
  3767     02B2  0CB8               	rrf	??___flmul+2,f
  3768     02B3  0CB7               	rrf	??___flmul+1,f
  3769     02B4  0CB6               	rrf	??___flmul,f
  3770     02B5                     u1840:
  3771     02B5  0BBA               	decfsz	??___flmul+4,f
  3772     02B6  2AB1               	goto	u1845
  3773     02B7  0839               	movf	??___flmul+3,w
  3774     02B8  00C5               	movwf	___flmul@prod+3
  3775     02B9  0838               	movf	??___flmul+2,w
  3776     02BA  00C4               	movwf	___flmul@prod+2
  3777     02BB  0837               	movf	??___flmul+1,w
  3778     02BC  00C3               	movwf	___flmul@prod+1
  3779     02BD  0836               	movf	??___flmul,w
  3780     02BE  00C2               	movwf	___flmul@prod
  3781     02BF                     l2642:
  3782     02BF  3001               	movlw	1
  3783     02C0  07C6               	addwf	___flmul@temp,f
  3784     02C1  3000               	movlw	0
  3785     02C2  3DC7               	addwfc	___flmul@temp+1,f
  3786     02C3                     l2644:
  3787     02C3  0847               	movf	___flmul@temp+1,w
  3788     02C4  3A80               	xorlw	128
  3789     02C5  00B6               	movwf	??___flmul
  3790     02C6  3080               	movlw	128
  3791     02C7  0236               	subwf	??___flmul,w
  3792     02C8  1D03               	skipz
  3793     02C9  2ACC               	goto	u1855
  3794     02CA  30FF               	movlw	255
  3795     02CB  0246               	subwf	___flmul@temp,w
  3796     02CC                     u1855:
  3797     02CC  1C03               	skipc
  3798     02CD  2ACF               	goto	u1851
  3799     02CE  2AD0               	goto	u1850
  3800     02CF                     u1851:
  3801     02CF  2ADA               	goto	l2648
  3802     02D0                     u1850:
  3803     02D0                     l2646:
  3804     02D0  307F               	movlw	127
  3805     02D1  0020               	movlb	0	; select bank0
  3806     02D2  00C5               	movwf	___flmul@prod+3
  3807     02D3  3080               	movlw	128
  3808     02D4  00C4               	movwf	___flmul@prod+2
  3809     02D5  3000               	movlw	0
  3810     02D6  00C3               	movwf	___flmul@prod+1
  3811     02D7  3000               	movlw	0
  3812     02D8  00C2               	movwf	___flmul@prod
  3813     02D9  2B05               	goto	l1019
  3814     02DA                     l2648:
  3815     02DA  0020               	movlb	0	; select bank0
  3816     02DB  0847               	movf	___flmul@temp+1,w
  3817     02DC  3A80               	xorlw	128
  3818     02DD  00B6               	movwf	??___flmul
  3819     02DE  3080               	movlw	128
  3820     02DF  0236               	subwf	??___flmul,w
  3821     02E0  1D03               	skipz
  3822     02E1  2AE4               	goto	u1865
  3823     02E2  3001               	movlw	1
  3824     02E3  0246               	subwf	___flmul@temp,w
  3825     02E4                     u1865:
  3826     02E4  1803               	skipnc
  3827     02E5  2AE7               	goto	u1861
  3828     02E6  2AE8               	goto	u1860
  3829     02E7                     u1861:
  3830     02E7  2AF3               	goto	l2654
  3831     02E8                     u1860:
  3832     02E8                     l2650:
  3833     02E8  3000               	movlw	0
  3834     02E9  0020               	movlb	0	; select bank0
  3835     02EA  00C5               	movwf	___flmul@prod+3
  3836     02EB  3000               	movlw	0
  3837     02EC  00C4               	movwf	___flmul@prod+2
  3838     02ED  3000               	movlw	0
  3839     02EE  00C3               	movwf	___flmul@prod+1
  3840     02EF  3000               	movlw	0
  3841     02F0  00C2               	movwf	___flmul@prod
  3842     02F1                     l2652:
  3843     02F1  01BB               	clrf	___flmul@sign
  3844     02F2  2B05               	goto	l1019
  3845     02F3                     l2654:
  3846     02F3  0020               	movlb	0	; select bank0
  3847     02F4  0846               	movf	___flmul@temp,w
  3848     02F5  00C1               	movwf	___flmul@bexp
  3849     02F6  30FF               	movlw	255
  3850     02F7  05C2               	andwf	___flmul@prod,f
  3851     02F8  30FF               	movlw	255
  3852     02F9  05C3               	andwf	___flmul@prod+1,f
  3853     02FA  307F               	movlw	127
  3854     02FB  05C4               	andwf	___flmul@prod+2,f
  3855     02FC  3000               	movlw	0
  3856     02FD  05C5               	andwf	___flmul@prod+3,f
  3857     02FE                     l2656:
  3858     02FE  1C41               	btfss	___flmul@bexp,0
  3859     02FF  2B01               	goto	u1871
  3860     0300  2B02               	goto	u1870
  3861     0301                     u1871:
  3862     0301  2B03               	goto	l2660
  3863     0302                     u1870:
  3864     0302                     l2658:
  3865     0302  17C4               	bsf	___flmul@prod+2,7
  3866     0303                     l2660:
  3867     0303  3641               	lsrf	___flmul@bexp,w
  3868     0304  00C5               	movwf	___flmul@prod+3
  3869     0305                     l1019:
  3870     0305  083B               	movf	___flmul@sign,w
  3871     0306  00B6               	movwf	??___flmul
  3872     0307  0836               	movf	??___flmul,w
  3873     0308  04C5               	iorwf	___flmul@prod+3,f
  3874     0309                     l2662:
  3875     0309  0845               	movf	___flmul@prod+3,w
  3876     030A  00B1               	movwf	?___flmul+3
  3877     030B  0844               	movf	___flmul@prod+2,w
  3878     030C  00B0               	movwf	?___flmul+2
  3879     030D  0843               	movf	___flmul@prod+1,w
  3880     030E  00AF               	movwf	?___flmul+1
  3881     030F  0842               	movf	___flmul@prod,w
  3882     0310  00AE               	movwf	?___flmul
  3883     0311                     l1007:
  3884     0311  0008               	return
  3885     0312                     __end_of___flmul:
  3886                           
  3887                           	psect	text5
  3888     0CF4                     __ptext5:	
  3889 ;; *************** function __Umul8_16 *****************
  3890 ;; Defined at:
  3891 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8_16.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;  multiplier      1    wreg     unsigned char 
  3894 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;  multiplier      1    8[BANK0 ] unsigned char 
  3897 ;;  word_mpld       2    6[BANK0 ] unsigned short 
  3898 ;;  product         2    4[BANK0 ] unsigned short 
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  2    0[BANK0 ] unsigned int 
  3901 ;; Registers used:
  3902 ;;		wreg, status,2, status,0
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3908 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3909 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3910 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3911 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3912 ;;Total ram usage:        9 bytes
  3913 ;; Hardware stack levels used: 1
  3914 ;; Hardware stack levels required when called: 2
  3915 ;; This function calls:
  3916 ;;		Nothing
  3917 ;; This function is called by:
  3918 ;;		___flmul
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922     0CF4                     __Umul8_16:	
  3923                           ;psect for function __Umul8_16
  3924                           
  3925                           
  3926                           ;incstack = 0
  3927                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3928                           ;__Umul8_16@multiplier stored from wreg
  3929     0CF4  0020               	movlb	0	; select bank0
  3930     0CF5  00A8               	movwf	__Umul8_16@multiplier
  3931     0CF6                     l2326:
  3932     0CF6  01A4               	clrf	__Umul8_16@product
  3933     0CF7  01A5               	clrf	__Umul8_16@product+1
  3934     0CF8                     l2328:
  3935     0CF8  0820               	movf	__Umul8_16@multiplicand,w
  3936     0CF9  00A2               	movwf	??__Umul8_16
  3937     0CFA  01A3               	clrf	??__Umul8_16+1
  3938     0CFB  0822               	movf	??__Umul8_16,w
  3939     0CFC  00A6               	movwf	__Umul8_16@word_mpld
  3940     0CFD  0823               	movf	??__Umul8_16+1,w
  3941     0CFE  00A7               	movwf	__Umul8_16@word_mpld+1
  3942     0CFF                     l2330:
  3943     0CFF  1C28               	btfss	__Umul8_16@multiplier,0
  3944     0D00  2D02               	goto	u1411
  3945     0D01  2D03               	goto	u1410
  3946     0D02                     u1411:
  3947     0D02  2D07               	goto	l1026
  3948     0D03                     u1410:
  3949     0D03                     l2332:
  3950     0D03  0826               	movf	__Umul8_16@word_mpld,w
  3951     0D04  07A4               	addwf	__Umul8_16@product,f
  3952     0D05  0827               	movf	__Umul8_16@word_mpld+1,w
  3953     0D06  3DA5               	addwfc	__Umul8_16@product+1,f
  3954     0D07                     l1026:
  3955     0D07  3001               	movlw	1
  3956     0D08                     u1425:
  3957     0D08  35A6               	lslf	__Umul8_16@word_mpld,f
  3958     0D09  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  3959     0D0A  0B89               	decfsz	9,f
  3960     0D0B  2D08               	goto	u1425
  3961     0D0C  1003               	clrc
  3962     0D0D  0CA8               	rrf	__Umul8_16@multiplier,f
  3963     0D0E                     l2334:
  3964     0D0E  0828               	movf	__Umul8_16@multiplier,w
  3965     0D0F  1D03               	btfss	3,2
  3966     0D10  2D12               	goto	u1431
  3967     0D11  2D13               	goto	u1430
  3968     0D12                     u1431:
  3969     0D12  2CFF               	goto	l2330
  3970     0D13                     u1430:
  3971     0D13                     l2336:
  3972     0D13  0825               	movf	__Umul8_16@product+1,w
  3973     0D14  00A1               	movwf	?__Umul8_16+1
  3974     0D15  0824               	movf	__Umul8_16@product,w
  3975     0D16  00A0               	movwf	?__Umul8_16
  3976     0D17                     l1028:
  3977     0D17  0008               	return
  3978     0D18                     __end_of__Umul8_16:
  3979                           
  3980                           	psect	text6
  3981     0CD3                     __ptext6:	
  3982 ;; *************** function _CreateTurnRightCommmand *****************
  3983 ;; Defined at:
  3984 ;;		line 283 in file "motorMain.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;  pwm             2    0[BANK0 ] unsigned int 
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;		None
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  1    wreg      void 
  3991 ;; Registers used:
  3992 ;;		wreg, status,2, status,0
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3998 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4001 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4002 ;;Total ram usage:        2 bytes
  4003 ;; Hardware stack levels used: 1
  4004 ;; Hardware stack levels required when called: 2
  4005 ;; This function calls:
  4006 ;;		Nothing
  4007 ;; This function is called by:
  4008 ;;		_drive
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012     0CD3                     _CreateTurnRightCommmand:	
  4013                           ;psect for function _CreateTurnRightCommmand
  4014                           
  4015     0CD3                     l2424:	
  4016                           ;incstack = 0
  4017                           ; Regs used in _CreateTurnRightCommmand: [wreg+status,2+status,0]
  4018                           
  4019                           
  4020                           ;motorMain.c: 284:     currentCommand.sendId = 3;
  4021     0CD3  3003               	movlw	3
  4022     0CD4  0020               	movlb	0	; select bank0
  4023     0CD5  00D9               	movwf	_currentCommand+4
  4024     0CD6  3000               	movlw	0
  4025     0CD7  00DA               	movwf	_currentCommand+5
  4026     0CD8                     l2426:
  4027                           
  4028                           ;motorMain.c: 285:     currentCommand.sendIt = 0;
  4029     0CD8  01D7               	clrf	_currentCommand+2
  4030     0CD9  01D8               	clrf	_currentCommand+3
  4031     0CDA                     l2428:
  4032                           
  4033                           ;motorMain.c: 286:     currentCommand.sendLimit = 10;
  4034     0CDA  300A               	movlw	10
  4035     0CDB  00D5               	movwf	_currentCommand
  4036     0CDC  3000               	movlw	0
  4037     0CDD  00D6               	movwf	_currentCommand+1
  4038                           
  4039                           ;motorMain.c: 287:     currentCommand.receiveId = 0;
  4040     0CDE  01E1               	clrf	_currentCommand+12
  4041     0CDF  01E2               	clrf	_currentCommand+13
  4042                           
  4043                           ;motorMain.c: 288:     currentCommand.receiveLimit = 0;
  4044     0CE0  01DF               	clrf	_currentCommand+10
  4045     0CE1  01E0               	clrf	_currentCommand+11
  4046                           
  4047                           ;motorMain.c: 289:     currentCommand.receiveIt = 0;
  4048     0CE2  01DD               	clrf	_currentCommand+8
  4049     0CE3  01DE               	clrf	_currentCommand+9
  4050                           
  4051                           ;motorMain.c: 290:     currentCommand.done = 0;
  4052     0CE4  01E3               	clrf	_currentCommand+14
  4053     0CE5                     l2430:
  4054                           
  4055                           ;motorMain.c: 292:     TurnRightCommand[7] = pwm;
  4056     0CE5  0820               	movf	CreateTurnRightCommmand@pwm,w
  4057     0CE6  0021               	movlb	1	; select bank1
  4058     0CE7  00C1               	movwf	(_TurnRightCommand^(0+128)+7)
  4059     0CE8                     l2432:
  4060                           
  4061                           ;motorMain.c: 293:     TurnRightCommand[9] = pwm;
  4062     0CE8  0020               	movlb	0	; select bank0
  4063     0CE9  0820               	movf	CreateTurnRightCommmand@pwm,w
  4064     0CEA  0021               	movlb	1	; select bank1
  4065     0CEB  00C3               	movwf	(_TurnRightCommand^(0+128)+9)
  4066     0CEC                     l2434:
  4067                           
  4068                           ;motorMain.c: 294:     currentCommand.toSend = TurnRightCommand;
  4069     0CEC  30BA               	movlw	low _TurnRightCommand
  4070     0CED  0020               	movlb	0	; select bank0
  4071     0CEE  00DB               	movwf	low ((_currentCommand| 0+6))
  4072     0CEF  3000               	movlw	high _TurnRightCommand
  4073     0CF0  00DC               	movwf	(low ((_currentCommand| 0+6))+1)
  4074     0CF1                     l2436:
  4075                           
  4076                           ;motorMain.c: 295:     PIE3bits.TXIE = 1;
  4077     0CF1  002E               	movlb	14	; select bank14
  4078     0CF2  1619               	bsf	25,4	;volatile
  4079     0CF3                     l413:
  4080     0CF3  0008               	return
  4081     0CF4                     __end_of_CreateTurnRightCommmand:
  4082                           
  4083                           	psect	text7
  4084     0CB2                     __ptext7:	
  4085 ;; *************** function _CreateTurnLeftCommmand *****************
  4086 ;; Defined at:
  4087 ;;		line 298 in file "motorMain.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;  pwm             2    0[BANK0 ] unsigned int 
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;		None
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  1    wreg      void 
  4094 ;; Registers used:
  4095 ;;		wreg, status,2, status,0
  4096 ;; Tracked objects:
  4097 ;;		On entry : 0/0
  4098 ;;		On exit  : 0/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4101 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4104 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4105 ;;Total ram usage:        2 bytes
  4106 ;; Hardware stack levels used: 1
  4107 ;; Hardware stack levels required when called: 2
  4108 ;; This function calls:
  4109 ;;		Nothing
  4110 ;; This function is called by:
  4111 ;;		_drive
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115     0CB2                     _CreateTurnLeftCommmand:	
  4116                           ;psect for function _CreateTurnLeftCommmand
  4117                           
  4118     0CB2                     l2438:	
  4119                           ;incstack = 0
  4120                           ; Regs used in _CreateTurnLeftCommmand: [wreg+status,2+status,0]
  4121                           
  4122                           
  4123                           ;motorMain.c: 299:     currentCommand.sendId = 4;
  4124     0CB2  3004               	movlw	4
  4125     0CB3  0020               	movlb	0	; select bank0
  4126     0CB4  00D9               	movwf	_currentCommand+4
  4127     0CB5  3000               	movlw	0
  4128     0CB6  00DA               	movwf	_currentCommand+5
  4129     0CB7                     l2440:
  4130                           
  4131                           ;motorMain.c: 300:     currentCommand.sendIt = 0;
  4132     0CB7  01D7               	clrf	_currentCommand+2
  4133     0CB8  01D8               	clrf	_currentCommand+3
  4134     0CB9                     l2442:
  4135                           
  4136                           ;motorMain.c: 301:     currentCommand.sendLimit = 10;
  4137     0CB9  300A               	movlw	10
  4138     0CBA  00D5               	movwf	_currentCommand
  4139     0CBB  3000               	movlw	0
  4140     0CBC  00D6               	movwf	_currentCommand+1
  4141                           
  4142                           ;motorMain.c: 302:     currentCommand.receiveId = 0;
  4143     0CBD  01E1               	clrf	_currentCommand+12
  4144     0CBE  01E2               	clrf	_currentCommand+13
  4145                           
  4146                           ;motorMain.c: 303:     currentCommand.receiveLimit = 0;
  4147     0CBF  01DF               	clrf	_currentCommand+10
  4148     0CC0  01E0               	clrf	_currentCommand+11
  4149                           
  4150                           ;motorMain.c: 304:     currentCommand.receiveIt = 0;
  4151     0CC1  01DD               	clrf	_currentCommand+8
  4152     0CC2  01DE               	clrf	_currentCommand+9
  4153                           
  4154                           ;motorMain.c: 305:     currentCommand.done = 0;
  4155     0CC3  01E3               	clrf	_currentCommand+14
  4156     0CC4                     l2444:
  4157                           
  4158                           ;motorMain.c: 307:     TurnLeftCommand[7] = pwm;
  4159     0CC4  0820               	movf	CreateTurnLeftCommmand@pwm,w
  4160     0CC5  0021               	movlb	1	; select bank1
  4161     0CC6  00CB               	movwf	(_TurnLeftCommand^(0+128)+7)
  4162     0CC7                     l2446:
  4163                           
  4164                           ;motorMain.c: 308:     TurnLeftCommand[9] = pwm;
  4165     0CC7  0020               	movlb	0	; select bank0
  4166     0CC8  0820               	movf	CreateTurnLeftCommmand@pwm,w
  4167     0CC9  0021               	movlb	1	; select bank1
  4168     0CCA  00CD               	movwf	(_TurnLeftCommand^(0+128)+9)
  4169     0CCB                     l2448:
  4170                           
  4171                           ;motorMain.c: 309:     currentCommand.toSend = TurnLeftCommand;
  4172     0CCB  30C4               	movlw	low _TurnLeftCommand
  4173     0CCC  0020               	movlb	0	; select bank0
  4174     0CCD  00DB               	movwf	low ((_currentCommand| 0+6))
  4175     0CCE  3000               	movlw	high _TurnLeftCommand
  4176     0CCF  00DC               	movwf	(low ((_currentCommand| 0+6))+1)
  4177     0CD0                     l2450:
  4178                           
  4179                           ;motorMain.c: 310:     PIE3bits.TXIE = 1;
  4180     0CD0  002E               	movlb	14	; select bank14
  4181     0CD1  1619               	bsf	25,4	;volatile
  4182     0CD2                     l416:
  4183     0CD2  0008               	return
  4184     0CD3                     __end_of_CreateTurnLeftCommmand:
  4185                           
  4186                           	psect	text8
  4187     0C91                     __ptext8:	
  4188 ;; *************** function _CreateMoveForwardCommmand *****************
  4189 ;; Defined at:
  4190 ;;		line 313 in file "motorMain.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;  pwm             2    0[BANK0 ] unsigned int 
  4193 ;; Auto vars:     Size  Location     Type
  4194 ;;		None
  4195 ;; Return value:  Size  Location     Type
  4196 ;;                  1    wreg      void 
  4197 ;; Registers used:
  4198 ;;		wreg, status,2, status,0
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4204 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4207 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4208 ;;Total ram usage:        2 bytes
  4209 ;; Hardware stack levels used: 1
  4210 ;; Hardware stack levels required when called: 2
  4211 ;; This function calls:
  4212 ;;		Nothing
  4213 ;; This function is called by:
  4214 ;;		_drive
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218     0C91                     _CreateMoveForwardCommmand:	
  4219                           ;psect for function _CreateMoveForwardCommmand
  4220                           
  4221     0C91                     l2452:	
  4222                           ;incstack = 0
  4223                           ; Regs used in _CreateMoveForwardCommmand: [wreg+status,2+status,0]
  4224                           
  4225                           
  4226                           ;motorMain.c: 314:     currentCommand.sendId = 5;
  4227     0C91  3005               	movlw	5
  4228     0C92  0020               	movlb	0	; select bank0
  4229     0C93  00D9               	movwf	_currentCommand+4
  4230     0C94  3000               	movlw	0
  4231     0C95  00DA               	movwf	_currentCommand+5
  4232     0C96                     l2454:
  4233                           
  4234                           ;motorMain.c: 315:     currentCommand.sendIt = 0;
  4235     0C96  01D7               	clrf	_currentCommand+2
  4236     0C97  01D8               	clrf	_currentCommand+3
  4237     0C98                     l2456:
  4238                           
  4239                           ;motorMain.c: 316:     currentCommand.sendLimit = 10;
  4240     0C98  300A               	movlw	10
  4241     0C99  00D5               	movwf	_currentCommand
  4242     0C9A  3000               	movlw	0
  4243     0C9B  00D6               	movwf	_currentCommand+1
  4244                           
  4245                           ;motorMain.c: 317:     currentCommand.receiveId = 0;
  4246     0C9C  01E1               	clrf	_currentCommand+12
  4247     0C9D  01E2               	clrf	_currentCommand+13
  4248                           
  4249                           ;motorMain.c: 318:     currentCommand.receiveLimit = 0;
  4250     0C9E  01DF               	clrf	_currentCommand+10
  4251     0C9F  01E0               	clrf	_currentCommand+11
  4252                           
  4253                           ;motorMain.c: 319:     currentCommand.receiveIt = 0;
  4254     0CA0  01DD               	clrf	_currentCommand+8
  4255     0CA1  01DE               	clrf	_currentCommand+9
  4256                           
  4257                           ;motorMain.c: 320:     currentCommand.done = 0;
  4258     0CA2  01E3               	clrf	_currentCommand+14
  4259     0CA3                     l2458:
  4260                           
  4261                           ;motorMain.c: 322:     MoveForwardCommand[7] = pwm;
  4262     0CA3  0820               	movf	CreateMoveForwardCommmand@pwm,w
  4263     0CA4  0021               	movlb	1	; select bank1
  4264     0CA5  00B7               	movwf	(_MoveForwardCommand^(0+128)+7)
  4265     0CA6                     l2460:
  4266                           
  4267                           ;motorMain.c: 323:     MoveForwardCommand[9] = pwm;
  4268     0CA6  0020               	movlb	0	; select bank0
  4269     0CA7  0820               	movf	CreateMoveForwardCommmand@pwm,w
  4270     0CA8  0021               	movlb	1	; select bank1
  4271     0CA9  00B9               	movwf	(_MoveForwardCommand^(0+128)+9)
  4272     0CAA                     l2462:
  4273                           
  4274                           ;motorMain.c: 324:     currentCommand.toSend = MoveForwardCommand;
  4275     0CAA  30B0               	movlw	low _MoveForwardCommand
  4276     0CAB  0020               	movlb	0	; select bank0
  4277     0CAC  00DB               	movwf	low ((_currentCommand| 0+6))
  4278     0CAD  3000               	movlw	high _MoveForwardCommand
  4279     0CAE  00DC               	movwf	(low ((_currentCommand| 0+6))+1)
  4280     0CAF                     l2464:
  4281                           
  4282                           ;motorMain.c: 325:     PIE3bits.TXIE = 1;
  4283     0CAF  002E               	movlb	14	; select bank14
  4284     0CB0  1619               	bsf	25,4	;volatile
  4285     0CB1                     l419:
  4286     0CB1  0008               	return
  4287     0CB2                     __end_of_CreateMoveForwardCommmand:
  4288                           
  4289                           	psect	text9
  4290     0C70                     __ptext9:	
  4291 ;; *************** function _CreateMoveBackwardCommmand *****************
  4292 ;; Defined at:
  4293 ;;		line 328 in file "motorMain.c"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;  pwm             2    0[BANK0 ] unsigned int 
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;		None
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  1    wreg      void 
  4300 ;; Registers used:
  4301 ;;		wreg, status,2, status,0
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4307 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4310 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4311 ;;Total ram usage:        2 bytes
  4312 ;; Hardware stack levels used: 1
  4313 ;; Hardware stack levels required when called: 2
  4314 ;; This function calls:
  4315 ;;		Nothing
  4316 ;; This function is called by:
  4317 ;;		_drive
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321     0C70                     _CreateMoveBackwardCommmand:	
  4322                           ;psect for function _CreateMoveBackwardCommmand
  4323                           
  4324     0C70                     l2466:	
  4325                           ;incstack = 0
  4326                           ; Regs used in _CreateMoveBackwardCommmand: [wreg+status,2+status,0]
  4327                           
  4328                           
  4329                           ;motorMain.c: 329:     currentCommand.sendId = 6;
  4330     0C70  3006               	movlw	6
  4331     0C71  0020               	movlb	0	; select bank0
  4332     0C72  00D9               	movwf	_currentCommand+4
  4333     0C73  3000               	movlw	0
  4334     0C74  00DA               	movwf	_currentCommand+5
  4335     0C75                     l2468:
  4336                           
  4337                           ;motorMain.c: 330:     currentCommand.sendIt = 0;
  4338     0C75  01D7               	clrf	_currentCommand+2
  4339     0C76  01D8               	clrf	_currentCommand+3
  4340     0C77                     l2470:
  4341                           
  4342                           ;motorMain.c: 331:     currentCommand.sendLimit = 10;
  4343     0C77  300A               	movlw	10
  4344     0C78  00D5               	movwf	_currentCommand
  4345     0C79  3000               	movlw	0
  4346     0C7A  00D6               	movwf	_currentCommand+1
  4347                           
  4348                           ;motorMain.c: 332:     currentCommand.receiveId = 0;
  4349     0C7B  01E1               	clrf	_currentCommand+12
  4350     0C7C  01E2               	clrf	_currentCommand+13
  4351                           
  4352                           ;motorMain.c: 333:     currentCommand.receiveLimit = 0;
  4353     0C7D  01DF               	clrf	_currentCommand+10
  4354     0C7E  01E0               	clrf	_currentCommand+11
  4355                           
  4356                           ;motorMain.c: 334:     currentCommand.receiveIt = 0;
  4357     0C7F  01DD               	clrf	_currentCommand+8
  4358     0C80  01DE               	clrf	_currentCommand+9
  4359                           
  4360                           ;motorMain.c: 335:     currentCommand.done = 0;
  4361     0C81  01E3               	clrf	_currentCommand+14
  4362     0C82                     l2472:
  4363                           
  4364                           ;motorMain.c: 337:     MoveBackwardCommand[7] = pwm;
  4365     0C82  0820               	movf	CreateMoveBackwardCommmand@pwm,w
  4366     0C83  0021               	movlb	1	; select bank1
  4367     0C84  00AD               	movwf	(_MoveBackwardCommand^(0+128)+7)
  4368     0C85                     l2474:
  4369                           
  4370                           ;motorMain.c: 338:     MoveBackwardCommand[9] = pwm;
  4371     0C85  0020               	movlb	0	; select bank0
  4372     0C86  0820               	movf	CreateMoveBackwardCommmand@pwm,w
  4373     0C87  0021               	movlb	1	; select bank1
  4374     0C88  00AF               	movwf	(_MoveBackwardCommand^(0+128)+9)
  4375     0C89                     l2476:
  4376                           
  4377                           ;motorMain.c: 339:     currentCommand.toSend = MoveBackwardCommand;
  4378     0C89  30A6               	movlw	low _MoveBackwardCommand
  4379     0C8A  0020               	movlb	0	; select bank0
  4380     0C8B  00DB               	movwf	low ((_currentCommand| 0+6))
  4381     0C8C  3000               	movlw	high _MoveBackwardCommand
  4382     0C8D  00DC               	movwf	(low ((_currentCommand| 0+6))+1)
  4383     0C8E                     l2478:
  4384                           
  4385                           ;motorMain.c: 340:     PIE3bits.TXIE = 1;
  4386     0C8E  002E               	movlb	14	; select bank14
  4387     0C8F  1619               	bsf	25,4	;volatile
  4388     0C90                     l422:
  4389     0C90  0008               	return
  4390     0C91                     __end_of_CreateMoveBackwardCommmand:
  4391                           
  4392                           	psect	text10
  4393     0C53                     __ptext10:	
  4394 ;; *************** function _CreateControlsCommand *****************
  4395 ;; Defined at:
  4396 ;;		line 356 in file "motorMain.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;		None
  4399 ;; Auto vars:     Size  Location     Type
  4400 ;;		None
  4401 ;; Return value:  Size  Location     Type
  4402 ;;                  1    wreg      void 
  4403 ;; Registers used:
  4404 ;;		wreg, status,2, status,0
  4405 ;; Tracked objects:
  4406 ;;		On entry : 0/0
  4407 ;;		On exit  : 0/0
  4408 ;;		Unchanged: 0/0
  4409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4414 ;;Total ram usage:        0 bytes
  4415 ;; Hardware stack levels used: 1
  4416 ;; Hardware stack levels required when called: 2
  4417 ;; This function calls:
  4418 ;;		Nothing
  4419 ;; This function is called by:
  4420 ;;		_main
  4421 ;;		_drive
  4422 ;; This function uses a non-reentrant model
  4423 ;;
  4424                           
  4425     0C53                     _CreateControlsCommand:	
  4426                           ;psect for function _CreateControlsCommand
  4427                           
  4428     0C53                     l2408:	
  4429                           ;incstack = 0
  4430                           ; Regs used in _CreateControlsCommand: [wreg+status,2+status,0]
  4431                           
  4432                           
  4433                           ;motorMain.c: 357:     currentCommand.receiveId = CONTROL_INPUT;
  4434     0C53  3001               	movlw	1
  4435     0C54  0020               	movlb	0	; select bank0
  4436     0C55  00E1               	movwf	_currentCommand+12
  4437     0C56  3000               	movlw	0
  4438     0C57  00E2               	movwf	_currentCommand+13
  4439                           
  4440                           ;motorMain.c: 358:     currentCommand.receiveLimit = 26;
  4441     0C58  301A               	movlw	26
  4442     0C59  00DF               	movwf	_currentCommand+10
  4443     0C5A  3000               	movlw	0
  4444     0C5B  00E0               	movwf	_currentCommand+11
  4445     0C5C                     l2410:
  4446                           
  4447                           ;motorMain.c: 359:     currentCommand.receiveIt = 0;
  4448     0C5C  01DD               	clrf	_currentCommand+8
  4449     0C5D  01DE               	clrf	_currentCommand+9
  4450     0C5E                     l2412:
  4451                           
  4452                           ;motorMain.c: 360:     currentCommand.sendId = CONTROL_OUTPUT;
  4453     0C5E  3001               	movlw	1
  4454     0C5F  00D9               	movwf	_currentCommand+4
  4455     0C60  3000               	movlw	0
  4456     0C61  00DA               	movwf	_currentCommand+5
  4457     0C62                     l2414:
  4458                           
  4459                           ;motorMain.c: 361:     currentCommand.toSend = (unsigned char*) GetUserDataCommand;
  4460     0C62  30CE               	movlw	low _GetUserDataCommand
  4461     0C63  00DB               	movwf	low ((_currentCommand| 0+6))
  4462     0C64  3000               	movlw	high _GetUserDataCommand
  4463     0C65  00DC               	movwf	(low ((_currentCommand| 0+6))+1)
  4464     0C66                     l2416:
  4465                           
  4466                           ;motorMain.c: 362:     currentCommand.sendIt = 0;
  4467     0C66  01D7               	clrf	_currentCommand+2
  4468     0C67  01D8               	clrf	_currentCommand+3
  4469     0C68                     l2418:
  4470                           
  4471                           ;motorMain.c: 363:     currentCommand.sendLimit = 6;
  4472     0C68  3006               	movlw	6
  4473     0C69  00D5               	movwf	_currentCommand
  4474     0C6A  3000               	movlw	0
  4475     0C6B  00D6               	movwf	_currentCommand+1
  4476     0C6C                     l2420:
  4477                           
  4478                           ;motorMain.c: 364:     currentCommand.done = 0;
  4479     0C6C  01E3               	clrf	_currentCommand+14
  4480     0C6D                     l2422:
  4481                           
  4482                           ;motorMain.c: 365:     PIE3bits.TXIE = 1;
  4483     0C6D  002E               	movlb	14	; select bank14
  4484     0C6E  1619               	bsf	25,4	;volatile
  4485     0C6F                     l428:
  4486     0C6F  0008               	return
  4487     0C70                     __end_of_CreateControlsCommand:
  4488                           
  4489                           	psect	text11
  4490     0C04                     __ptext11:	
  4491 ;; *************** function _CreateBreak *****************
  4492 ;; Defined at:
  4493 ;;		line 343 in file "motorMain.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;		None
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;		None
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  1    wreg      void 
  4500 ;; Registers used:
  4501 ;;		wreg, status,2, status,0
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4511 ;;Total ram usage:        0 bytes
  4512 ;; Hardware stack levels used: 1
  4513 ;; Hardware stack levels required when called: 2
  4514 ;; This function calls:
  4515 ;;		Nothing
  4516 ;; This function is called by:
  4517 ;;		_drive
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521     0C04                     _CreateBreak:	
  4522                           ;psect for function _CreateBreak
  4523                           
  4524     0C04                     l2480:	
  4525                           ;incstack = 0
  4526                           ; Regs used in _CreateBreak: [wreg+status,2+status,0]
  4527                           
  4528                           
  4529                           ;motorMain.c: 344:     currentCommand.sendId = 7;
  4530     0C04  3007               	movlw	7
  4531     0C05  0020               	movlb	0	; select bank0
  4532     0C06  00D9               	movwf	_currentCommand+4
  4533     0C07  3000               	movlw	0
  4534     0C08  00DA               	movwf	_currentCommand+5
  4535     0C09                     l2482:
  4536                           
  4537                           ;motorMain.c: 345:     currentCommand.sendIt = 0;
  4538     0C09  01D7               	clrf	_currentCommand+2
  4539     0C0A  01D8               	clrf	_currentCommand+3
  4540     0C0B                     l2484:
  4541                           
  4542                           ;motorMain.c: 346:     currentCommand.sendLimit = 10;
  4543     0C0B  300A               	movlw	10
  4544     0C0C  00D5               	movwf	_currentCommand
  4545     0C0D  3000               	movlw	0
  4546     0C0E  00D6               	movwf	_currentCommand+1
  4547                           
  4548                           ;motorMain.c: 347:     currentCommand.receiveId = 0;
  4549     0C0F  01E1               	clrf	_currentCommand+12
  4550     0C10  01E2               	clrf	_currentCommand+13
  4551                           
  4552                           ;motorMain.c: 348:     currentCommand.receiveLimit = 0;
  4553     0C11  01DF               	clrf	_currentCommand+10
  4554     0C12  01E0               	clrf	_currentCommand+11
  4555                           
  4556                           ;motorMain.c: 349:     currentCommand.receiveIt = 0;
  4557     0C13  01DD               	clrf	_currentCommand+8
  4558     0C14  01DE               	clrf	_currentCommand+9
  4559                           
  4560                           ;motorMain.c: 350:     currentCommand.done = 0;
  4561     0C15  01E3               	clrf	_currentCommand+14
  4562     0C16                     l2486:
  4563                           
  4564                           ;motorMain.c: 352:     currentCommand.toSend = Break;
  4565     0C16  3058               	movlw	low _Break
  4566     0C17  00DB               	movwf	low ((_currentCommand| 0+6))
  4567     0C18  3001               	movlw	high _Break
  4568     0C19  00DC               	movwf	(low ((_currentCommand| 0+6))+1)
  4569     0C1A                     l2488:
  4570                           
  4571                           ;motorMain.c: 353:     PIE3bits.TXIE = 1;
  4572     0C1A  002E               	movlb	14	; select bank14
  4573     0C1B  1619               	bsf	25,4	;volatile
  4574     0C1C                     l425:
  4575     0C1C  0008               	return
  4576     0C1D                     __end_of_CreateBreak:
  4577                           
  4578                           	psect	text12
  4579     0B7C                     __ptext12:	
  4580 ;; *************** function _SetUpPumpArm *****************
  4581 ;; Defined at:
  4582 ;;		line 370 in file "motorMain.c"
  4583 ;; Parameters:    Size  Location     Type
  4584 ;;		None
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;		None
  4587 ;; Return value:  Size  Location     Type
  4588 ;;                  1    wreg      void 
  4589 ;; Registers used:
  4590 ;;		None
  4591 ;; Tracked objects:
  4592 ;;		On entry : 0/0
  4593 ;;		On exit  : 0/0
  4594 ;;		Unchanged: 0/0
  4595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4600 ;;Total ram usage:        0 bytes
  4601 ;; Hardware stack levels used: 1
  4602 ;; Hardware stack levels required when called: 2
  4603 ;; This function calls:
  4604 ;;		Nothing
  4605 ;; This function is called by:
  4606 ;;		_main
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610     0B7C                     _SetUpPumpArm:	
  4611                           ;psect for function _SetUpPumpArm
  4612                           
  4613     0B7C                     l2774:	
  4614                           ;incstack = 0
  4615                           ; Regs used in _SetUpPumpArm: []
  4616                           
  4617                           
  4618                           ;motorMain.c: 373:     TRISBbits.TRISB0 = 0;
  4619     0B7C  0020               	movlb	0	; select bank0
  4620     0B7D  1012               	bcf	18,0	;volatile
  4621                           
  4622                           ;motorMain.c: 374:     TRISBbits.TRISB1 = 0;
  4623     0B7E  1092               	bcf	18,1	;volatile
  4624                           
  4625                           ;motorMain.c: 375:     ANSELBbits.ANSB0 = 0;
  4626     0B7F  003E               	movlb	30	; select bank30
  4627     0B80  1043               	bcf	67,0	;volatile
  4628                           
  4629                           ;motorMain.c: 376:     ANSELBbits.ANSB1 = 0;
  4630     0B81  10C3               	bcf	67,1	;volatile
  4631                           
  4632                           ;motorMain.c: 378:     LATBbits.LATB0 = 0;
  4633     0B82  0020               	movlb	0	; select bank0
  4634     0B83  1017               	bcf	23,0	;volatile
  4635                           
  4636                           ;motorMain.c: 379:     LATBbits.LATB1 = 0;
  4637     0B84  1097               	bcf	23,1	;volatile
  4638     0B85                     l431:
  4639     0B85  0008               	return
  4640     0B86                     __end_of_SetUpPumpArm:
  4641                           
  4642                           	psect	text13
  4643     0B72                     __ptext13:	
  4644 ;; *************** function _SetUpPump *****************
  4645 ;; Defined at:
  4646 ;;		line 383 in file "motorMain.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;		None
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;		None
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  1    wreg      void 
  4653 ;; Registers used:
  4654 ;;		None
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4664 ;;Total ram usage:        0 bytes
  4665 ;; Hardware stack levels used: 1
  4666 ;; Hardware stack levels required when called: 2
  4667 ;; This function calls:
  4668 ;;		Nothing
  4669 ;; This function is called by:
  4670 ;;		_main
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674     0B72                     _SetUpPump:	
  4675                           ;psect for function _SetUpPump
  4676                           
  4677     0B72                     l2776:	
  4678                           ;incstack = 0
  4679                           ; Regs used in _SetUpPump: []
  4680                           
  4681                           
  4682                           ;motorMain.c: 386:     TRISBbits.TRISB2 = 0;
  4683     0B72  0020               	movlb	0	; select bank0
  4684     0B73  1112               	bcf	18,2	;volatile
  4685                           
  4686                           ;motorMain.c: 387:     TRISBbits.TRISB3 = 0;
  4687     0B74  1192               	bcf	18,3	;volatile
  4688                           
  4689                           ;motorMain.c: 388:     ANSELBbits.ANSB2 = 0;
  4690     0B75  003E               	movlb	30	; select bank30
  4691     0B76  1143               	bcf	67,2	;volatile
  4692                           
  4693                           ;motorMain.c: 389:     ANSELBbits.ANSB3 = 0;
  4694     0B77  11C3               	bcf	67,3	;volatile
  4695                           
  4696                           ;motorMain.c: 391:     LATBbits.LATB2 = 0;
  4697     0B78  0020               	movlb	0	; select bank0
  4698     0B79  1117               	bcf	23,2	;volatile
  4699                           
  4700                           ;motorMain.c: 392:     LATBbits.LATB3 = 0;
  4701     0B7A  1197               	bcf	23,3	;volatile
  4702     0B7B                     l434:
  4703     0B7B  0008               	return
  4704     0B7C                     __end_of_SetUpPump:
  4705                           
  4706                           	psect	text14
  4707     0E3D                     __ptext14:	
  4708 ;; *************** function _SetUpColorSensor *****************
  4709 ;; Defined at:
  4710 ;;		line 461 in file "./Color_Header.h"
  4711 ;; Parameters:    Size  Location     Type
  4712 ;;		None
  4713 ;; Auto vars:     Size  Location     Type
  4714 ;;  result          2    8[BANK0 ] int 
  4715 ;; Return value:  Size  Location     Type
  4716 ;;                  1    wreg      void 
  4717 ;; Registers used:
  4718 ;;		wreg, status,2, status,0, pclath, cstack
  4719 ;; Tracked objects:
  4720 ;;		On entry : 0/0
  4721 ;;		On exit  : 0/0
  4722 ;;		Unchanged: 0/0
  4723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4725 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4726 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4727 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4728 ;;Total ram usage:        4 bytes
  4729 ;; Hardware stack levels used: 1
  4730 ;; Hardware stack levels required when called: 4
  4731 ;; This function calls:
  4732 ;;		_SetUp
  4733 ;;		_SetUpI2C
  4734 ;; This function is called by:
  4735 ;;		_main
  4736 ;; This function uses a non-reentrant model
  4737 ;;
  4738                           
  4739     0E3D                     _SetUpColorSensor:	
  4740                           ;psect for function _SetUpColorSensor
  4741                           
  4742     0E3D                     l2710:	
  4743                           ;incstack = 0
  4744                           ; Regs used in _SetUpColorSensor: [wreg+status,2+status,0+pclath+cstack]
  4745                           
  4746                           
  4747                           ;./Color_Header.h: 467:     SetUpI2C();
  4748     0E3D  318B  2368  318E   	fcall	_SetUpI2C
  4749                           
  4750                           ;./Color_Header.h: 468:     int result = SetUp();
  4751     0E40  318E  2696  318E   	fcall	_SetUp
  4752     0E43  0020               	movlb	0	; select bank0
  4753     0E44  0821               	movf	?_SetUp+1,w
  4754     0E45  00A9               	movwf	SetUpColorSensor@result+1
  4755     0E46  0820               	movf	?_SetUp,w
  4756     0E47  00A8               	movwf	SetUpColorSensor@result
  4757     0E48                     l2712:
  4758                           
  4759                           ;./Color_Header.h: 469:     if(result == 1){
  4760     0E48  0328               	decf	SetUpColorSensor@result,w
  4761     0E49  0429               	iorwf	SetUpColorSensor@result+1,w
  4762     0E4A  1D03               	btfss	3,2
  4763     0E4B  2E4D               	goto	u2021
  4764     0E4C  2E4E               	goto	u2020
  4765     0E4D                     u2021:
  4766     0E4D  2E95               	goto	l293
  4767     0E4E                     u2020:
  4768     0E4E                     l2714:
  4769                           
  4770                           ;./Color_Header.h: 470:         LATAbits.LATA0 = 1;
  4771     0E4E  1416               	bsf	22,0	;volatile
  4772                           
  4773                           ;./Color_Header.h: 471:         LATAbits.LATA1 = 1;
  4774     0E4F  1496               	bsf	22,1	;volatile
  4775                           
  4776                           ;./Color_Header.h: 472:         LATAbits.LATA2 = 1;
  4777     0E50  1516               	bsf	22,2	;volatile
  4778                           
  4779                           ;./Color_Header.h: 473:         LATAbits.LATA3 = 1;
  4780     0E51  1596               	bsf	22,3	;volatile
  4781     0E52                     l2716:
  4782                           
  4783                           ;./Color_Header.h: 474:         _delay((unsigned long)((500)*(32000000/4000.0)));
  4784     0E52  3015               	movlw	21
  4785     0E53  0020               	movlb	0	; select bank0
  4786     0E54  00A7               	movwf	??_SetUpColorSensor+1
  4787     0E55  304B               	movlw	75
  4788     0E56  00A6               	movwf	??_SetUpColorSensor
  4789     0E57  30BE               	movlw	190
  4790     0E58                     u2527:
  4791     0E58  0B89               	decfsz	9,f
  4792     0E59  2E58               	goto	u2527
  4793     0E5A  0BA6               	decfsz	??_SetUpColorSensor,f
  4794     0E5B  2E58               	goto	u2527
  4795     0E5C  0BA7               	decfsz	??_SetUpColorSensor+1,f
  4796     0E5D  2E58               	goto	u2527
  4797     0E5E  0000               	nop
  4798     0E5F                     l2718:
  4799                           
  4800                           ;./Color_Header.h: 475:         LATAbits.LATA0 = 0;
  4801     0E5F  0020               	movlb	0	; select bank0
  4802     0E60  1016               	bcf	22,0	;volatile
  4803     0E61                     l2720:
  4804                           
  4805                           ;./Color_Header.h: 476:         LATAbits.LATA1 = 0;
  4806     0E61  1096               	bcf	22,1	;volatile
  4807     0E62                     l2722:
  4808                           
  4809                           ;./Color_Header.h: 477:         LATAbits.LATA2 = 0;
  4810     0E62  1116               	bcf	22,2	;volatile
  4811     0E63                     l2724:
  4812                           
  4813                           ;./Color_Header.h: 478:         LATAbits.LATA3 = 0;
  4814     0E63  1196               	bcf	22,3	;volatile
  4815                           
  4816                           ;./Color_Header.h: 479:         _delay((unsigned long)((500)*(32000000/4000.0)));
  4817     0E64  3015               	movlw	21
  4818     0E65  0020               	movlb	0	; select bank0
  4819     0E66  00A7               	movwf	??_SetUpColorSensor+1
  4820     0E67  304B               	movlw	75
  4821     0E68  00A6               	movwf	??_SetUpColorSensor
  4822     0E69  30BE               	movlw	190
  4823     0E6A                     u2537:
  4824     0E6A  0B89               	decfsz	9,f
  4825     0E6B  2E6A               	goto	u2537
  4826     0E6C  0BA6               	decfsz	??_SetUpColorSensor,f
  4827     0E6D  2E6A               	goto	u2537
  4828     0E6E  0BA7               	decfsz	??_SetUpColorSensor+1,f
  4829     0E6F  2E6A               	goto	u2537
  4830     0E70  0000               	nop
  4831     0E71                     l2726:
  4832                           
  4833                           ;./Color_Header.h: 481:         LATAbits.LATA0 = 1;
  4834     0E71  0020               	movlb	0	; select bank0
  4835     0E72  1416               	bsf	22,0	;volatile
  4836     0E73                     l2728:
  4837                           
  4838                           ;./Color_Header.h: 482:         LATAbits.LATA1 = 1;
  4839     0E73  1496               	bsf	22,1	;volatile
  4840     0E74                     l2730:
  4841                           
  4842                           ;./Color_Header.h: 483:         LATAbits.LATA2 = 1;
  4843     0E74  1516               	bsf	22,2	;volatile
  4844     0E75                     l2732:
  4845                           
  4846                           ;./Color_Header.h: 484:         LATAbits.LATA3 = 1;
  4847     0E75  1596               	bsf	22,3	;volatile
  4848                           
  4849                           ;./Color_Header.h: 485:         _delay((unsigned long)((500)*(32000000/4000.0)));
  4850     0E76  3015               	movlw	21
  4851     0E77  0020               	movlb	0	; select bank0
  4852     0E78  00A7               	movwf	??_SetUpColorSensor+1
  4853     0E79  304B               	movlw	75
  4854     0E7A  00A6               	movwf	??_SetUpColorSensor
  4855     0E7B  30BE               	movlw	190
  4856     0E7C                     u2547:
  4857     0E7C  0B89               	decfsz	9,f
  4858     0E7D  2E7C               	goto	u2547
  4859     0E7E  0BA6               	decfsz	??_SetUpColorSensor,f
  4860     0E7F  2E7C               	goto	u2547
  4861     0E80  0BA7               	decfsz	??_SetUpColorSensor+1,f
  4862     0E81  2E7C               	goto	u2547
  4863     0E82  0000               	nop
  4864     0E83                     l2734:
  4865                           
  4866                           ;./Color_Header.h: 486:         LATAbits.LATA0 = 0;
  4867     0E83  0020               	movlb	0	; select bank0
  4868     0E84  1016               	bcf	22,0	;volatile
  4869     0E85                     l2736:
  4870                           
  4871                           ;./Color_Header.h: 487:         LATAbits.LATA1 = 0;
  4872     0E85  1096               	bcf	22,1	;volatile
  4873     0E86                     l2738:
  4874                           
  4875                           ;./Color_Header.h: 488:         LATAbits.LATA2 = 0;
  4876     0E86  1116               	bcf	22,2	;volatile
  4877     0E87                     l2740:
  4878                           
  4879                           ;./Color_Header.h: 489:         LATAbits.LATA3 = 0;
  4880     0E87  1196               	bcf	22,3	;volatile
  4881                           
  4882                           ;./Color_Header.h: 490:         _delay((unsigned long)((500)*(32000000/4000.0)));
  4883     0E88  3015               	movlw	21
  4884     0E89  0020               	movlb	0	; select bank0
  4885     0E8A  00A7               	movwf	??_SetUpColorSensor+1
  4886     0E8B  304B               	movlw	75
  4887     0E8C  00A6               	movwf	??_SetUpColorSensor
  4888     0E8D  30BE               	movlw	190
  4889     0E8E                     u2557:
  4890     0E8E  0B89               	decfsz	9,f
  4891     0E8F  2E8E               	goto	u2557
  4892     0E90  0BA6               	decfsz	??_SetUpColorSensor,f
  4893     0E91  2E8E               	goto	u2557
  4894     0E92  0BA7               	decfsz	??_SetUpColorSensor+1,f
  4895     0E93  2E8E               	goto	u2557
  4896     0E94  0000               	nop
  4897     0E95                     l293:
  4898     0E95  0008               	return
  4899     0E96                     __end_of_SetUpColorSensor:
  4900                           
  4901                           	psect	text15
  4902     0B68                     __ptext15:	
  4903 ;; *************** function _SetUpI2C *****************
  4904 ;; Defined at:
  4905 ;;		line 91 in file "./Color_Header.h"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;		None
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;		None
  4910 ;; Return value:  Size  Location     Type
  4911 ;;                  1    wreg      void 
  4912 ;; Registers used:
  4913 ;;		wreg, status,2, status,0, pclath, cstack
  4914 ;; Tracked objects:
  4915 ;;		On entry : 0/0
  4916 ;;		On exit  : 0/0
  4917 ;;		Unchanged: 0/0
  4918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4923 ;;Total ram usage:        0 bytes
  4924 ;; Hardware stack levels used: 1
  4925 ;; Hardware stack levels required when called: 3
  4926 ;; This function calls:
  4927 ;;		_SetUpI2CPins
  4928 ;;		_SetUpIC2Clock
  4929 ;; This function is called by:
  4930 ;;		_SetUpColorSensor
  4931 ;; This function uses a non-reentrant model
  4932 ;;
  4933                           
  4934     0B68                     _SetUpI2C:	
  4935                           ;psect for function _SetUpI2C
  4936                           
  4937     0B68                     l2340:	
  4938                           ;incstack = 0
  4939                           ; Regs used in _SetUpI2C: [wreg+status,2+status,0+pclath+cstack]
  4940                           
  4941                           
  4942                           ;./Color_Header.h: 92:     SSP1CON1 =0x28;
  4943     0B68  3028               	movlw	40
  4944     0B69  0023               	movlb	3	; select bank3
  4945     0B6A  0090               	movwf	16	;volatile
  4946     0B6B                     l2342:
  4947                           
  4948                           ;./Color_Header.h: 94:     SetUpI2CPins();
  4949     0B6B  318B  23ED  318B   	fcall	_SetUpI2CPins
  4950     0B6E                     l2344:
  4951                           
  4952                           ;./Color_Header.h: 96:     SetUpIC2Clock();
  4953     0B6E  318B  2320  318B   	fcall	_SetUpIC2Clock
  4954     0B71                     l117:
  4955     0B71  0008               	return
  4956     0B72                     __end_of_SetUpI2C:
  4957                           
  4958                           	psect	text16
  4959     0B20                     __ptext16:	
  4960 ;; *************** function _SetUpIC2Clock *****************
  4961 ;; Defined at:
  4962 ;;		line 85 in file "./Color_Header.h"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;		None
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;		None
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  1    wreg      void 
  4969 ;; Registers used:
  4970 ;;		wreg
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4980 ;;Total ram usage:        0 bytes
  4981 ;; Hardware stack levels used: 1
  4982 ;; Hardware stack levels required when called: 2
  4983 ;; This function calls:
  4984 ;;		Nothing
  4985 ;; This function is called by:
  4986 ;;		_SetUpI2C
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           
  4990     0B20                     _SetUpIC2Clock:	
  4991                           ;psect for function _SetUpIC2Clock
  4992                           
  4993     0B20                     l2190:	
  4994                           ;incstack = 0
  4995                           ; Regs used in _SetUpIC2Clock: [wreg]
  4996                           
  4997                           
  4998                           ;./Color_Header.h: 89:     SSP1ADD = 79;
  4999     0B20  304F               	movlw	79
  5000     0B21  0023               	movlb	3	; select bank3
  5001     0B22  008D               	movwf	13	;volatile
  5002     0B23                     l114:
  5003     0B23  0008               	return
  5004     0B24                     __end_of_SetUpIC2Clock:
  5005                           
  5006                           	psect	text17
  5007     0BED                     __ptext17:	
  5008 ;; *************** function _SetUpI2CPins *****************
  5009 ;; Defined at:
  5010 ;;		line 68 in file "./Color_Header.h"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;		None
  5013 ;; Auto vars:     Size  Location     Type
  5014 ;;		None
  5015 ;; Return value:  Size  Location     Type
  5016 ;;                  1    wreg      void 
  5017 ;; Registers used:
  5018 ;;		wreg, status,2, status,0
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5028 ;;Total ram usage:        0 bytes
  5029 ;; Hardware stack levels used: 1
  5030 ;; Hardware stack levels required when called: 2
  5031 ;; This function calls:
  5032 ;;		Nothing
  5033 ;; This function is called by:
  5034 ;;		_SetUpI2C
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038     0BED                     _SetUpI2CPins:	
  5039                           ;psect for function _SetUpI2CPins
  5040                           
  5041     0BED                     l2172:	
  5042                           ;incstack = 0
  5043                           ; Regs used in _SetUpI2CPins: [wreg+status,2+status,0]
  5044                           
  5045                           
  5046                           ;./Color_Header.h: 69:     SSP1CLKPPSbits.SSP1CLKPPS = 0x13;
  5047     0BED  003D               	movlb	29	; select bank29
  5048     0BEE  0845               	movf	69,w	;volatile
  5049     0BEF  39E0               	andlw	-32
  5050     0BF0  3813               	iorlw	19
  5051     0BF1  00C5               	movwf	69	;volatile
  5052                           
  5053                           ;./Color_Header.h: 70:     SSP1DATPPSbits.SSP1DATPPS = 0x14;
  5054     0BF2  0846               	movf	70,w	;volatile
  5055     0BF3  39E0               	andlw	-32
  5056     0BF4  3814               	iorlw	20
  5057     0BF5  00C6               	movwf	70	;volatile
  5058     0BF6                     l2174:
  5059                           
  5060                           ;./Color_Header.h: 72:     RC3PPS = 0x14;
  5061     0BF6  3014               	movlw	20
  5062     0BF7  003E               	movlb	30	; select bank30
  5063     0BF8  00A3               	movwf	35	;volatile
  5064     0BF9                     l2176:
  5065                           
  5066                           ;./Color_Header.h: 73:     RC4PPS = 0x15;
  5067     0BF9  3015               	movlw	21
  5068     0BFA  00A4               	movwf	36	;volatile
  5069     0BFB                     l2178:
  5070                           
  5071                           ;./Color_Header.h: 76:     TRISCbits.TRISC3 = 1;
  5072     0BFB  0020               	movlb	0	; select bank0
  5073     0BFC  1593               	bsf	19,3	;volatile
  5074     0BFD                     l2180:
  5075                           
  5076                           ;./Color_Header.h: 77:     TRISCbits.TRISC4 = 1;
  5077     0BFD  1613               	bsf	19,4	;volatile
  5078     0BFE                     l2182:
  5079                           
  5080                           ;./Color_Header.h: 79:     ANSELCbits.ANSC3 = 0;
  5081     0BFE  003E               	movlb	30	; select bank30
  5082     0BFF  11CE               	bcf	78,3	;volatile
  5083     0C00                     l2184:
  5084                           
  5085                           ;./Color_Header.h: 80:     ANSELCbits.ANSC4 = 0;
  5086     0C00  124E               	bcf	78,4	;volatile
  5087     0C01                     l2186:
  5088                           
  5089                           ;./Color_Header.h: 82:     WPUCbits.WPUC3 = 1;
  5090     0C01  15CF               	bsf	79,3	;volatile
  5091     0C02                     l2188:
  5092                           
  5093                           ;./Color_Header.h: 83:     WPUCbits.WPUC4 = 1;
  5094     0C02  164F               	bsf	79,4	;volatile
  5095     0C03                     l111:
  5096     0C03  0008               	return
  5097     0C04                     __end_of_SetUpI2CPins:
  5098                           
  5099                           	psect	text18
  5100     0E96                     __ptext18:	
  5101 ;; *************** function _SetUp *****************
  5102 ;; Defined at:
  5103 ;;		line 176 in file "./Color_Header.h"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;		None
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;  value           2    4[BANK0 ] int 
  5108 ;; Return value:  Size  Location     Type
  5109 ;;                  2    0[BANK0 ] int 
  5110 ;; Registers used:
  5111 ;;		wreg, status,2, status,0, pclath, cstack
  5112 ;; Tracked objects:
  5113 ;;		On entry : 0/0
  5114 ;;		On exit  : 0/0
  5115 ;;		Unchanged: 0/0
  5116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5117 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5118 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5119 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5120 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5121 ;;Total ram usage:        6 bytes
  5122 ;; Hardware stack levels used: 1
  5123 ;; Hardware stack levels required when called: 3
  5124 ;; This function calls:
  5125 ;;		_EndIC2Transmission
  5126 ;;		_RepeatedStart
  5127 ;;		_StartIC2Transmission
  5128 ;;		_StartReadRequest
  5129 ;;		_StartWriteRequest
  5130 ;; This function is called by:
  5131 ;;		_SetUpColorSensor
  5132 ;; This function uses a non-reentrant model
  5133 ;;
  5134                           
  5135     0E96                     _SetUp:	
  5136                           ;psect for function _SetUp
  5137                           
  5138     0E96                     l2346:	
  5139                           ;incstack = 0
  5140                           ; Regs used in _SetUp: [wreg+status,2+status,0+pclath+cstack]
  5141                           
  5142                           
  5143                           ;./Color_Header.h: 177:     StartIC2Transmission();
  5144     0E96  318B  235E  318E   	fcall	_StartIC2Transmission
  5145     0E99                     l2348:
  5146                           
  5147                           ;./Color_Header.h: 179:     StartWriteRequest();
  5148     0E99  318B  23B6  318E   	fcall	_StartWriteRequest
  5149                           
  5150                           ;./Color_Header.h: 183:     SSP1BUF = 0x80;;
  5151     0E9C  3080               	movlw	128
  5152     0E9D  0023               	movlb	3	; select bank3
  5153     0E9E  008C               	movwf	12	;volatile
  5154     0E9F                     l174:	
  5155                           ;./Color_Header.h: 185:     while(!PIR3bits.SSP1IF){}
  5156                           
  5157     0E9F  002E               	movlb	14	; select bank14
  5158     0EA0  1C0F               	btfss	15,0	;volatile
  5159     0EA1  2EA3               	goto	u1441
  5160     0EA2  2EA4               	goto	u1440
  5161     0EA3                     u1441:
  5162     0EA3  2E9F               	goto	l174
  5163     0EA4                     u1440:
  5164     0EA4                     l177:
  5165     0EA4  0023               	movlb	3	; select bank3
  5166     0EA5  1B11               	btfsc	17,6	;volatile
  5167     0EA6  2EA8               	goto	u1451
  5168     0EA7  2EA9               	goto	u1450
  5169     0EA8                     u1451:
  5170     0EA8  2EA4               	goto	l177
  5171     0EA9                     u1450:
  5172     0EA9                     l179:
  5173                           
  5174                           ;./Color_Header.h: 187:     PIR3bits.SSP1IF = 0;
  5175     0EA9  002E               	movlb	14	; select bank14
  5176     0EAA  100F               	bcf	15,0	;volatile
  5177     0EAB                     l2350:
  5178                           
  5179                           ;./Color_Header.h: 190:     SSP1BUF = 0b11;;
  5180     0EAB  3003               	movlw	3
  5181     0EAC  0023               	movlb	3	; select bank3
  5182     0EAD  008C               	movwf	12	;volatile
  5183     0EAE                     l180:	
  5184                           ;./Color_Header.h: 192:     while(!PIR3bits.SSP1IF){}
  5185                           
  5186     0EAE  002E               	movlb	14	; select bank14
  5187     0EAF  1C0F               	btfss	15,0	;volatile
  5188     0EB0  2EB2               	goto	u1461
  5189     0EB1  2EB3               	goto	u1460
  5190     0EB2                     u1461:
  5191     0EB2  2EAE               	goto	l180
  5192     0EB3                     u1460:
  5193     0EB3                     l183:
  5194     0EB3  0023               	movlb	3	; select bank3
  5195     0EB4  1B11               	btfsc	17,6	;volatile
  5196     0EB5  2EB7               	goto	u1471
  5197     0EB6  2EB8               	goto	u1470
  5198     0EB7                     u1471:
  5199     0EB7  2EB3               	goto	l183
  5200     0EB8                     u1470:
  5201     0EB8                     l185:
  5202                           
  5203                           ;./Color_Header.h: 194:     PIR3bits.SSP1IF = 0;
  5204     0EB8  002E               	movlb	14	; select bank14
  5205     0EB9  100F               	bcf	15,0	;volatile
  5206     0EBA                     l2352:
  5207                           
  5208                           ;./Color_Header.h: 196:     RepeatedStart();
  5209     0EBA  3187  27F7  318E   	fcall	_RepeatedStart
  5210     0EBD                     l2354:
  5211                           
  5212                           ;./Color_Header.h: 200:     StartWriteRequest();
  5213     0EBD  318B  23B6  318E   	fcall	_StartWriteRequest
  5214                           
  5215                           ;./Color_Header.h: 202:     SSP1BUF = 0x92;;
  5216     0EC0  3092               	movlw	146
  5217     0EC1  0023               	movlb	3	; select bank3
  5218     0EC2  008C               	movwf	12	;volatile
  5219     0EC3                     l186:	
  5220                           ;./Color_Header.h: 203:     while(!PIR3bits.SSP1IF){}
  5221                           
  5222     0EC3  002E               	movlb	14	; select bank14
  5223     0EC4  1C0F               	btfss	15,0	;volatile
  5224     0EC5  2EC7               	goto	u1481
  5225     0EC6  2EC8               	goto	u1480
  5226     0EC7                     u1481:
  5227     0EC7  2EC3               	goto	l186
  5228     0EC8                     u1480:
  5229     0EC8                     l189:
  5230     0EC8  0023               	movlb	3	; select bank3
  5231     0EC9  1B11               	btfsc	17,6	;volatile
  5232     0ECA  2ECC               	goto	u1491
  5233     0ECB  2ECD               	goto	u1490
  5234     0ECC                     u1491:
  5235     0ECC  2EC8               	goto	l189
  5236     0ECD                     u1490:
  5237     0ECD                     l191:
  5238                           
  5239                           ;./Color_Header.h: 205:     PIR3bits.SSP1IF = 0;
  5240     0ECD  002E               	movlb	14	; select bank14
  5241     0ECE  100F               	bcf	15,0	;volatile
  5242     0ECF                     l2356:
  5243                           
  5244                           ;./Color_Header.h: 208:     RepeatedStart();
  5245     0ECF  3187  27F7  318E   	fcall	_RepeatedStart
  5246     0ED2                     l2358:
  5247                           
  5248                           ;./Color_Header.h: 211:     StartReadRequest();
  5249     0ED2  318B  23A6  318E   	fcall	_StartReadRequest
  5250     0ED5                     l2360:
  5251                           
  5252                           ;./Color_Header.h: 213:     SSP1CON2bits.RCEN = 1;
  5253     0ED5  0023               	movlb	3	; select bank3
  5254     0ED6  1591               	bsf	17,3	;volatile
  5255     0ED7                     l192:	
  5256                           ;./Color_Header.h: 214:     while(!PIR3bits.SSP1IF){}
  5257                           
  5258     0ED7  002E               	movlb	14	; select bank14
  5259     0ED8  1C0F               	btfss	15,0	;volatile
  5260     0ED9  2EDB               	goto	u1501
  5261     0EDA  2EDC               	goto	u1500
  5262     0EDB                     u1501:
  5263     0EDB  2ED7               	goto	l192
  5264     0EDC                     u1500:
  5265     0EDC                     l194:
  5266                           
  5267                           ;./Color_Header.h: 215:     PIR3bits.SSP1IF = 0;
  5268     0EDC  100F               	bcf	15,0	;volatile
  5269     0EDD                     l2362:
  5270                           
  5271                           ;./Color_Header.h: 216:     int value = SSP1BUF;
  5272     0EDD  0023               	movlb	3	; select bank3
  5273     0EDE  080C               	movf	12,w	;volatile
  5274     0EDF  0020               	movlb	0	; select bank0
  5275     0EE0  00A2               	movwf	??_SetUp
  5276     0EE1  01A3               	clrf	??_SetUp+1
  5277     0EE2  0822               	movf	??_SetUp,w
  5278     0EE3  00A4               	movwf	SetUp@value
  5279     0EE4  0823               	movf	??_SetUp+1,w
  5280     0EE5  00A5               	movwf	SetUp@value+1
  5281     0EE6                     l2364:
  5282                           
  5283                           ;./Color_Header.h: 217:     SSP1CON2bits.ACKDT = 0;
  5284     0EE6  0023               	movlb	3	; select bank3
  5285     0EE7  1291               	bcf	17,5	;volatile
  5286     0EE8                     l2366:
  5287                           
  5288                           ;./Color_Header.h: 219:     EndIC2Transmission();
  5289     0EE8  318B  234B  318E   	fcall	_EndIC2Transmission
  5290     0EEB                     l2368:
  5291                           
  5292                           ;./Color_Header.h: 220:     if(value == 0xAB){
  5293     0EEB  30AB               	movlw	171
  5294     0EEC  0020               	movlb	0	; select bank0
  5295     0EED  0624               	xorwf	SetUp@value,w
  5296     0EEE  0425               	iorwf	SetUp@value+1,w
  5297     0EEF  1D03               	btfss	3,2
  5298     0EF0  2EF2               	goto	u1511
  5299     0EF1  2EF3               	goto	u1510
  5300     0EF2                     u1511:
  5301     0EF2  2EF8               	goto	l2374
  5302     0EF3                     u1510:
  5303     0EF3                     l2370:
  5304                           
  5305                           ;./Color_Header.h: 221:         return 1;
  5306     0EF3  3001               	movlw	1
  5307     0EF4  00A0               	movwf	?_SetUp
  5308     0EF5  3000               	movlw	0
  5309     0EF6  00A1               	movwf	?_SetUp+1
  5310     0EF7  2EFA               	goto	l196
  5311     0EF8                     l2374:
  5312                           
  5313                           ;./Color_Header.h: 223:     return 0;
  5314     0EF8  01A0               	clrf	?_SetUp
  5315     0EF9  01A1               	clrf	?_SetUp+1
  5316     0EFA                     l196:
  5317     0EFA  0008               	return
  5318     0EFB                     __end_of_SetUp:
  5319                           
  5320                           	psect	text19
  5321     0BB6                     __ptext19:	
  5322 ;; *************** function _StartWriteRequest *****************
  5323 ;; Defined at:
  5324 ;;		line 140 in file "./Color_Header.h"
  5325 ;; Parameters:    Size  Location     Type
  5326 ;;		None
  5327 ;; Auto vars:     Size  Location     Type
  5328 ;;		None
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  1    wreg      void 
  5331 ;; Registers used:
  5332 ;;		wreg
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5342 ;;Total ram usage:        0 bytes
  5343 ;; Hardware stack levels used: 1
  5344 ;; Hardware stack levels required when called: 2
  5345 ;; This function calls:
  5346 ;;		Nothing
  5347 ;; This function is called by:
  5348 ;;		_SetUp
  5349 ;;		_IsColorDataReady
  5350 ;;		_ReadClear
  5351 ;;		_ReadRed
  5352 ;;		_ReadBlue
  5353 ;;		_ReadGreen
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357     0BB6                     _StartWriteRequest:	
  5358                           ;psect for function _StartWriteRequest
  5359                           
  5360     0BB6                     l2194:	
  5361                           ;incstack = 0
  5362                           ; Regs used in _StartWriteRequest: [wreg]
  5363                           
  5364                           
  5365                           ;./Color_Header.h: 141:     SSP1BUFbits.SSPBUF = 0x39 << 1;;
  5366     0BB6  3072               	movlw	114
  5367     0BB7  0023               	movlb	3	; select bank3
  5368     0BB8  008C               	movwf	12	;volatile
  5369     0BB9                     l138:	
  5370                           ;./Color_Header.h: 143:     while(!PIR3bits.SSP1IF){}
  5371                           
  5372     0BB9  002E               	movlb	14	; select bank14
  5373     0BBA  1C0F               	btfss	15,0	;volatile
  5374     0BBB  2BBD               	goto	u1261
  5375     0BBC  2BBE               	goto	u1260
  5376     0BBD                     u1261:
  5377     0BBD  2BB9               	goto	l138
  5378     0BBE                     u1260:
  5379     0BBE                     l141:
  5380     0BBE  0023               	movlb	3	; select bank3
  5381     0BBF  1B11               	btfsc	17,6	;volatile
  5382     0BC0  2BC2               	goto	u1271
  5383     0BC1  2BC3               	goto	u1270
  5384     0BC2                     u1271:
  5385     0BC2  2BBE               	goto	l141
  5386     0BC3                     u1270:
  5387     0BC3                     l143:
  5388                           
  5389                           ;./Color_Header.h: 145:     PIR3bits.SSP1IF = 0;
  5390     0BC3  002E               	movlb	14	; select bank14
  5391     0BC4  100F               	bcf	15,0	;volatile
  5392     0BC5                     l144:
  5393     0BC5  0008               	return
  5394     0BC6                     __end_of_StartWriteRequest:
  5395                           
  5396                           	psect	text20
  5397     0BA6                     __ptext20:	
  5398 ;; *************** function _StartReadRequest *****************
  5399 ;; Defined at:
  5400 ;;		line 148 in file "./Color_Header.h"
  5401 ;; Parameters:    Size  Location     Type
  5402 ;;		None
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;		None
  5405 ;; Return value:  Size  Location     Type
  5406 ;;                  1    wreg      void 
  5407 ;; Registers used:
  5408 ;;		wreg
  5409 ;; Tracked objects:
  5410 ;;		On entry : 0/0
  5411 ;;		On exit  : 0/0
  5412 ;;		Unchanged: 0/0
  5413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5418 ;;Total ram usage:        0 bytes
  5419 ;; Hardware stack levels used: 1
  5420 ;; Hardware stack levels required when called: 2
  5421 ;; This function calls:
  5422 ;;		Nothing
  5423 ;; This function is called by:
  5424 ;;		_SetUp
  5425 ;;		_IsColorDataReady
  5426 ;;		_ReadClear
  5427 ;;		_ReadRed
  5428 ;;		_ReadBlue
  5429 ;;		_ReadGreen
  5430 ;; This function uses a non-reentrant model
  5431 ;;
  5432                           
  5433     0BA6                     _StartReadRequest:	
  5434                           ;psect for function _StartReadRequest
  5435                           
  5436     0BA6                     l2198:	
  5437                           ;incstack = 0
  5438                           ; Regs used in _StartReadRequest: [wreg]
  5439                           
  5440                           
  5441                           ;./Color_Header.h: 149:     SSP1BUF = (0x39 << 1) | 1;;
  5442     0BA6  3073               	movlw	115
  5443     0BA7  0023               	movlb	3	; select bank3
  5444     0BA8  008C               	movwf	12	;volatile
  5445     0BA9                     l147:	
  5446                           ;./Color_Header.h: 150:     while(!PIR3bits.SSP1IF){}
  5447                           
  5448     0BA9  002E               	movlb	14	; select bank14
  5449     0BAA  1C0F               	btfss	15,0	;volatile
  5450     0BAB  2BAD               	goto	u1291
  5451     0BAC  2BAE               	goto	u1290
  5452     0BAD                     u1291:
  5453     0BAD  2BA9               	goto	l147
  5454     0BAE                     u1290:
  5455     0BAE                     l150:
  5456     0BAE  0023               	movlb	3	; select bank3
  5457     0BAF  1B11               	btfsc	17,6	;volatile
  5458     0BB0  2BB2               	goto	u1301
  5459     0BB1  2BB3               	goto	u1300
  5460     0BB2                     u1301:
  5461     0BB2  2BAE               	goto	l150
  5462     0BB3                     u1300:
  5463     0BB3                     l152:
  5464                           
  5465                           ;./Color_Header.h: 152:     PIR3bits.SSP1IF = 0;
  5466     0BB3  002E               	movlb	14	; select bank14
  5467     0BB4  100F               	bcf	15,0	;volatile
  5468     0BB5                     l153:
  5469     0BB5  0008               	return
  5470     0BB6                     __end_of_StartReadRequest:
  5471                           
  5472                           	psect	text21
  5473     0B5E                     __ptext21:	
  5474 ;; *************** function _StartIC2Transmission *****************
  5475 ;; Defined at:
  5476 ;;		line 155 in file "./Color_Header.h"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;		None
  5479 ;; Auto vars:     Size  Location     Type
  5480 ;;		None
  5481 ;; Return value:  Size  Location     Type
  5482 ;;                  1    wreg      void 
  5483 ;; Registers used:
  5484 ;;		None
  5485 ;; Tracked objects:
  5486 ;;		On entry : 0/0
  5487 ;;		On exit  : 0/0
  5488 ;;		Unchanged: 0/0
  5489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5494 ;;Total ram usage:        0 bytes
  5495 ;; Hardware stack levels used: 1
  5496 ;; Hardware stack levels required when called: 2
  5497 ;; This function calls:
  5498 ;;		Nothing
  5499 ;; This function is called by:
  5500 ;;		_SetUp
  5501 ;;		_IsColorDataReady
  5502 ;;		_ReadClear
  5503 ;;		_ReadRed
  5504 ;;		_ReadBlue
  5505 ;;		_ReadGreen
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509     0B5E                     _StartIC2Transmission:	
  5510                           ;psect for function _StartIC2Transmission
  5511                           
  5512     0B5E                     l2192:	
  5513                           ;incstack = 0
  5514                           ; Regs used in _StartIC2Transmission: []
  5515                           
  5516                           
  5517                           ;./Color_Header.h: 156:     SSP1CON2bits.SEN = 1;
  5518     0B5E  0023               	movlb	3	; select bank3
  5519     0B5F  1411               	bsf	17,0	;volatile
  5520                           
  5521                           ;./Color_Header.h: 157:     PIR3bits.SSP1IF = 0;
  5522     0B60  002E               	movlb	14	; select bank14
  5523     0B61  100F               	bcf	15,0	;volatile
  5524     0B62                     l156:	
  5525                           ;./Color_Header.h: 159:     while(!PIR3bits.SSP1IF){}
  5526                           
  5527     0B62  1C0F               	btfss	15,0	;volatile
  5528     0B63  2B65               	goto	u1251
  5529     0B64  2B66               	goto	u1250
  5530     0B65                     u1251:
  5531     0B65  2B62               	goto	l156
  5532     0B66                     u1250:
  5533     0B66                     l158:
  5534                           
  5535                           ;./Color_Header.h: 160:     PIR3bits.SSP1IF = 0;
  5536     0B66  100F               	bcf	15,0	;volatile
  5537     0B67                     l159:
  5538     0B67  0008               	return
  5539     0B68                     __end_of_StartIC2Transmission:
  5540                           
  5541                           	psect	text22
  5542     07F7                     __ptext22:	
  5543 ;; *************** function _RepeatedStart *****************
  5544 ;; Defined at:
  5545 ;;		line 169 in file "./Color_Header.h"
  5546 ;; Parameters:    Size  Location     Type
  5547 ;;		None
  5548 ;; Auto vars:     Size  Location     Type
  5549 ;;		None
  5550 ;; Return value:  Size  Location     Type
  5551 ;;                  1    wreg      void 
  5552 ;; Registers used:
  5553 ;;		None
  5554 ;; Tracked objects:
  5555 ;;		On entry : 0/0
  5556 ;;		On exit  : 0/0
  5557 ;;		Unchanged: 0/0
  5558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5563 ;;Total ram usage:        0 bytes
  5564 ;; Hardware stack levels used: 1
  5565 ;; Hardware stack levels required when called: 2
  5566 ;; This function calls:
  5567 ;;		Nothing
  5568 ;; This function is called by:
  5569 ;;		_SetUp
  5570 ;;		_IsColorDataReady
  5571 ;;		_ReadClear
  5572 ;;		_ReadRed
  5573 ;;		_ReadBlue
  5574 ;;		_ReadGreen
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578     07F7                     _RepeatedStart:	
  5579                           ;psect for function _RepeatedStart
  5580                           
  5581     07F7                     l2196:	
  5582                           ;incstack = 0
  5583                           ; Regs used in _RepeatedStart: []
  5584                           
  5585                           
  5586                           ;./Color_Header.h: 170:     SSP1CON2bits.RSEN = 1;
  5587     07F7  0023               	movlb	3	; select bank3
  5588     07F8  1491               	bsf	17,1	;volatile
  5589     07F9                     l168:	
  5590                           ;./Color_Header.h: 172:     while(!PIR3bits.SSP1IF){}
  5591                           
  5592     07F9  002E               	movlb	14	; select bank14
  5593     07FA  1C0F               	btfss	15,0	;volatile
  5594     07FB  2FFD               	goto	u1281
  5595     07FC  2FFE               	goto	u1280
  5596     07FD                     u1281:
  5597     07FD  2FF9               	goto	l168
  5598     07FE                     u1280:
  5599     07FE                     l170:
  5600                           
  5601                           ;./Color_Header.h: 173:     PIR3bits.SSP1IF = 0;
  5602     07FE  100F               	bcf	15,0	;volatile
  5603     07FF                     l171:
  5604     07FF  0008               	return
  5605     0800                     __end_of_RepeatedStart:
  5606                           
  5607                           	psect	text23
  5608     0B4B                     __ptext23:	
  5609 ;; *************** function _EndIC2Transmission *****************
  5610 ;; Defined at:
  5611 ;;		line 162 in file "./Color_Header.h"
  5612 ;; Parameters:    Size  Location     Type
  5613 ;;		None
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;		None
  5616 ;; Return value:  Size  Location     Type
  5617 ;;                  1    wreg      void 
  5618 ;; Registers used:
  5619 ;;		None
  5620 ;; Tracked objects:
  5621 ;;		On entry : 0/0
  5622 ;;		On exit  : 0/0
  5623 ;;		Unchanged: 0/0
  5624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5629 ;;Total ram usage:        0 bytes
  5630 ;; Hardware stack levels used: 1
  5631 ;; Hardware stack levels required when called: 2
  5632 ;; This function calls:
  5633 ;;		Nothing
  5634 ;; This function is called by:
  5635 ;;		_SetUp
  5636 ;;		_IsColorDataReady
  5637 ;;		_ReadClear
  5638 ;;		_ReadRed
  5639 ;;		_ReadBlue
  5640 ;;		_ReadGreen
  5641 ;; This function uses a non-reentrant model
  5642 ;;
  5643                           
  5644     0B4B                     _EndIC2Transmission:	
  5645                           ;psect for function _EndIC2Transmission
  5646                           
  5647     0B4B                     l2200:	
  5648                           ;incstack = 0
  5649                           ; Regs used in _EndIC2Transmission: []
  5650                           
  5651                           
  5652                           ;./Color_Header.h: 163:     SSP1CON2bits.PEN = 1;
  5653     0B4B  0023               	movlb	3	; select bank3
  5654     0B4C  1511               	bsf	17,2	;volatile
  5655     0B4D                     l162:	
  5656                           ;./Color_Header.h: 165:     while(!PIR3bits.SSP1IF){}
  5657                           
  5658     0B4D  002E               	movlb	14	; select bank14
  5659     0B4E  1C0F               	btfss	15,0	;volatile
  5660     0B4F  2B51               	goto	u1311
  5661     0B50  2B52               	goto	u1310
  5662     0B51                     u1311:
  5663     0B51  2B4D               	goto	l162
  5664     0B52                     u1310:
  5665     0B52                     l164:
  5666                           
  5667                           ;./Color_Header.h: 166:     PIR3bits.SSP1IF = 0;
  5668     0B52  100F               	bcf	15,0	;volatile
  5669     0B53                     l165:
  5670     0B53  0008               	return
  5671     0B54                     __end_of_EndIC2Transmission:
  5672                           
  5673                           	psect	text24
  5674     0C38                     __ptext24:	
  5675 ;; *************** function _MovePumpArm *****************
  5676 ;; Defined at:
  5677 ;;		line 395 in file "motorMain.c"
  5678 ;; Parameters:    Size  Location     Type
  5679 ;;  switchValue     2    0[BANK0 ] int 
  5680 ;; Auto vars:     Size  Location     Type
  5681 ;;		None
  5682 ;; Return value:  Size  Location     Type
  5683 ;;                  1    wreg      void 
  5684 ;; Registers used:
  5685 ;;		wreg, status,2, status,0
  5686 ;; Tracked objects:
  5687 ;;		On entry : 0/0
  5688 ;;		On exit  : 0/0
  5689 ;;		Unchanged: 0/0
  5690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5691 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5694 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5695 ;;Total ram usage:        2 bytes
  5696 ;; Hardware stack levels used: 1
  5697 ;; Hardware stack levels required when called: 2
  5698 ;; This function calls:
  5699 ;;		Nothing
  5700 ;; This function is called by:
  5701 ;;		_main
  5702 ;; This function uses a non-reentrant model
  5703 ;;
  5704                           
  5705     0C38                     _MovePumpArm:	
  5706                           ;psect for function _MovePumpArm
  5707                           
  5708     0C38                     l2778:	
  5709                           ;incstack = 0
  5710                           ; Regs used in _MovePumpArm: [wreg+status,2+status,0]
  5711                           
  5712                           
  5713                           ;motorMain.c: 396:     LATBbits.LATB0 = 0;
  5714     0C38  0020               	movlb	0	; select bank0
  5715     0C39  1017               	bcf	23,0	;volatile
  5716                           
  5717                           ;motorMain.c: 397:     LATBbits.LATB1 = 0;
  5718     0C3A  1097               	bcf	23,1	;volatile
  5719     0C3B                     l2780:
  5720                           
  5721                           ;motorMain.c: 398:     if(switchValue == SWITCH_MIN){
  5722     0C3B  30E8               	movlw	232
  5723     0C3C  0620               	xorwf	MovePumpArm@switchValue,w
  5724     0C3D  3003               	movlw	3
  5725     0C3E  1903               	skipnz
  5726     0C3F  0621               	xorwf	MovePumpArm@switchValue+1,w
  5727     0C40  1D03               	btfss	3,2
  5728     0C41  2C43               	goto	u2111
  5729     0C42  2C44               	goto	u2110
  5730     0C43                     u2111:
  5731     0C43  2C47               	goto	l2784
  5732     0C44                     u2110:
  5733     0C44                     l2782:
  5734                           
  5735                           ;motorMain.c: 399:             LATBbits.LATB0 = 1;
  5736     0C44  1417               	bsf	23,0	;volatile
  5737                           
  5738                           ;motorMain.c: 400:             LATBbits.LATB1 = 0;
  5739     0C45  1097               	bcf	23,1	;volatile
  5740                           
  5741                           ;motorMain.c: 401:     }
  5742     0C46  2C52               	goto	l440
  5743     0C47                     l2784:
  5744     0C47  30D0               	movlw	208
  5745     0C48  0620               	xorwf	MovePumpArm@switchValue,w
  5746     0C49  3007               	movlw	7
  5747     0C4A  1903               	skipnz
  5748     0C4B  0621               	xorwf	MovePumpArm@switchValue+1,w
  5749     0C4C  1D03               	btfss	3,2
  5750     0C4D  2C4F               	goto	u2121
  5751     0C4E  2C50               	goto	u2120
  5752     0C4F                     u2121:
  5753     0C4F  2C52               	goto	l440
  5754     0C50                     u2120:
  5755     0C50                     l2786:
  5756                           
  5757                           ;motorMain.c: 403:             LATBbits.LATB0 = 0;
  5758     0C50  1017               	bcf	23,0	;volatile
  5759                           
  5760                           ;motorMain.c: 404:             LATBbits.LATB1 = 1;
  5761     0C51  1497               	bsf	23,1	;volatile
  5762     0C52                     l440:
  5763     0C52  0008               	return
  5764     0C53                     __end_of_MovePumpArm:
  5765                           
  5766                           	psect	text25
  5767     058C                     __ptext25:	
  5768 ;; *************** function _ColorSensor *****************
  5769 ;; Defined at:
  5770 ;;		line 495 in file "./Color_Header.h"
  5771 ;; Parameters:    Size  Location     Type
  5772 ;;  newI2CMessag    1    wreg     PTR unsigned char 
  5773 ;;		 -> newI2CMessage(1), 
  5774 ;;  I2CStage        1   12[BANK0 ] PTR int 
  5775 ;;		 -> I2CStage(2), 
  5776 ;;  colors          1   13[BANK0 ] PTR struct colorScheme
  5777 ;;		 -> colors(12), 
  5778 ;;  color           1   14[BANK0 ] PTR unsigned char 
  5779 ;;		 -> color(1), 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;  newI2CMessag    1   20[BANK0 ] PTR unsigned char 
  5782 ;;		 -> newI2CMessage(1), 
  5783 ;; Return value:  Size  Location     Type
  5784 ;;                  1    wreg      void 
  5785 ;; Registers used:
  5786 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5787 ;; Tracked objects:
  5788 ;;		On entry : 0/0
  5789 ;;		On exit  : 0/0
  5790 ;;		Unchanged: 0/0
  5791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5792 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5793 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5794 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5795 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5796 ;;Total ram usage:        9 bytes
  5797 ;; Hardware stack levels used: 1
  5798 ;; Hardware stack levels required when called: 6
  5799 ;; This function calls:
  5800 ;;		_UpdateColors
  5801 ;; This function is called by:
  5802 ;;		_main
  5803 ;; This function uses a non-reentrant model
  5804 ;;
  5805                           
  5806     058C                     _ColorSensor:	
  5807                           ;psect for function _ColorSensor
  5808                           
  5809                           
  5810                           ;incstack = 0
  5811                           ; Regs used in _ColorSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5812                           ;ColorSensor@newI2CMessage stored from wreg
  5813     058C  0020               	movlb	0	; select bank0
  5814     058D  00B4               	movwf	ColorSensor@newI2CMessage
  5815     058E                     l2742:
  5816                           
  5817                           ;./Color_Header.h: 496:     if(*newI2CMessage == 1 ){
  5818     058E  0834               	movf	ColorSensor@newI2CMessage,w
  5819     058F  0086               	movwf	6
  5820     0590  0187               	clrf	7
  5821     0591  0301               	decf	1,w
  5822     0592  1D03               	btfss	3,2
  5823     0593  2D95               	goto	u2031
  5824     0594  2D96               	goto	u2030
  5825     0595                     u2031:
  5826     0595  2E9C               	goto	l303
  5827     0596                     u2030:
  5828     0596                     l2744:
  5829                           
  5830                           ;./Color_Header.h: 497:             *newI2CMessage =0;
  5831     0596  0834               	movf	ColorSensor@newI2CMessage,w
  5832     0597  0086               	movwf	6
  5833     0598  0187               	clrf	7
  5834     0599  0181               	clrf	1
  5835     059A                     l2746:
  5836                           
  5837                           ;./Color_Header.h: 498:             *I2CStage = UpdateColors(colors,*I2CStage);
  5838     059A  082C               	movf	ColorSensor@I2CStage,w
  5839     059B  0086               	movwf	6
  5840     059C  0187               	clrf	7
  5841     059D  3F40               	moviw [0]fsr1
  5842     059E  00A7               	movwf	UpdateColors@stageValue
  5843     059F  3F41               	moviw [1]fsr1
  5844     05A0  00A8               	movwf	UpdateColors@stageValue+1
  5845     05A1  082D               	movf	ColorSensor@colors,w
  5846     05A2  318D  25E4  3185   	fcall	_UpdateColors
  5847     05A5  0020               	movlb	0	; select bank0
  5848     05A6  00AF               	movwf	??_ColorSensor
  5849     05A7  01B0               	clrf	??_ColorSensor+1
  5850     05A8  082C               	movf	ColorSensor@I2CStage,w
  5851     05A9  0086               	movwf	6
  5852     05AA  0187               	clrf	7
  5853     05AB  082F               	movf	??_ColorSensor,w
  5854     05AC  3FC0               	movwi [0]fsr1
  5855     05AD  0830               	movf	??_ColorSensor+1,w
  5856     05AE  3FC1               	movwi [1]fsr1
  5857     05AF                     l2748:
  5858                           
  5859                           ;./Color_Header.h: 500:             if(colors->allDone){
  5860     05AF  082D               	movf	ColorSensor@colors,w
  5861     05B0  3E0B               	addlw	11
  5862     05B1  0086               	movwf	6
  5863     05B2  3001               	movlw	1	; select bank2/3
  5864     05B3  0087               	movwf	7
  5865     05B4  0801               	movf	1,w
  5866     05B5  1903               	btfsc	3,2
  5867     05B6  2DB8               	goto	u2041
  5868     05B7  2DB9               	goto	u2040
  5869     05B8                     u2041:
  5870     05B8  2E9C               	goto	l303
  5871     05B9                     u2040:
  5872     05B9                     l2750:
  5873                           
  5874                           ;./Color_Header.h: 501:                 if(colors->red > colors->blue && colors->red > c
      +                          olors->green){
  5875     05B9  082D               	movf	ColorSensor@colors,w
  5876     05BA  3E06               	addlw	6
  5877     05BB  0086               	movwf	6
  5878     05BC  3001               	movlw	1	; select bank2/3
  5879     05BD  0087               	movwf	7
  5880     05BE  3F40               	moviw [0]fsr1
  5881     05BF  00AF               	movwf	??_ColorSensor
  5882     05C0  3F41               	moviw [1]fsr1
  5883     05C1  00B0               	movwf	??_ColorSensor+1
  5884     05C2  082D               	movf	ColorSensor@colors,w
  5885     05C3  3E04               	addlw	4
  5886     05C4  0086               	movwf	6
  5887     05C5  3001               	movlw	1	; select bank2/3
  5888     05C6  0087               	movwf	7
  5889     05C7  3F40               	moviw [0]fsr1
  5890     05C8  00B1               	movwf	??_ColorSensor+2
  5891     05C9  3F41               	moviw [1]fsr1
  5892     05CA  00B2               	movwf	??_ColorSensor+3
  5893     05CB  0832               	movf	??_ColorSensor+3,w
  5894     05CC  3A80               	xorlw	128
  5895     05CD  00B3               	movwf	??_ColorSensor+4
  5896     05CE  0830               	movf	??_ColorSensor+1,w
  5897     05CF  3A80               	xorlw	128
  5898     05D0  0233               	subwf	??_ColorSensor+4,w
  5899     05D1  1D03               	skipz
  5900     05D2  2DD5               	goto	u2055
  5901     05D3  082F               	movf	??_ColorSensor,w
  5902     05D4  0231               	subwf	??_ColorSensor+2,w
  5903     05D5                     u2055:
  5904     05D5  1803               	skipnc
  5905     05D6  2DD8               	goto	u2051
  5906     05D7  2DD9               	goto	u2050
  5907     05D8                     u2051:
  5908     05D8  2E04               	goto	l2758
  5909     05D9                     u2050:
  5910     05D9                     l2752:
  5911     05D9  0020               	movlb	0	; select bank0
  5912     05DA  082D               	movf	ColorSensor@colors,w
  5913     05DB  3E06               	addlw	6
  5914     05DC  0086               	movwf	6
  5915     05DD  3001               	movlw	1	; select bank2/3
  5916     05DE  0087               	movwf	7
  5917     05DF  3F40               	moviw [0]fsr1
  5918     05E0  00AF               	movwf	??_ColorSensor
  5919     05E1  3F41               	moviw [1]fsr1
  5920     05E2  00B0               	movwf	??_ColorSensor+1
  5921     05E3  082D               	movf	ColorSensor@colors,w
  5922     05E4  3E02               	addlw	2
  5923     05E5  0086               	movwf	6
  5924     05E6  3001               	movlw	1	; select bank2/3
  5925     05E7  0087               	movwf	7
  5926     05E8  3F40               	moviw [0]fsr1
  5927     05E9  00B1               	movwf	??_ColorSensor+2
  5928     05EA  3F41               	moviw [1]fsr1
  5929     05EB  00B2               	movwf	??_ColorSensor+3
  5930     05EC  0832               	movf	??_ColorSensor+3,w
  5931     05ED  3A80               	xorlw	128
  5932     05EE  00B3               	movwf	??_ColorSensor+4
  5933     05EF  0830               	movf	??_ColorSensor+1,w
  5934     05F0  3A80               	xorlw	128
  5935     05F1  0233               	subwf	??_ColorSensor+4,w
  5936     05F2  1D03               	skipz
  5937     05F3  2DF6               	goto	u2065
  5938     05F4  082F               	movf	??_ColorSensor,w
  5939     05F5  0231               	subwf	??_ColorSensor+2,w
  5940     05F6                     u2065:
  5941     05F6  1803               	skipnc
  5942     05F7  2DF9               	goto	u2061
  5943     05F8  2DFA               	goto	u2060
  5944     05F9                     u2061:
  5945     05F9  2E04               	goto	l2758
  5946     05FA                     u2060:
  5947     05FA                     l2754:
  5948                           
  5949                           ;./Color_Header.h: 502:                     LATAbits.LATA0 = 1;
  5950     05FA  0020               	movlb	0	; select bank0
  5951     05FB  1416               	bsf	22,0	;volatile
  5952                           
  5953                           ;./Color_Header.h: 503:                     LATAbits.LATA1 = 0;
  5954     05FC  1096               	bcf	22,1	;volatile
  5955                           
  5956                           ;./Color_Header.h: 504:                     LATAbits.LATA2 = 0;
  5957     05FD  1116               	bcf	22,2	;volatile
  5958     05FE                     l2756:
  5959                           
  5960                           ;./Color_Header.h: 505:                     *color = RED;
  5961     05FE  082E               	movf	ColorSensor@color,w
  5962     05FF  0086               	movwf	6
  5963     0600  0187               	clrf	7
  5964     0601  0181               	clrf	1
  5965     0602  0A81               	incf	1,f
  5966                           
  5967                           ;./Color_Header.h: 506:                 }
  5968     0603  2E9C               	goto	l303
  5969     0604                     l2758:
  5970     0604  0020               	movlb	0	; select bank0
  5971     0605  082D               	movf	ColorSensor@colors,w
  5972     0606  3E04               	addlw	4
  5973     0607  0086               	movwf	6
  5974     0608  3001               	movlw	1	; select bank2/3
  5975     0609  0087               	movwf	7
  5976     060A  3F40               	moviw [0]fsr1
  5977     060B  00AF               	movwf	??_ColorSensor
  5978     060C  3F41               	moviw [1]fsr1
  5979     060D  00B0               	movwf	??_ColorSensor+1
  5980     060E  082D               	movf	ColorSensor@colors,w
  5981     060F  3E06               	addlw	6
  5982     0610  0086               	movwf	6
  5983     0611  3001               	movlw	1	; select bank2/3
  5984     0612  0087               	movwf	7
  5985     0613  3F40               	moviw [0]fsr1
  5986     0614  00B1               	movwf	??_ColorSensor+2
  5987     0615  3F41               	moviw [1]fsr1
  5988     0616  00B2               	movwf	??_ColorSensor+3
  5989     0617  0832               	movf	??_ColorSensor+3,w
  5990     0618  3A80               	xorlw	128
  5991     0619  00B3               	movwf	??_ColorSensor+4
  5992     061A  0830               	movf	??_ColorSensor+1,w
  5993     061B  3A80               	xorlw	128
  5994     061C  0233               	subwf	??_ColorSensor+4,w
  5995     061D  1D03               	skipz
  5996     061E  2E21               	goto	u2075
  5997     061F  082F               	movf	??_ColorSensor,w
  5998     0620  0231               	subwf	??_ColorSensor+2,w
  5999     0621                     u2075:
  6000     0621  1803               	skipnc
  6001     0622  2E24               	goto	u2071
  6002     0623  2E25               	goto	u2070
  6003     0624                     u2071:
  6004     0624  2E50               	goto	l2766
  6005     0625                     u2070:
  6006     0625                     l2760:
  6007     0625  0020               	movlb	0	; select bank0
  6008     0626  082D               	movf	ColorSensor@colors,w
  6009     0627  3E04               	addlw	4
  6010     0628  0086               	movwf	6
  6011     0629  3001               	movlw	1	; select bank2/3
  6012     062A  0087               	movwf	7
  6013     062B  3F40               	moviw [0]fsr1
  6014     062C  00AF               	movwf	??_ColorSensor
  6015     062D  3F41               	moviw [1]fsr1
  6016     062E  00B0               	movwf	??_ColorSensor+1
  6017     062F  082D               	movf	ColorSensor@colors,w
  6018     0630  3E02               	addlw	2
  6019     0631  0086               	movwf	6
  6020     0632  3001               	movlw	1	; select bank2/3
  6021     0633  0087               	movwf	7
  6022     0634  3F40               	moviw [0]fsr1
  6023     0635  00B1               	movwf	??_ColorSensor+2
  6024     0636  3F41               	moviw [1]fsr1
  6025     0637  00B2               	movwf	??_ColorSensor+3
  6026     0638  0832               	movf	??_ColorSensor+3,w
  6027     0639  3A80               	xorlw	128
  6028     063A  00B3               	movwf	??_ColorSensor+4
  6029     063B  0830               	movf	??_ColorSensor+1,w
  6030     063C  3A80               	xorlw	128
  6031     063D  0233               	subwf	??_ColorSensor+4,w
  6032     063E  1D03               	skipz
  6033     063F  2E42               	goto	u2085
  6034     0640  082F               	movf	??_ColorSensor,w
  6035     0641  0231               	subwf	??_ColorSensor+2,w
  6036     0642                     u2085:
  6037     0642  1803               	skipnc
  6038     0643  2E45               	goto	u2081
  6039     0644  2E46               	goto	u2080
  6040     0645                     u2081:
  6041     0645  2E50               	goto	l2766
  6042     0646                     u2080:
  6043     0646                     l2762:
  6044                           
  6045                           ;./Color_Header.h: 508:                     LATAbits.LATA0 = 0;
  6046     0646  0020               	movlb	0	; select bank0
  6047     0647  1016               	bcf	22,0	;volatile
  6048                           
  6049                           ;./Color_Header.h: 509:                     LATAbits.LATA1 = 1;
  6050     0648  1496               	bsf	22,1	;volatile
  6051                           
  6052                           ;./Color_Header.h: 510:                     LATAbits.LATA2 = 0;
  6053     0649  1116               	bcf	22,2	;volatile
  6054     064A                     l2764:
  6055                           
  6056                           ;./Color_Header.h: 511:                     *color = BLUE;
  6057     064A  082E               	movf	ColorSensor@color,w
  6058     064B  0086               	movwf	6
  6059     064C  0187               	clrf	7
  6060     064D  3002               	movlw	2
  6061     064E  0081               	movwf	1
  6062                           
  6063                           ;./Color_Header.h: 512:                 }
  6064     064F  2E9C               	goto	l303
  6065     0650                     l2766:
  6066     0650  0020               	movlb	0	; select bank0
  6067     0651  082D               	movf	ColorSensor@colors,w
  6068     0652  3E02               	addlw	2
  6069     0653  0086               	movwf	6
  6070     0654  3001               	movlw	1	; select bank2/3
  6071     0655  0087               	movwf	7
  6072     0656  3F40               	moviw [0]fsr1
  6073     0657  00AF               	movwf	??_ColorSensor
  6074     0658  3F41               	moviw [1]fsr1
  6075     0659  00B0               	movwf	??_ColorSensor+1
  6076     065A  082D               	movf	ColorSensor@colors,w
  6077     065B  3E04               	addlw	4
  6078     065C  0086               	movwf	6
  6079     065D  3001               	movlw	1	; select bank2/3
  6080     065E  0087               	movwf	7
  6081     065F  3F40               	moviw [0]fsr1
  6082     0660  00B1               	movwf	??_ColorSensor+2
  6083     0661  3F41               	moviw [1]fsr1
  6084     0662  00B2               	movwf	??_ColorSensor+3
  6085     0663  0832               	movf	??_ColorSensor+3,w
  6086     0664  3A80               	xorlw	128
  6087     0665  00B3               	movwf	??_ColorSensor+4
  6088     0666  0830               	movf	??_ColorSensor+1,w
  6089     0667  3A80               	xorlw	128
  6090     0668  0233               	subwf	??_ColorSensor+4,w
  6091     0669  1D03               	skipz
  6092     066A  2E6D               	goto	u2095
  6093     066B  082F               	movf	??_ColorSensor,w
  6094     066C  0231               	subwf	??_ColorSensor+2,w
  6095     066D                     u2095:
  6096     066D  1803               	skipnc
  6097     066E  2E70               	goto	u2091
  6098     066F  2E71               	goto	u2090
  6099     0670                     u2091:
  6100     0670  2E9C               	goto	l297
  6101     0671                     u2090:
  6102     0671                     l2768:
  6103     0671  0020               	movlb	0	; select bank0
  6104     0672  082D               	movf	ColorSensor@colors,w
  6105     0673  3E02               	addlw	2
  6106     0674  0086               	movwf	6
  6107     0675  3001               	movlw	1	; select bank2/3
  6108     0676  0087               	movwf	7
  6109     0677  3F40               	moviw [0]fsr1
  6110     0678  00AF               	movwf	??_ColorSensor
  6111     0679  3F41               	moviw [1]fsr1
  6112     067A  00B0               	movwf	??_ColorSensor+1
  6113     067B  082D               	movf	ColorSensor@colors,w
  6114     067C  3E06               	addlw	6
  6115     067D  0086               	movwf	6
  6116     067E  3001               	movlw	1	; select bank2/3
  6117     067F  0087               	movwf	7
  6118     0680  3F40               	moviw [0]fsr1
  6119     0681  00B1               	movwf	??_ColorSensor+2
  6120     0682  3F41               	moviw [1]fsr1
  6121     0683  00B2               	movwf	??_ColorSensor+3
  6122     0684  0832               	movf	??_ColorSensor+3,w
  6123     0685  3A80               	xorlw	128
  6124     0686  00B3               	movwf	??_ColorSensor+4
  6125     0687  0830               	movf	??_ColorSensor+1,w
  6126     0688  3A80               	xorlw	128
  6127     0689  0233               	subwf	??_ColorSensor+4,w
  6128     068A  1D03               	skipz
  6129     068B  2E8E               	goto	u2105
  6130     068C  082F               	movf	??_ColorSensor,w
  6131     068D  0231               	subwf	??_ColorSensor+2,w
  6132     068E                     u2105:
  6133     068E  1803               	skipnc
  6134     068F  2E91               	goto	u2101
  6135     0690  2E92               	goto	u2100
  6136     0691                     u2101:
  6137     0691  2E9C               	goto	l297
  6138     0692                     u2100:
  6139     0692                     l2770:
  6140                           
  6141                           ;./Color_Header.h: 514:                     LATAbits.LATA0 = 0;
  6142     0692  0020               	movlb	0	; select bank0
  6143     0693  1016               	bcf	22,0	;volatile
  6144                           
  6145                           ;./Color_Header.h: 515:                     LATAbits.LATA1 = 0;
  6146     0694  1096               	bcf	22,1	;volatile
  6147                           
  6148                           ;./Color_Header.h: 516:                     LATAbits.LATA2 = 1;
  6149     0695  1516               	bsf	22,2	;volatile
  6150     0696                     l2772:
  6151                           
  6152                           ;./Color_Header.h: 517:                     *color = GREEN;
  6153     0696  082E               	movf	ColorSensor@color,w
  6154     0697  0086               	movwf	6
  6155     0698  0187               	clrf	7
  6156     0699  3003               	movlw	3
  6157     069A  0081               	movwf	1
  6158     069B  2E9C               	goto	l303
  6159     069C                     l297:	
  6160                           ;./Color_Header.h: 519:             }
  6161                           
  6162     069C                     l303:
  6163     069C  0008               	return
  6164     069D                     __end_of_ColorSensor:
  6165                           
  6166                           	psect	text26
  6167     0DE4                     __ptext26:	
  6168 ;; *************** function _UpdateColors *****************
  6169 ;; Defined at:
  6170 ;;		line 426 in file "./Color_Header.h"
  6171 ;; Parameters:    Size  Location     Type
  6172 ;;  colors          1    wreg     PTR struct colorScheme
  6173 ;;		 -> colors(12), 
  6174 ;;  stageValue      2    7[BANK0 ] int 
  6175 ;; Auto vars:     Size  Location     Type
  6176 ;;  colors          1   11[BANK0 ] PTR struct colorScheme
  6177 ;;		 -> colors(12), 
  6178 ;; Return value:  Size  Location     Type
  6179 ;;                  1    wreg      unsigned char 
  6180 ;; Registers used:
  6181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6182 ;; Tracked objects:
  6183 ;;		On entry : 0/0
  6184 ;;		On exit  : 0/0
  6185 ;;		Unchanged: 0/0
  6186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6187 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6188 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6189 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6190 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6191 ;;Total ram usage:        5 bytes
  6192 ;; Hardware stack levels used: 1
  6193 ;; Hardware stack levels required when called: 5
  6194 ;; This function calls:
  6195 ;;		_GetValueAndEndI2C
  6196 ;;		_ReadAddressI2C
  6197 ;;		_ReadI2C
  6198 ;;		_RepeatI2C
  6199 ;;		_SelectColourRegister
  6200 ;;		_StartI2C
  6201 ;;		_WriteI2C
  6202 ;;		___awmod
  6203 ;; This function is called by:
  6204 ;;		_ColorSensor
  6205 ;; This function uses a non-reentrant model
  6206 ;;
  6207                           
  6208     0DE4                     _UpdateColors:	
  6209                           ;psect for function _UpdateColors
  6210                           
  6211                           
  6212                           ;incstack = 0
  6213                           ; Regs used in _UpdateColors: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6214                           ;UpdateColors@colors stored from wreg
  6215     0DE4  0020               	movlb	0	; select bank0
  6216     0DE5  00AB               	movwf	UpdateColors@colors
  6217     0DE6                     l2378:
  6218                           
  6219                           ;./Color_Header.h: 427:     switch(stageValue){
  6220     0DE6  2E10               	goto	l2396
  6221     0DE7                     l2380:
  6222     0DE7  318B  2328  318D   	fcall	_StartI2C
  6223     0DEA  2E2C               	goto	l2398
  6224     0DEB                     l2382:
  6225     0DEB  318B  2333  318D   	fcall	_WriteI2C
  6226     0DEE  2E2C               	goto	l2398
  6227     0DEF                     l2384:
  6228     0DEF  082B               	movf	UpdateColors@colors,w
  6229     0DF0  3E0A               	addlw	10
  6230     0DF1  0086               	movwf	6
  6231     0DF2  3001               	movlw	1	; select bank2/3
  6232     0DF3  0087               	movwf	7
  6233     0DF4  0801               	movf	1,w
  6234     0DF5  00A9               	movwf	??_UpdateColors
  6235     0DF6  01AA               	clrf	??_UpdateColors+1
  6236     0DF7  0829               	movf	??_UpdateColors,w
  6237     0DF8  00A0               	movwf	SelectColourRegister@colorStage
  6238     0DF9  082A               	movf	??_UpdateColors+1,w
  6239     0DFA  00A1               	movwf	SelectColourRegister@colorStage+1
  6240     0DFB  318D  254C  318D   	fcall	_SelectColourRegister
  6241     0DFE  2E2C               	goto	l2398
  6242     0DFF                     l2386:
  6243     0DFF  318B  231D  318D   	fcall	_RepeatI2C
  6244     0E02  2E2C               	goto	l2398
  6245     0E03                     l2388:
  6246     0E03  318B  232D  318D   	fcall	_ReadAddressI2C
  6247     0E06  2E2C               	goto	l2398
  6248     0E07                     l2390:
  6249     0E07  318B  231A  318D   	fcall	_ReadI2C
  6250     0E0A  2E2C               	goto	l2398
  6251     0E0B                     l2392:
  6252     0E0B  082B               	movf	UpdateColors@colors,w
  6253     0E0C  3186  269D  318D   	fcall	_GetValueAndEndI2C
  6254     0E0F  2E2C               	goto	l2398
  6255     0E10                     l2396:
  6256                           
  6257                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6258                           ; Switch size 1, requested type "simple"
  6259                           ; Number of cases is 1, Range of values is 0 to 0
  6260                           ; switch strategies available:
  6261                           ; Name         Instructions Cycles
  6262                           ; simple_byte            4     3 (average)
  6263                           ; direct_byte            8     6 (fixed)
  6264                           ; jumptable            260     6 (fixed)
  6265                           ;	Chosen strategy is simple_byte
  6266     0E10  0828               	movf	UpdateColors@stageValue+1,w
  6267     0E11  3A00               	xorlw	0	; case 0
  6268     0E12  1903               	skipnz
  6269     0E13  2E15               	goto	l3392
  6270     0E14  2E2C               	goto	l2398
  6271     0E15                     l3392:
  6272                           
  6273                           ; Switch size 1, requested type "simple"
  6274                           ; Number of cases is 7, Range of values is 0 to 6
  6275                           ; switch strategies available:
  6276                           ; Name         Instructions Cycles
  6277                           ; direct_byte           20     6 (fixed)
  6278                           ; simple_byte           22    12 (average)
  6279                           ; jumptable            260     6 (fixed)
  6280                           ;	Chosen strategy is simple_byte
  6281     0E15  0827               	movf	UpdateColors@stageValue,w
  6282     0E16  3A00               	xorlw	0	; case 0
  6283     0E17  1903               	skipnz
  6284     0E18  2DE7               	goto	l2380
  6285     0E19  3A01               	xorlw	1	; case 1
  6286     0E1A  1903               	skipnz
  6287     0E1B  2DEB               	goto	l2382
  6288     0E1C  3A03               	xorlw	3	; case 2
  6289     0E1D  1903               	skipnz
  6290     0E1E  2DEF               	goto	l2384
  6291     0E1F  3A01               	xorlw	1	; case 3
  6292     0E20  1903               	skipnz
  6293     0E21  2DFF               	goto	l2386
  6294     0E22  3A07               	xorlw	7	; case 4
  6295     0E23  1903               	skipnz
  6296     0E24  2E03               	goto	l2388
  6297     0E25  3A01               	xorlw	1	; case 5
  6298     0E26  1903               	skipnz
  6299     0E27  2E07               	goto	l2390
  6300     0E28  3A03               	xorlw	3	; case 6
  6301     0E29  1903               	skipnz
  6302     0E2A  2E0B               	goto	l2392
  6303     0E2B  2E2C               	goto	l2398
  6304     0E2C                     l2398:
  6305                           
  6306                           ;./Color_Header.h: 436:     return (stageValue+1) % 7;
  6307     0E2C  3007               	movlw	7
  6308     0E2D  0020               	movlb	0	; select bank0
  6309     0E2E  00A0               	movwf	___awmod@divisor
  6310     0E2F  3000               	movlw	0
  6311     0E30  00A1               	movwf	___awmod@divisor+1
  6312     0E31  0827               	movf	UpdateColors@stageValue,w
  6313     0E32  3E01               	addlw	1
  6314     0E33  00A2               	movwf	___awmod@dividend
  6315     0E34  3000               	movlw	0
  6316     0E35  3D28               	addwfc	UpdateColors@stageValue+1,w
  6317     0E36  00A3               	movwf	___awmod@dividend+1
  6318     0E37  318D  2590  318D   	fcall	___awmod
  6319     0E3A  0020               	movlb	0	; select bank0
  6320     0E3B  0820               	movf	?___awmod,w
  6321     0E3C                     l282:
  6322     0E3C  0008               	return
  6323     0E3D                     __end_of_UpdateColors:
  6324                           
  6325                           	psect	text27
  6326     0D90                     __ptext27:	
  6327 ;; *************** function ___awmod *****************
  6328 ;; Defined at:
  6329 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  6330 ;; Parameters:    Size  Location     Type
  6331 ;;  divisor         2    0[BANK0 ] int 
  6332 ;;  dividend        2    2[BANK0 ] int 
  6333 ;; Auto vars:     Size  Location     Type
  6334 ;;  sign            1    6[BANK0 ] unsigned char 
  6335 ;;  counter         1    5[BANK0 ] unsigned char 
  6336 ;; Return value:  Size  Location     Type
  6337 ;;                  2    0[BANK0 ] int 
  6338 ;; Registers used:
  6339 ;;		wreg, status,2, status,0
  6340 ;; Tracked objects:
  6341 ;;		On entry : 0/0
  6342 ;;		On exit  : 0/0
  6343 ;;		Unchanged: 0/0
  6344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6345 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6346 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6347 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6348 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6349 ;;Total ram usage:        7 bytes
  6350 ;; Hardware stack levels used: 1
  6351 ;; Hardware stack levels required when called: 2
  6352 ;; This function calls:
  6353 ;;		Nothing
  6354 ;; This function is called by:
  6355 ;;		_UpdateColors
  6356 ;; This function uses a non-reentrant model
  6357 ;;
  6358                           
  6359     0D90                     ___awmod:	
  6360                           ;psect for function ___awmod
  6361                           
  6362     0D90                     l2288:	
  6363                           ;incstack = 0
  6364                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6365                           
  6366     0D90  0020               	movlb	0	; select bank0
  6367     0D91  01A6               	clrf	___awmod@sign
  6368     0D92                     l2290:
  6369     0D92  1FA3               	btfss	___awmod@dividend+1,7
  6370     0D93  2D95               	goto	u1321
  6371     0D94  2D96               	goto	u1320
  6372     0D95                     u1321:
  6373     0D95  2D9D               	goto	l2296
  6374     0D96                     u1320:
  6375     0D96                     l2292:
  6376     0D96  09A2               	comf	___awmod@dividend,f
  6377     0D97  09A3               	comf	___awmod@dividend+1,f
  6378     0D98  0AA2               	incf	___awmod@dividend,f
  6379     0D99  1903               	skipnz
  6380     0D9A  0AA3               	incf	___awmod@dividend+1,f
  6381     0D9B                     l2294:
  6382     0D9B  01A6               	clrf	___awmod@sign
  6383     0D9C  0AA6               	incf	___awmod@sign,f
  6384     0D9D                     l2296:
  6385     0D9D  1FA1               	btfss	___awmod@divisor+1,7
  6386     0D9E  2DA0               	goto	u1331
  6387     0D9F  2DA1               	goto	u1330
  6388     0DA0                     u1331:
  6389     0DA0  2DA6               	goto	l2300
  6390     0DA1                     u1330:
  6391     0DA1                     l2298:
  6392     0DA1  09A0               	comf	___awmod@divisor,f
  6393     0DA2  09A1               	comf	___awmod@divisor+1,f
  6394     0DA3  0AA0               	incf	___awmod@divisor,f
  6395     0DA4  1903               	skipnz
  6396     0DA5  0AA1               	incf	___awmod@divisor+1,f
  6397     0DA6                     l2300:
  6398     0DA6  0820               	movf	___awmod@divisor,w
  6399     0DA7  0421               	iorwf	___awmod@divisor+1,w
  6400     0DA8  1903               	btfsc	3,2
  6401     0DA9  2DAB               	goto	u1341
  6402     0DAA  2DAC               	goto	u1340
  6403     0DAB                     u1341:
  6404     0DAB  2DD5               	goto	l2318
  6405     0DAC                     u1340:
  6406     0DAC                     l2302:
  6407     0DAC  01A5               	clrf	___awmod@counter
  6408     0DAD  0AA5               	incf	___awmod@counter,f
  6409     0DAE  2DB8               	goto	l2308
  6410     0DAF                     l2304:
  6411     0DAF  3001               	movlw	1
  6412     0DB0                     u1355:
  6413     0DB0  35A0               	lslf	___awmod@divisor,f
  6414     0DB1  0DA1               	rlf	___awmod@divisor+1,f
  6415     0DB2  0B89               	decfsz	9,f
  6416     0DB3  2DB0               	goto	u1355
  6417     0DB4                     l2306:
  6418     0DB4  3001               	movlw	1
  6419     0DB5  00A4               	movwf	??___awmod
  6420     0DB6  0824               	movf	??___awmod,w
  6421     0DB7  07A5               	addwf	___awmod@counter,f
  6422     0DB8                     l2308:
  6423     0DB8  1FA1               	btfss	___awmod@divisor+1,7
  6424     0DB9  2DBB               	goto	u1361
  6425     0DBA  2DBC               	goto	u1360
  6426     0DBB                     u1361:
  6427     0DBB  2DAF               	goto	l2304
  6428     0DBC                     u1360:
  6429     0DBC                     l2310:
  6430     0DBC  0821               	movf	___awmod@divisor+1,w
  6431     0DBD  0223               	subwf	___awmod@dividend+1,w
  6432     0DBE  1D03               	skipz
  6433     0DBF  2DC2               	goto	u1375
  6434     0DC0  0820               	movf	___awmod@divisor,w
  6435     0DC1  0222               	subwf	___awmod@dividend,w
  6436     0DC2                     u1375:
  6437     0DC2  1C03               	skipc
  6438     0DC3  2DC5               	goto	u1371
  6439     0DC4  2DC6               	goto	u1370
  6440     0DC5                     u1371:
  6441     0DC5  2DCA               	goto	l2314
  6442     0DC6                     u1370:
  6443     0DC6                     l2312:
  6444     0DC6  0820               	movf	___awmod@divisor,w
  6445     0DC7  02A2               	subwf	___awmod@dividend,f
  6446     0DC8  0821               	movf	___awmod@divisor+1,w
  6447     0DC9  3BA3               	subwfb	___awmod@dividend+1,f
  6448     0DCA                     l2314:
  6449     0DCA  3001               	movlw	1
  6450     0DCB                     u1385:
  6451     0DCB  36A1               	lsrf	___awmod@divisor+1,f
  6452     0DCC  0CA0               	rrf	___awmod@divisor,f
  6453     0DCD  0B89               	decfsz	9,f
  6454     0DCE  2DCB               	goto	u1385
  6455     0DCF                     l2316:
  6456     0DCF  3001               	movlw	1
  6457     0DD0  02A5               	subwf	___awmod@counter,f
  6458     0DD1  1D03               	btfss	3,2
  6459     0DD2  2DD4               	goto	u1391
  6460     0DD3  2DD5               	goto	u1390
  6461     0DD4                     u1391:
  6462     0DD4  2DBC               	goto	l2310
  6463     0DD5                     u1390:
  6464     0DD5                     l2318:
  6465     0DD5  0826               	movf	___awmod@sign,w
  6466     0DD6  1903               	btfsc	3,2
  6467     0DD7  2DD9               	goto	u1401
  6468     0DD8  2DDA               	goto	u1400
  6469     0DD9                     u1401:
  6470     0DD9  2DDF               	goto	l2322
  6471     0DDA                     u1400:
  6472     0DDA                     l2320:
  6473     0DDA  09A2               	comf	___awmod@dividend,f
  6474     0DDB  09A3               	comf	___awmod@dividend+1,f
  6475     0DDC  0AA2               	incf	___awmod@dividend,f
  6476     0DDD  1903               	skipnz
  6477     0DDE  0AA3               	incf	___awmod@dividend+1,f
  6478     0DDF                     l2322:
  6479     0DDF  0823               	movf	___awmod@dividend+1,w
  6480     0DE0  00A1               	movwf	?___awmod+1
  6481     0DE1  0822               	movf	___awmod@dividend,w
  6482     0DE2  00A0               	movwf	?___awmod
  6483     0DE3                     l776:
  6484     0DE3  0008               	return
  6485     0DE4                     __end_of___awmod:
  6486                           
  6487                           	psect	text28
  6488     0B33                     __ptext28:	
  6489 ;; *************** function _WriteI2C *****************
  6490 ;; Defined at:
  6491 ;;		line 373 in file "./Color_Header.h"
  6492 ;; Parameters:    Size  Location     Type
  6493 ;;		None
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;		None
  6496 ;; Return value:  Size  Location     Type
  6497 ;;                  1    wreg      void 
  6498 ;; Registers used:
  6499 ;;		wreg
  6500 ;; Tracked objects:
  6501 ;;		On entry : 0/0
  6502 ;;		On exit  : 0/0
  6503 ;;		Unchanged: 0/0
  6504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6509 ;;Total ram usage:        0 bytes
  6510 ;; Hardware stack levels used: 1
  6511 ;; Hardware stack levels required when called: 2
  6512 ;; This function calls:
  6513 ;;		Nothing
  6514 ;; This function is called by:
  6515 ;;		_UpdateColors
  6516 ;; This function uses a non-reentrant model
  6517 ;;
  6518                           
  6519     0B33                     _WriteI2C:	
  6520                           ;psect for function _WriteI2C
  6521                           
  6522     0B33                     l2234:	
  6523                           ;incstack = 0
  6524                           ; Regs used in _WriteI2C: [wreg]
  6525                           
  6526                           
  6527                           ;./Color_Header.h: 374:     PIR3bits.SSP1IF = 0;
  6528     0B33  002E               	movlb	14	; select bank14
  6529     0B34  100F               	bcf	15,0	;volatile
  6530     0B35                     l2236:
  6531                           
  6532                           ;./Color_Header.h: 375:     SSP1BUFbits.SSPBUF = 0x39 << 1;;
  6533     0B35  3072               	movlw	114
  6534     0B36  0023               	movlb	3	; select bank3
  6535     0B37  008C               	movwf	12	;volatile
  6536     0B38                     l234:
  6537     0B38  0008               	return
  6538     0B39                     __end_of_WriteI2C:
  6539                           
  6540                           	psect	text29
  6541     0B28                     __ptext29:	
  6542 ;; *************** function _StartI2C *****************
  6543 ;; Defined at:
  6544 ;;		line 366 in file "./Color_Header.h"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;		None
  6547 ;; Auto vars:     Size  Location     Type
  6548 ;;		None
  6549 ;; Return value:  Size  Location     Type
  6550 ;;                  1    wreg      void 
  6551 ;; Registers used:
  6552 ;;		None
  6553 ;; Tracked objects:
  6554 ;;		On entry : 0/0
  6555 ;;		On exit  : 0/0
  6556 ;;		Unchanged: 0/0
  6557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6562 ;;Total ram usage:        0 bytes
  6563 ;; Hardware stack levels used: 1
  6564 ;; Hardware stack levels required when called: 2
  6565 ;; This function calls:
  6566 ;;		Nothing
  6567 ;; This function is called by:
  6568 ;;		_UpdateColors
  6569 ;; This function uses a non-reentrant model
  6570 ;;
  6571                           
  6572     0B28                     _StartI2C:	
  6573                           ;psect for function _StartI2C
  6574                           
  6575     0B28                     l2232:	
  6576                           ;incstack = 0
  6577                           ; Regs used in _StartI2C: []
  6578                           
  6579                           
  6580                           ;./Color_Header.h: 367:     PIR3bits.SSP1IF = 0;
  6581     0B28  002E               	movlb	14	; select bank14
  6582     0B29  100F               	bcf	15,0	;volatile
  6583                           
  6584                           ;./Color_Header.h: 368:     SSP1CON2bits.SEN = 1;
  6585     0B2A  0023               	movlb	3	; select bank3
  6586     0B2B  1411               	bsf	17,0	;volatile
  6587     0B2C                     l228:
  6588     0B2C  0008               	return
  6589     0B2D                     __end_of_StartI2C:
  6590                           
  6591                           	psect	text30
  6592     0D4C                     __ptext30:	
  6593 ;; *************** function _SelectColourRegister *****************
  6594 ;; Defined at:
  6595 ;;		line 345 in file "./Color_Header.h"
  6596 ;; Parameters:    Size  Location     Type
  6597 ;;  colorStage      2    0[BANK0 ] int 
  6598 ;; Auto vars:     Size  Location     Type
  6599 ;;  writeValue      1    2[BANK0 ] unsigned char 
  6600 ;; Return value:  Size  Location     Type
  6601 ;;                  1    wreg      void 
  6602 ;; Registers used:
  6603 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6604 ;; Tracked objects:
  6605 ;;		On entry : 0/0
  6606 ;;		On exit  : 0/0
  6607 ;;		Unchanged: 0/0
  6608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6609 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6610 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6612 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6613 ;;Total ram usage:        3 bytes
  6614 ;; Hardware stack levels used: 1
  6615 ;; Hardware stack levels required when called: 2
  6616 ;; This function calls:
  6617 ;;		Nothing
  6618 ;; This function is called by:
  6619 ;;		_UpdateColors
  6620 ;; This function uses a non-reentrant model
  6621 ;;
  6622                           
  6623     0D4C                     _SelectColourRegister:	
  6624                           ;psect for function _SelectColourRegister
  6625                           
  6626     0D4C                     l2202:	
  6627                           ;incstack = 0
  6628                           ; Regs used in _SelectColourRegister: [wreg-fsr0h+status,2+status,0]
  6629                           
  6630                           
  6631                           ;./Color_Header.h: 346:     unsigned char writeValue = 0;
  6632     0D4C  0020               	movlb	0	; select bank0
  6633     0D4D  01A2               	clrf	SelectColourRegister@writeValue
  6634                           
  6635                           ;./Color_Header.h: 347:     switch(colorStage){
  6636     0D4E  2D6A               	goto	l2224
  6637     0D4F                     l2204:
  6638     0D4F  3093               	movlw	147
  6639     0D50  00A2               	movwf	SelectColourRegister@writeValue
  6640     0D51  2D8C               	goto	l2226
  6641     0D52                     l2206:
  6642     0D52  3094               	movlw	148
  6643     0D53  00A2               	movwf	SelectColourRegister@writeValue
  6644     0D54  2D8C               	goto	l2226
  6645     0D55                     l2208:
  6646     0D55  3095               	movlw	149
  6647     0D56  00A2               	movwf	SelectColourRegister@writeValue
  6648     0D57  2D8C               	goto	l2226
  6649     0D58                     l2210:
  6650     0D58  3096               	movlw	150
  6651     0D59  00A2               	movwf	SelectColourRegister@writeValue
  6652     0D5A  2D8C               	goto	l2226
  6653     0D5B                     l2212:
  6654     0D5B  3097               	movlw	151
  6655     0D5C  00A2               	movwf	SelectColourRegister@writeValue
  6656     0D5D  2D8C               	goto	l2226
  6657     0D5E                     l2214:
  6658     0D5E  309A               	movlw	154
  6659     0D5F  00A2               	movwf	SelectColourRegister@writeValue
  6660     0D60  2D8C               	goto	l2226
  6661     0D61                     l2216:
  6662     0D61  309B               	movlw	155
  6663     0D62  00A2               	movwf	SelectColourRegister@writeValue
  6664     0D63  2D8C               	goto	l2226
  6665     0D64                     l2218:
  6666     0D64  3098               	movlw	152
  6667     0D65  00A2               	movwf	SelectColourRegister@writeValue
  6668     0D66  2D8C               	goto	l2226
  6669     0D67                     l2220:
  6670     0D67  3099               	movlw	153
  6671     0D68  00A2               	movwf	SelectColourRegister@writeValue
  6672     0D69  2D8C               	goto	l2226
  6673     0D6A                     l2224:
  6674                           
  6675                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6676                           ; Switch size 1, requested type "simple"
  6677                           ; Number of cases is 1, Range of values is 0 to 0
  6678                           ; switch strategies available:
  6679                           ; Name         Instructions Cycles
  6680                           ; simple_byte            4     3 (average)
  6681                           ; direct_byte            8     6 (fixed)
  6682                           ; jumptable            260     6 (fixed)
  6683                           ;	Chosen strategy is simple_byte
  6684     0D6A  0821               	movf	SelectColourRegister@colorStage+1,w
  6685     0D6B  3A00               	xorlw	0	; case 0
  6686     0D6C  1903               	skipnz
  6687     0D6D  2D6F               	goto	l3394
  6688     0D6E  2D8C               	goto	l2226
  6689     0D6F                     l3394:
  6690                           
  6691                           ; Switch size 1, requested type "simple"
  6692                           ; Number of cases is 9, Range of values is 0 to 8
  6693                           ; switch strategies available:
  6694                           ; Name         Instructions Cycles
  6695                           ; direct_byte           24     6 (fixed)
  6696                           ; simple_byte           28    15 (average)
  6697                           ; jumptable            260     6 (fixed)
  6698                           ;	Chosen strategy is simple_byte
  6699     0D6F  0820               	movf	SelectColourRegister@colorStage,w
  6700     0D70  3A00               	xorlw	0	; case 0
  6701     0D71  1903               	skipnz
  6702     0D72  2D4F               	goto	l2204
  6703     0D73  3A01               	xorlw	1	; case 1
  6704     0D74  1903               	skipnz
  6705     0D75  2D52               	goto	l2206
  6706     0D76  3A03               	xorlw	3	; case 2
  6707     0D77  1903               	skipnz
  6708     0D78  2D55               	goto	l2208
  6709     0D79  3A01               	xorlw	1	; case 3
  6710     0D7A  1903               	skipnz
  6711     0D7B  2D58               	goto	l2210
  6712     0D7C  3A07               	xorlw	7	; case 4
  6713     0D7D  1903               	skipnz
  6714     0D7E  2D5B               	goto	l2212
  6715     0D7F  3A01               	xorlw	1	; case 5
  6716     0D80  1903               	skipnz
  6717     0D81  2D5E               	goto	l2214
  6718     0D82  3A03               	xorlw	3	; case 6
  6719     0D83  1903               	skipnz
  6720     0D84  2D61               	goto	l2216
  6721     0D85  3A01               	xorlw	1	; case 7
  6722     0D86  1903               	skipnz
  6723     0D87  2D64               	goto	l2218
  6724     0D88  3A0F               	xorlw	15	; case 8
  6725     0D89  1903               	skipnz
  6726     0D8A  2D67               	goto	l2220
  6727     0D8B  2D8C               	goto	l2226
  6728     0D8C                     l2226:
  6729                           
  6730                           ;./Color_Header.h: 358:     SSP1BUFbits.SSPBUF = writeValue;
  6731     0D8C  0822               	movf	SelectColourRegister@writeValue,w
  6732     0D8D  0023               	movlb	3	; select bank3
  6733     0D8E  008C               	movwf	12	;volatile
  6734     0D8F                     l222:
  6735     0D8F  0008               	return
  6736     0D90                     __end_of_SelectColourRegister:
  6737                           
  6738                           	psect	text31
  6739     0B1D                     __ptext31:	
  6740 ;; *************** function _RepeatI2C *****************
  6741 ;; Defined at:
  6742 ;;		line 388 in file "./Color_Header.h"
  6743 ;; Parameters:    Size  Location     Type
  6744 ;;		None
  6745 ;; Auto vars:     Size  Location     Type
  6746 ;;		None
  6747 ;; Return value:  Size  Location     Type
  6748 ;;                  1    wreg      void 
  6749 ;; Registers used:
  6750 ;;		None
  6751 ;; Tracked objects:
  6752 ;;		On entry : 0/0
  6753 ;;		On exit  : 0/0
  6754 ;;		Unchanged: 0/0
  6755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6760 ;;Total ram usage:        0 bytes
  6761 ;; Hardware stack levels used: 1
  6762 ;; Hardware stack levels required when called: 2
  6763 ;; This function calls:
  6764 ;;		Nothing
  6765 ;; This function is called by:
  6766 ;;		_UpdateColors
  6767 ;; This function uses a non-reentrant model
  6768 ;;
  6769                           
  6770     0B1D                     _RepeatI2C:	
  6771                           ;psect for function _RepeatI2C
  6772                           
  6773     0B1D                     l2244:	
  6774                           ;incstack = 0
  6775                           ; Regs used in _RepeatI2C: []
  6776                           
  6777                           
  6778                           ;./Color_Header.h: 390:     SSP1CON2bits.RSEN = 1;
  6779     0B1D  0023               	movlb	3	; select bank3
  6780     0B1E  1491               	bsf	17,1	;volatile
  6781     0B1F                     l246:
  6782     0B1F  0008               	return
  6783     0B20                     __end_of_RepeatI2C:
  6784                           
  6785                           	psect	text32
  6786     0B1A                     __ptext32:	
  6787 ;; *************** function _ReadI2C *****************
  6788 ;; Defined at:
  6789 ;;		line 385 in file "./Color_Header.h"
  6790 ;; Parameters:    Size  Location     Type
  6791 ;;		None
  6792 ;; Auto vars:     Size  Location     Type
  6793 ;;		None
  6794 ;; Return value:  Size  Location     Type
  6795 ;;                  1    wreg      void 
  6796 ;; Registers used:
  6797 ;;		None
  6798 ;; Tracked objects:
  6799 ;;		On entry : 0/0
  6800 ;;		On exit  : 0/0
  6801 ;;		Unchanged: 0/0
  6802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6807 ;;Total ram usage:        0 bytes
  6808 ;; Hardware stack levels used: 1
  6809 ;; Hardware stack levels required when called: 2
  6810 ;; This function calls:
  6811 ;;		Nothing
  6812 ;; This function is called by:
  6813 ;;		_UpdateColors
  6814 ;; This function uses a non-reentrant model
  6815 ;;
  6816                           
  6817     0B1A                     _ReadI2C:	
  6818                           ;psect for function _ReadI2C
  6819                           
  6820     0B1A                     l2242:	
  6821                           ;incstack = 0
  6822                           ; Regs used in _ReadI2C: []
  6823                           
  6824                           
  6825                           ;./Color_Header.h: 386:     SSP1CON2bits.RCEN = 1;
  6826     0B1A  0023               	movlb	3	; select bank3
  6827     0B1B  1591               	bsf	17,3	;volatile
  6828     0B1C                     l243:
  6829     0B1C  0008               	return
  6830     0B1D                     __end_of_ReadI2C:
  6831                           
  6832                           	psect	text33
  6833     0B2D                     __ptext33:	
  6834 ;; *************** function _ReadAddressI2C *****************
  6835 ;; Defined at:
  6836 ;;		line 377 in file "./Color_Header.h"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;		None
  6839 ;; Auto vars:     Size  Location     Type
  6840 ;;		None
  6841 ;; Return value:  Size  Location     Type
  6842 ;;                  1    wreg      void 
  6843 ;; Registers used:
  6844 ;;		wreg
  6845 ;; Tracked objects:
  6846 ;;		On entry : 0/0
  6847 ;;		On exit  : 0/0
  6848 ;;		Unchanged: 0/0
  6849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6854 ;;Total ram usage:        0 bytes
  6855 ;; Hardware stack levels used: 1
  6856 ;; Hardware stack levels required when called: 2
  6857 ;; This function calls:
  6858 ;;		Nothing
  6859 ;; This function is called by:
  6860 ;;		_UpdateColors
  6861 ;; This function uses a non-reentrant model
  6862 ;;
  6863                           
  6864     0B2D                     _ReadAddressI2C:	
  6865                           ;psect for function _ReadAddressI2C
  6866                           
  6867     0B2D                     l2238:	
  6868                           ;incstack = 0
  6869                           ; Regs used in _ReadAddressI2C: [wreg]
  6870                           
  6871                           
  6872                           ;./Color_Header.h: 378:     PIR3bits.SSP1IF = 0;
  6873     0B2D  002E               	movlb	14	; select bank14
  6874     0B2E  100F               	bcf	15,0	;volatile
  6875     0B2F                     l2240:
  6876                           
  6877                           ;./Color_Header.h: 379:     SSP1BUFbits.SSPBUF = (0x39 << 1) | 1;;
  6878     0B2F  3073               	movlw	115
  6879     0B30  0023               	movlb	3	; select bank3
  6880     0B31  008C               	movwf	12	;volatile
  6881     0B32                     l237:
  6882     0B32  0008               	return
  6883     0B33                     __end_of_ReadAddressI2C:
  6884                           
  6885                           	psect	text34
  6886     069D                     __ptext34:	
  6887 ;; *************** function _GetValueAndEndI2C *****************
  6888 ;; Defined at:
  6889 ;;		line 407 in file "./Color_Header.h"
  6890 ;; Parameters:    Size  Location     Type
  6891 ;;  colors          1    wreg     PTR struct colorScheme
  6892 ;;		 -> colors(12), 
  6893 ;; Auto vars:     Size  Location     Type
  6894 ;;  colors          1    4[BANK0 ] PTR struct colorScheme
  6895 ;;		 -> colors(12), 
  6896 ;;  value           1    3[BANK0 ] unsigned char 
  6897 ;; Return value:  Size  Location     Type
  6898 ;;                  1    wreg      void 
  6899 ;; Registers used:
  6900 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6901 ;; Tracked objects:
  6902 ;;		On entry : 0/0
  6903 ;;		On exit  : 0/0
  6904 ;;		Unchanged: 0/0
  6905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6907 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6909 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6910 ;;Total ram usage:        2 bytes
  6911 ;; Hardware stack levels used: 1
  6912 ;; Hardware stack levels required when called: 4
  6913 ;; This function calls:
  6914 ;;		_EndI2C
  6915 ;;		_IncrementColorStage
  6916 ;;		_LoadTemp
  6917 ;;		_ReadColorReady
  6918 ;;		_Reset
  6919 ;; This function is called by:
  6920 ;;		_UpdateColors
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           
  6924     069D                     _GetValueAndEndI2C:	
  6925                           ;psect for function _GetValueAndEndI2C
  6926                           
  6927                           
  6928                           ;incstack = 0
  6929                           ; Regs used in _GetValueAndEndI2C: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6930                           ;GetValueAndEndI2C@colors stored from wreg
  6931     069D  0020               	movlb	0	; select bank0
  6932     069E  00A4               	movwf	GetValueAndEndI2C@colors
  6933     069F                     l2246:
  6934                           
  6935                           ;./Color_Header.h: 409:     unsigned char value = SSP1BUF;
  6936     069F  0023               	movlb	3	; select bank3
  6937     06A0  080C               	movf	12,w	;volatile
  6938     06A1  0020               	movlb	0	; select bank0
  6939     06A2  00A3               	movwf	GetValueAndEndI2C@value
  6940                           
  6941                           ;./Color_Header.h: 410:     switch(colors->colorStage){
  6942     06A3  2F26               	goto	l2284
  6943     06A4                     l2248:
  6944     06A4  0823               	movf	GetValueAndEndI2C@value,w
  6945     06A5  00A1               	movwf	ReadColorReady@buffer
  6946     06A6  0824               	movf	GetValueAndEndI2C@colors,w
  6947     06A7  318C  241D  3186   	fcall	_ReadColorReady
  6948     06AA  2F48               	goto	l2286
  6949     06AB                     l2250:
  6950     06AB  0823               	movf	GetValueAndEndI2C@value,w
  6951     06AC  00A0               	movwf	LoadTemp@value
  6952     06AD  0824               	movf	GetValueAndEndI2C@colors,w
  6953     06AE  318B  2354  3186   	fcall	_LoadTemp
  6954     06B1                     l2252:
  6955     06B1  0020               	movlb	0	; select bank0
  6956     06B2  0824               	movf	GetValueAndEndI2C@colors,w
  6957     06B3  318B  2396  3186   	fcall	_IncrementColorStage
  6958     06B6  2F48               	goto	l2286
  6959     06B7                     l2254:
  6960     06B7  0824               	movf	GetValueAndEndI2C@colors,w
  6961     06B8  3E08               	addlw	8
  6962     06B9  0086               	movwf	6
  6963     06BA  3001               	movlw	1	; select bank2/3
  6964     06BB  0087               	movwf	7
  6965     06BC  0824               	movf	GetValueAndEndI2C@colors,w
  6966     06BD  0084               	movwf	4
  6967     06BE  3001               	movlw	1	; select bank2/3
  6968     06BF  0085               	movwf	5
  6969     06C0  0801               	movf	1,w
  6970     06C1  3F80               	movwi [0]fsr0
  6971     06C2  0823               	movf	GetValueAndEndI2C@value,w
  6972     06C3  3F81               	movwi [1]fsr0
  6973     06C4                     l2256:
  6974     06C4  0824               	movf	GetValueAndEndI2C@colors,w
  6975     06C5  318B  2396  3186   	fcall	_IncrementColorStage
  6976     06C8  2F48               	goto	l2286
  6977     06C9                     l2258:
  6978     06C9  0823               	movf	GetValueAndEndI2C@value,w
  6979     06CA  00A0               	movwf	LoadTemp@value
  6980     06CB  0824               	movf	GetValueAndEndI2C@colors,w
  6981     06CC  318B  2354  3186   	fcall	_LoadTemp
  6982     06CF                     l2260:
  6983     06CF  0020               	movlb	0	; select bank0
  6984     06D0  0824               	movf	GetValueAndEndI2C@colors,w
  6985     06D1  318B  2396  3186   	fcall	_IncrementColorStage
  6986     06D4                     l2262:
  6987     06D4  0020               	movlb	0	; select bank0
  6988     06D5  0824               	movf	GetValueAndEndI2C@colors,w
  6989     06D6  3E08               	addlw	8
  6990     06D7  0086               	movwf	6
  6991     06D8  3001               	movlw	1	; select bank2/3
  6992     06D9  0087               	movwf	7
  6993     06DA  0824               	movf	GetValueAndEndI2C@colors,w
  6994     06DB  3E06               	addlw	6
  6995     06DC  0084               	movwf	4
  6996     06DD  3001               	movlw	1	; select bank2/3
  6997     06DE  0085               	movwf	5
  6998     06DF  0801               	movf	1,w
  6999     06E0  3F80               	movwi [0]fsr0
  7000     06E1  0823               	movf	GetValueAndEndI2C@value,w
  7001     06E2  3F81               	movwi [1]fsr0
  7002     06E3                     l2264:
  7003     06E3  0824               	movf	GetValueAndEndI2C@colors,w
  7004     06E4  318B  2396  3186   	fcall	_IncrementColorStage
  7005     06E7  2F48               	goto	l2286
  7006     06E8                     l2266:
  7007     06E8  0823               	movf	GetValueAndEndI2C@value,w
  7008     06E9  00A0               	movwf	LoadTemp@value
  7009     06EA  0824               	movf	GetValueAndEndI2C@colors,w
  7010     06EB  318B  2354  3186   	fcall	_LoadTemp
  7011     06EE                     l2268:
  7012     06EE  0020               	movlb	0	; select bank0
  7013     06EF  0824               	movf	GetValueAndEndI2C@colors,w
  7014     06F0  318B  2396  3186   	fcall	_IncrementColorStage
  7015     06F3  2F48               	goto	l2286
  7016     06F4                     l2270:
  7017     06F4  0824               	movf	GetValueAndEndI2C@colors,w
  7018     06F5  3E08               	addlw	8
  7019     06F6  0086               	movwf	6
  7020     06F7  3001               	movlw	1	; select bank2/3
  7021     06F8  0087               	movwf	7
  7022     06F9  0824               	movf	GetValueAndEndI2C@colors,w
  7023     06FA  3E04               	addlw	4
  7024     06FB  0084               	movwf	4
  7025     06FC  3001               	movlw	1	; select bank2/3
  7026     06FD  0085               	movwf	5
  7027     06FE  0801               	movf	1,w
  7028     06FF  3F80               	movwi [0]fsr0
  7029     0700  0823               	movf	GetValueAndEndI2C@value,w
  7030     0701  3F81               	movwi [1]fsr0
  7031     0702                     l2272:
  7032     0702  0824               	movf	GetValueAndEndI2C@colors,w
  7033     0703  318B  2396  3186   	fcall	_IncrementColorStage
  7034     0706  2F48               	goto	l2286
  7035     0707                     l2274:
  7036     0707  0823               	movf	GetValueAndEndI2C@value,w
  7037     0708  00A0               	movwf	LoadTemp@value
  7038     0709  0824               	movf	GetValueAndEndI2C@colors,w
  7039     070A  318B  2354  3186   	fcall	_LoadTemp
  7040     070D                     l2276:
  7041     070D  0020               	movlb	0	; select bank0
  7042     070E  0824               	movf	GetValueAndEndI2C@colors,w
  7043     070F  318B  2396  3186   	fcall	_IncrementColorStage
  7044     0712  2F48               	goto	l2286
  7045     0713                     l2278:
  7046     0713  0824               	movf	GetValueAndEndI2C@colors,w
  7047     0714  3E08               	addlw	8
  7048     0715  0086               	movwf	6
  7049     0716  3001               	movlw	1	; select bank2/3
  7050     0717  0087               	movwf	7
  7051     0718  0824               	movf	GetValueAndEndI2C@colors,w
  7052     0719  3E02               	addlw	2
  7053     071A  0084               	movwf	4
  7054     071B  3001               	movlw	1	; select bank2/3
  7055     071C  0085               	movwf	5
  7056     071D  0801               	movf	1,w
  7057     071E  3F80               	movwi [0]fsr0
  7058     071F  0823               	movf	GetValueAndEndI2C@value,w
  7059     0720  3F81               	movwi [1]fsr0
  7060     0721                     l2280:
  7061     0721  0824               	movf	GetValueAndEndI2C@colors,w
  7062     0722  318B  23D7  3186   	fcall	_Reset
  7063     0725  2F48               	goto	l2286
  7064     0726                     l2284:
  7065     0726  0824               	movf	GetValueAndEndI2C@colors,w
  7066     0727  3E0A               	addlw	10
  7067     0728  0086               	movwf	6
  7068     0729  3001               	movlw	1	; select bank2/3
  7069     072A  0087               	movwf	7
  7070     072B  0801               	movf	1,w
  7071                           
  7072                           ; Switch size 1, requested type "simple"
  7073                           ; Number of cases is 9, Range of values is 0 to 8
  7074                           ; switch strategies available:
  7075                           ; Name         Instructions Cycles
  7076                           ; direct_byte           24     6 (fixed)
  7077                           ; simple_byte           28    15 (average)
  7078                           ; jumptable            260     6 (fixed)
  7079                           ;	Chosen strategy is simple_byte
  7080     072C  3A00               	xorlw	0	; case 0
  7081     072D  1903               	skipnz
  7082     072E  2EA4               	goto	l2248
  7083     072F  3A01               	xorlw	1	; case 1
  7084     0730  1903               	skipnz
  7085     0731  2EAB               	goto	l2250
  7086     0732  3A03               	xorlw	3	; case 2
  7087     0733  1903               	skipnz
  7088     0734  2EB7               	goto	l2254
  7089     0735  3A01               	xorlw	1	; case 3
  7090     0736  1903               	skipnz
  7091     0737  2EC9               	goto	l2258
  7092     0738  3A07               	xorlw	7	; case 4
  7093     0739  1903               	skipnz
  7094     073A  2ED4               	goto	l2262
  7095     073B  3A01               	xorlw	1	; case 5
  7096     073C  1903               	skipnz
  7097     073D  2EE8               	goto	l2266
  7098     073E  3A03               	xorlw	3	; case 6
  7099     073F  1903               	skipnz
  7100     0740  2EF4               	goto	l2270
  7101     0741  3A01               	xorlw	1	; case 7
  7102     0742  1903               	skipnz
  7103     0743  2F07               	goto	l2274
  7104     0744  3A0F               	xorlw	15	; case 8
  7105     0745  1903               	skipnz
  7106     0746  2F13               	goto	l2278
  7107     0747  2F48               	goto	l2286
  7108     0748                     l2286:
  7109                           
  7110                           ;./Color_Header.h: 422:     EndI2C();
  7111     0748  318B  2317  3186   	fcall	_EndI2C
  7112     074B                     l270:
  7113     074B  0008               	return
  7114     074C                     __end_of_GetValueAndEndI2C:
  7115                           
  7116                           	psect	text35
  7117     0BD7                     __ptext35:	
  7118 ;; *************** function _Reset *****************
  7119 ;; Defined at:
  7120 ;;		line 361 in file "./Color_Header.h"
  7121 ;; Parameters:    Size  Location     Type
  7122 ;;  colors          1    wreg     PTR struct colorScheme
  7123 ;;		 -> colors(12), 
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;  colors          1    0[BANK0 ] PTR struct colorScheme
  7126 ;;		 -> colors(12), 
  7127 ;; Return value:  Size  Location     Type
  7128 ;;                  1    wreg      void 
  7129 ;; Registers used:
  7130 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7131 ;; Tracked objects:
  7132 ;;		On entry : 0/0
  7133 ;;		On exit  : 0/0
  7134 ;;		Unchanged: 0/0
  7135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7137 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7139 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7140 ;;Total ram usage:        1 bytes
  7141 ;; Hardware stack levels used: 1
  7142 ;; Hardware stack levels required when called: 2
  7143 ;; This function calls:
  7144 ;;		Nothing
  7145 ;; This function is called by:
  7146 ;;		_GetValueAndEndI2C
  7147 ;; This function uses a non-reentrant model
  7148 ;;
  7149                           
  7150     0BD7                     _Reset:	
  7151                           ;psect for function _Reset
  7152                           
  7153                           
  7154                           ;incstack = 0
  7155                           ; Regs used in _Reset: [wreg+fsr1l+fsr1h+status,2+status,0]
  7156                           ;Reset@colors stored from wreg
  7157     0BD7  0020               	movlb	0	; select bank0
  7158     0BD8  00A0               	movwf	Reset@colors
  7159     0BD9                     l2158:
  7160                           
  7161                           ;./Color_Header.h: 362:     colors->colorStage = 0;
  7162     0BD9  0820               	movf	Reset@colors,w
  7163     0BDA  3E0A               	addlw	10
  7164     0BDB  0086               	movwf	6
  7165     0BDC  3001               	movlw	1	; select bank2/3
  7166     0BDD  0087               	movwf	7
  7167     0BDE  0181               	clrf	1
  7168                           
  7169                           ;./Color_Header.h: 363:     colors->ready = 0;
  7170     0BDF  0820               	movf	Reset@colors,w
  7171     0BE0  3E09               	addlw	9
  7172     0BE1  0086               	movwf	6
  7173     0BE2  3001               	movlw	1	; select bank2/3
  7174     0BE3  0087               	movwf	7
  7175     0BE4  0181               	clrf	1
  7176                           
  7177                           ;./Color_Header.h: 364:     colors->allDone = 1;
  7178     0BE5  0820               	movf	Reset@colors,w
  7179     0BE6  3E0B               	addlw	11
  7180     0BE7  0086               	movwf	6
  7181     0BE8  3001               	movlw	1	; select bank2/3
  7182     0BE9  0087               	movwf	7
  7183     0BEA  0181               	clrf	1
  7184     0BEB  0A81               	incf	1,f
  7185     0BEC                     l225:
  7186     0BEC  0008               	return
  7187     0BED                     __end_of_Reset:
  7188                           
  7189                           	psect	text36
  7190     0C1D                     __ptext36:	
  7191 ;; *************** function _ReadColorReady *****************
  7192 ;; Defined at:
  7193 ;;		line 399 in file "./Color_Header.h"
  7194 ;; Parameters:    Size  Location     Type
  7195 ;;  colors          1    wreg     PTR struct colorScheme
  7196 ;;		 -> colors(12), 
  7197 ;;  buffer          1    1[BANK0 ] unsigned char 
  7198 ;; Auto vars:     Size  Location     Type
  7199 ;;  colors          1    2[BANK0 ] PTR struct colorScheme
  7200 ;;		 -> colors(12), 
  7201 ;; Return value:  Size  Location     Type
  7202 ;;                  1    wreg      void 
  7203 ;; Registers used:
  7204 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7205 ;; Tracked objects:
  7206 ;;		On entry : 0/0
  7207 ;;		On exit  : 0/0
  7208 ;;		Unchanged: 0/0
  7209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7210 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7211 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7213 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7214 ;;Total ram usage:        2 bytes
  7215 ;; Hardware stack levels used: 1
  7216 ;; Hardware stack levels required when called: 3
  7217 ;; This function calls:
  7218 ;;		_IncrementColorStage
  7219 ;; This function is called by:
  7220 ;;		_GetValueAndEndI2C
  7221 ;; This function uses a non-reentrant model
  7222 ;;
  7223                           
  7224     0C1D                     _ReadColorReady:	
  7225                           ;psect for function _ReadColorReady
  7226                           
  7227                           
  7228                           ;incstack = 0
  7229                           ; Regs used in _ReadColorReady: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7230                           ;ReadColorReady@colors stored from wreg
  7231     0C1D  0020               	movlb	0	; select bank0
  7232     0C1E  00A2               	movwf	ReadColorReady@colors
  7233     0C1F                     l2164:
  7234                           
  7235                           ;./Color_Header.h: 400:     buffer = buffer & 0x1;
  7236     0C1F  0821               	movf	ReadColorReady@buffer,w
  7237     0C20  3901               	andlw	1
  7238     0C21  00A1               	movwf	ReadColorReady@buffer
  7239     0C22                     l2166:
  7240                           
  7241                           ;./Color_Header.h: 401:     colors->ready = buffer;
  7242     0C22  0822               	movf	ReadColorReady@colors,w
  7243     0C23  3E09               	addlw	9
  7244     0C24  0086               	movwf	6
  7245     0C25  3001               	movlw	1	; select bank2/3
  7246     0C26  0087               	movwf	7
  7247     0C27  0821               	movf	ReadColorReady@buffer,w
  7248     0C28  0081               	movwf	1
  7249     0C29                     l2168:
  7250                           
  7251                           ;./Color_Header.h: 402:     if(colors->ready == 1){
  7252     0C29  0822               	movf	ReadColorReady@colors,w
  7253     0C2A  3E09               	addlw	9
  7254     0C2B  0086               	movwf	6
  7255     0C2C  3001               	movlw	1	; select bank2/3
  7256     0C2D  0087               	movwf	7
  7257     0C2E  0301               	decf	1,w
  7258     0C2F  1D03               	btfss	3,2
  7259     0C30  2C32               	goto	u1241
  7260     0C31  2C33               	goto	u1240
  7261     0C32                     u1241:
  7262     0C32  2C37               	goto	l256
  7263     0C33                     u1240:
  7264     0C33                     l2170:
  7265                           
  7266                           ;./Color_Header.h: 403:         IncrementColorStage(colors);
  7267     0C33  0822               	movf	ReadColorReady@colors,w
  7268     0C34  318B  2396  318C   	fcall	_IncrementColorStage
  7269     0C37                     l256:
  7270     0C37  0008               	return
  7271     0C38                     __end_of_ReadColorReady:
  7272                           
  7273                           	psect	text37
  7274     0B96                     __ptext37:	
  7275 ;; *************** function _IncrementColorStage *****************
  7276 ;; Defined at:
  7277 ;;		line 392 in file "./Color_Header.h"
  7278 ;; Parameters:    Size  Location     Type
  7279 ;;  colors          1    wreg     PTR struct colorScheme
  7280 ;;		 -> colors(12), 
  7281 ;; Auto vars:     Size  Location     Type
  7282 ;;  colors          1    0[BANK0 ] PTR struct colorScheme
  7283 ;;		 -> colors(12), 
  7284 ;; Return value:  Size  Location     Type
  7285 ;;                  1    wreg      void 
  7286 ;; Registers used:
  7287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7288 ;; Tracked objects:
  7289 ;;		On entry : 0/0
  7290 ;;		On exit  : 0/0
  7291 ;;		Unchanged: 0/0
  7292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7294 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7296 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7297 ;;Total ram usage:        1 bytes
  7298 ;; Hardware stack levels used: 1
  7299 ;; Hardware stack levels required when called: 2
  7300 ;; This function calls:
  7301 ;;		Nothing
  7302 ;; This function is called by:
  7303 ;;		_ReadColorReady
  7304 ;;		_GetValueAndEndI2C
  7305 ;; This function uses a non-reentrant model
  7306 ;;
  7307                           
  7308     0B96                     _IncrementColorStage:	
  7309                           ;psect for function _IncrementColorStage
  7310                           
  7311                           
  7312                           ;incstack = 0
  7313                           ; Regs used in _IncrementColorStage: [wreg-fsr1h+status,2+status,0]
  7314                           ;IncrementColorStage@colors stored from wreg
  7315     0B96  0020               	movlb	0	; select bank0
  7316     0B97  00A0               	movwf	IncrementColorStage@colors
  7317     0B98                     l2156:
  7318                           
  7319                           ;./Color_Header.h: 393:     colors->colorStage = colors->colorStage +1;
  7320     0B98  0820               	movf	IncrementColorStage@colors,w
  7321     0B99  3E0A               	addlw	10
  7322     0B9A  0086               	movwf	6
  7323     0B9B  3001               	movlw	1	; select bank2/3
  7324     0B9C  0087               	movwf	7
  7325     0B9D  0820               	movf	IncrementColorStage@colors,w
  7326     0B9E  3E0A               	addlw	10
  7327     0B9F  0084               	movwf	4
  7328     0BA0  3001               	movlw	1	; select bank2/3
  7329     0BA1  0085               	movwf	5
  7330     0BA2  0800               	movf	0,w
  7331     0BA3  3E01               	addlw	1
  7332     0BA4  0081               	movwf	1
  7333     0BA5                     l249:
  7334     0BA5  0008               	return
  7335     0BA6                     __end_of_IncrementColorStage:
  7336                           
  7337                           	psect	text38
  7338     0B54                     __ptext38:	
  7339 ;; *************** function _LoadTemp *****************
  7340 ;; Defined at:
  7341 ;;		line 396 in file "./Color_Header.h"
  7342 ;; Parameters:    Size  Location     Type
  7343 ;;  colors          1    wreg     PTR struct colorScheme
  7344 ;;		 -> colors(12), 
  7345 ;;  value           1    0[BANK0 ] unsigned char 
  7346 ;; Auto vars:     Size  Location     Type
  7347 ;;  colors          1    1[BANK0 ] PTR struct colorScheme
  7348 ;;		 -> colors(12), 
  7349 ;; Return value:  Size  Location     Type
  7350 ;;                  1    wreg      void 
  7351 ;; Registers used:
  7352 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7353 ;; Tracked objects:
  7354 ;;		On entry : 0/0
  7355 ;;		On exit  : 0/0
  7356 ;;		Unchanged: 0/0
  7357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7358 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7359 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7361 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7362 ;;Total ram usage:        2 bytes
  7363 ;; Hardware stack levels used: 1
  7364 ;; Hardware stack levels required when called: 2
  7365 ;; This function calls:
  7366 ;;		Nothing
  7367 ;; This function is called by:
  7368 ;;		_GetValueAndEndI2C
  7369 ;; This function uses a non-reentrant model
  7370 ;;
  7371                           
  7372     0B54                     _LoadTemp:	
  7373                           ;psect for function _LoadTemp
  7374                           
  7375                           
  7376                           ;incstack = 0
  7377                           ; Regs used in _LoadTemp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7378                           ;LoadTemp@colors stored from wreg
  7379     0B54  0020               	movlb	0	; select bank0
  7380     0B55  00A1               	movwf	LoadTemp@colors
  7381     0B56                     l2162:
  7382                           
  7383                           ;./Color_Header.h: 397:     colors->temp = value;
  7384     0B56  0821               	movf	LoadTemp@colors,w
  7385     0B57  3E08               	addlw	8
  7386     0B58  0086               	movwf	6
  7387     0B59  3001               	movlw	1	; select bank2/3
  7388     0B5A  0087               	movwf	7
  7389     0B5B  0820               	movf	LoadTemp@value,w
  7390     0B5C  0081               	movwf	1
  7391     0B5D                     l252:
  7392     0B5D  0008               	return
  7393     0B5E                     __end_of_LoadTemp:
  7394                           
  7395                           	psect	text39
  7396     0B17                     __ptext39:	
  7397 ;; *************** function _EndI2C *****************
  7398 ;; Defined at:
  7399 ;;		line 370 in file "./Color_Header.h"
  7400 ;; Parameters:    Size  Location     Type
  7401 ;;		None
  7402 ;; Auto vars:     Size  Location     Type
  7403 ;;		None
  7404 ;; Return value:  Size  Location     Type
  7405 ;;                  1    wreg      void 
  7406 ;; Registers used:
  7407 ;;		None
  7408 ;; Tracked objects:
  7409 ;;		On entry : 0/0
  7410 ;;		On exit  : 0/0
  7411 ;;		Unchanged: 0/0
  7412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7417 ;;Total ram usage:        0 bytes
  7418 ;; Hardware stack levels used: 1
  7419 ;; Hardware stack levels required when called: 2
  7420 ;; This function calls:
  7421 ;;		Nothing
  7422 ;; This function is called by:
  7423 ;;		_GetValueAndEndI2C
  7424 ;; This function uses a non-reentrant model
  7425 ;;
  7426                           
  7427     0B17                     _EndI2C:	
  7428                           ;psect for function _EndI2C
  7429                           
  7430     0B17                     l2160:	
  7431                           ;incstack = 0
  7432                           ; Regs used in _EndI2C: []
  7433                           
  7434                           
  7435                           ;./Color_Header.h: 371:     SSP1CON2bits.PEN = 1;
  7436     0B17  0023               	movlb	3	; select bank3
  7437     0B18  1511               	bsf	17,2	;volatile
  7438     0B19                     l231:
  7439     0B19  0008               	return
  7440     0B1A                     __end_of_EndI2C:
  7441                           
  7442                           	psect	text40
  7443     0B86                     __ptext40:	
  7444 ;; *************** function _ActivatePump *****************
  7445 ;; Defined at:
  7446 ;;		line 408 in file "motorMain.c"
  7447 ;; Parameters:    Size  Location     Type
  7448 ;;  switchValue     2    0[BANK0 ] int 
  7449 ;; Auto vars:     Size  Location     Type
  7450 ;;		None
  7451 ;; Return value:  Size  Location     Type
  7452 ;;                  1    wreg      void 
  7453 ;; Registers used:
  7454 ;;		wreg
  7455 ;; Tracked objects:
  7456 ;;		On entry : 0/0
  7457 ;;		On exit  : 0/0
  7458 ;;		Unchanged: 0/0
  7459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7460 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7463 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7464 ;;Total ram usage:        2 bytes
  7465 ;; Hardware stack levels used: 1
  7466 ;; Hardware stack levels required when called: 2
  7467 ;; This function calls:
  7468 ;;		Nothing
  7469 ;; This function is called by:
  7470 ;;		_main
  7471 ;; This function uses a non-reentrant model
  7472 ;;
  7473                           
  7474     0B86                     _ActivatePump:	
  7475                           ;psect for function _ActivatePump
  7476                           
  7477     0B86                     l2788:	
  7478                           ;incstack = 0
  7479                           ; Regs used in _ActivatePump: [wreg]
  7480                           
  7481                           
  7482                           ;motorMain.c: 409:     if(switchValue <= SWITCH_MIN){
  7483     0B86  3003               	movlw	3
  7484     0B87  0020               	movlb	0	; select bank0
  7485     0B88  0221               	subwf	ActivatePump@switchValue+1,w
  7486     0B89  30E9               	movlw	233
  7487     0B8A  1903               	skipnz
  7488     0B8B  0220               	subwf	ActivatePump@switchValue,w
  7489     0B8C  1803               	skipnc
  7490     0B8D  2B8F               	goto	u2131
  7491     0B8E  2B90               	goto	u2130
  7492     0B8F                     u2131:
  7493     0B8F  2B93               	goto	l443
  7494     0B90                     u2130:
  7495     0B90                     l2790:
  7496                           
  7497                           ;motorMain.c: 410:         LATBbits.LATB2 = 1;
  7498     0B90  1517               	bsf	23,2	;volatile
  7499                           
  7500                           ;motorMain.c: 411:         LATBbits.LATB3 = 0;
  7501     0B91  1197               	bcf	23,3	;volatile
  7502                           
  7503                           ;motorMain.c: 412:     }
  7504     0B92  2B95               	goto	l445
  7505     0B93                     l443:	
  7506                           ;motorMain.c: 413:     else{
  7507                           
  7508                           
  7509                           ;motorMain.c: 414:         LATBbits.LATB2 = 0;
  7510     0B93  1117               	bcf	23,2	;volatile
  7511                           
  7512                           ;motorMain.c: 415:         LATBbits.LATB3 = 0;
  7513     0B94  1197               	bcf	23,3	;volatile
  7514     0B95                     l445:
  7515     0B95  0008               	return
  7516     0B96                     __end_of_ActivatePump:
  7517                           
  7518                           	psect	intentry
  7519     0004                     __pintentry:	
  7520 ;; *************** function _myFunction *****************
  7521 ;; Defined at:
  7522 ;;		line 418 in file "motorMain.c"
  7523 ;; Parameters:    Size  Location     Type
  7524 ;;		None
  7525 ;; Auto vars:     Size  Location     Type
  7526 ;;  input           2    7[COMMON] int 
  7527 ;; Return value:  Size  Location     Type
  7528 ;;                  1    wreg      void 
  7529 ;; Registers used:
  7530 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7531 ;; Tracked objects:
  7532 ;;		On entry : 0/0
  7533 ;;		On exit  : 0/0
  7534 ;;		Unchanged: 0/0
  7535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7537 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7538 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7539 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7540 ;;Total ram usage:        4 bytes
  7541 ;; Hardware stack levels used: 1
  7542 ;; Hardware stack levels required when called: 1
  7543 ;; This function calls:
  7544 ;;		_GetControllerInput
  7545 ;; This function is called by:
  7546 ;;		Interrupt level 1
  7547 ;; This function uses a non-reentrant model
  7548 ;;
  7549                           
  7550     0004                     _myFunction:
  7551                           
  7552                           ;incstack = 0
  7553     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  7554                           
  7555                           ; Regs used in _myFunction: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7556     0005  3180               	pagesel	$
  7557     0006                     i1l3286:
  7558                           
  7559                           ;motorMain.c: 419:     if(PIR3bits.SSP1IF == 1){
  7560     0006  002E               	movlb	14	; select bank14
  7561     0007  1C0F               	btfss	15,0	;volatile
  7562     0008  280A               	goto	u245_21
  7563     0009  280B               	goto	u245_20
  7564     000A                     u245_21:
  7565     000A  2810               	goto	i1l450
  7566     000B                     u245_20:
  7567     000B                     i1l3288:
  7568                           
  7569                           ;motorMain.c: 421:         newI2CMessage = 1;
  7570     000B  0020               	movlb	0	; select bank0
  7571     000C  01EE               	clrf	_newI2CMessage
  7572     000D  0AEE               	incf	_newI2CMessage,f
  7573                           
  7574                           ;motorMain.c: 422:         PIR3bits.SSP1IF = 0;
  7575     000E  002E               	movlb	14	; select bank14
  7576     000F  100F               	bcf	15,0	;volatile
  7577     0010                     i1l450:	
  7578                           ;motorMain.c: 423:     }
  7579                           
  7580                           
  7581                           ;motorMain.c: 424:     if(PIR3bits.RCIF == 1){
  7582     0010  1E8F               	btfss	15,5	;volatile
  7583     0011  2813               	goto	u246_21
  7584     0012  2814               	goto	u246_20
  7585     0013                     u246_21:
  7586     0013  2849               	goto	i1l3306
  7587     0014                     u246_20:
  7588     0014                     i1l3290:
  7589                           
  7590                           ;motorMain.c: 425:         int input = RCREG;
  7591     0014  0022               	movlb	2	; select bank2
  7592     0015  0819               	movf	25,w	;volatile
  7593     0016  00F5               	movwf	??_myFunction
  7594     0017  01F6               	clrf	??_myFunction+1
  7595     0018  0875               	movf	??_myFunction,w
  7596     0019  00F7               	movwf	myFunction@input
  7597     001A  0876               	movf	??_myFunction+1,w
  7598     001B  00F8               	movwf	myFunction@input+1
  7599     001C                     i1l3292:
  7600                           
  7601                           ;motorMain.c: 426:         if(currentCommand.receiveId == CONTROL_INPUT){
  7602     001C  0020               	movlb	0	; select bank0
  7603     001D  0361               	decf	_currentCommand+12,w
  7604     001E  0462               	iorwf	_currentCommand+13,w
  7605     001F  1D03               	btfss	3,2
  7606     0020  2822               	goto	u247_21
  7607     0021  2823               	goto	u247_20
  7608     0022                     u247_21:
  7609     0022  2831               	goto	i1l3298
  7610     0023                     u247_20:
  7611     0023                     i1l3294:
  7612                           
  7613                           ;motorMain.c: 427:             GetControllerInput(input);
  7614     0023  0878               	movf	myFunction@input+1,w
  7615     0024  00F1               	movwf	GetControllerInput@input+1
  7616     0025  0877               	movf	myFunction@input,w
  7617     0026  00F0               	movwf	GetControllerInput@input
  7618     0027  3184  2476  3180   	fcall	_GetControllerInput
  7619     002A                     i1l3296:
  7620                           
  7621                           ;motorMain.c: 428:             currentCommand.receiveIt = currentCommand.receiveIt + 1;
  7622     002A  0020               	movlb	0	; select bank0
  7623     002B  085D               	movf	_currentCommand+8,w
  7624     002C  3E01               	addlw	1
  7625     002D  00DD               	movwf	_currentCommand+8
  7626     002E  3000               	movlw	0
  7627     002F  3D5E               	addwfc	_currentCommand+9,w
  7628     0030  00DE               	movwf	_currentCommand+9
  7629     0031                     i1l3298:
  7630                           
  7631                           ;motorMain.c: 430:         if(currentCommand.receiveIt >= currentCommand.receiveLimit){
  7632     0031  085E               	movf	_currentCommand+9,w
  7633     0032  3A80               	xorlw	128
  7634     0033  00F5               	movwf	??_myFunction
  7635     0034  0860               	movf	_currentCommand+11,w
  7636     0035  3A80               	xorlw	128
  7637     0036  0275               	subwf	??_myFunction,w
  7638     0037  1D03               	skipz
  7639     0038  283B               	goto	u248_25
  7640     0039  085F               	movf	_currentCommand+10,w
  7641     003A  025D               	subwf	_currentCommand+8,w
  7642     003B                     u248_25:
  7643     003B  1C03               	skipc
  7644     003C  283E               	goto	u248_21
  7645     003D  283F               	goto	u248_20
  7646     003E                     u248_21:
  7647     003E  2842               	goto	i1l3302
  7648     003F                     u248_20:
  7649     003F                     i1l3300:
  7650                           
  7651                           ;motorMain.c: 431:             currentCommand.done = 1;
  7652     003F  0020               	movlb	0	; select bank0
  7653     0040  01E3               	clrf	_currentCommand+14
  7654     0041  0AE3               	incf	_currentCommand+14,f
  7655     0042                     i1l3302:
  7656                           
  7657                           ;motorMain.c: 433:         inputStage++;
  7658     0042  3001               	movlw	1
  7659     0043  0021               	movlb	1	; select bank1
  7660     0044  07EE               	addwf	_inputStage^(0+128),f
  7661     0045  3000               	movlw	0
  7662     0046  3DEF               	addwfc	(_inputStage+1)^(0+128),f
  7663     0047                     i1l3304:
  7664                           
  7665                           ;motorMain.c: 434:         PIR3bits.RCIF =0;
  7666     0047  002E               	movlb	14	; select bank14
  7667     0048  128F               	bcf	15,5	;volatile
  7668     0049                     i1l3306:
  7669                           
  7670                           ;motorMain.c: 437:     if(PIR3bits.TXIF == 1){
  7671     0049  1E0F               	btfss	15,4	;volatile
  7672     004A  284C               	goto	u249_21
  7673     004B  284D               	goto	u249_20
  7674     004C                     u249_21:
  7675     004C  2887               	goto	i1l458
  7676     004D                     u249_20:
  7677     004D                     i1l3308:
  7678                           
  7679                           ;motorMain.c: 438:         if(currentCommand.sendIt >= currentCommand.sendLimit){
  7680     004D  0020               	movlb	0	; select bank0
  7681     004E  0858               	movf	_currentCommand+3,w
  7682     004F  3A80               	xorlw	128
  7683     0050  00F5               	movwf	??_myFunction
  7684     0051  0856               	movf	_currentCommand+1,w
  7685     0052  3A80               	xorlw	128
  7686     0053  0275               	subwf	??_myFunction,w
  7687     0054  1D03               	skipz
  7688     0055  2858               	goto	u250_25
  7689     0056  0855               	movf	_currentCommand,w
  7690     0057  0257               	subwf	_currentCommand+2,w
  7691     0058                     u250_25:
  7692     0058  1C03               	skipc
  7693     0059  285B               	goto	u250_21
  7694     005A  285C               	goto	u250_20
  7695     005B                     u250_21:
  7696     005B  2870               	goto	i1l3316
  7697     005C                     u250_20:
  7698     005C                     i1l3310:
  7699                           
  7700                           ;motorMain.c: 439:             PIE3bits.TXIE = 0;
  7701     005C  002E               	movlb	14	; select bank14
  7702     005D  1219               	bcf	25,4	;volatile
  7703     005E                     i1l3312:
  7704                           
  7705                           ;motorMain.c: 440:             if(currentCommand.receiveLimit <= 0){
  7706     005E  0020               	movlb	0	; select bank0
  7707     005F  0860               	movf	_currentCommand+11,w
  7708     0060  3A80               	xorlw	128
  7709     0061  00F5               	movwf	??_myFunction
  7710     0062  3080               	movlw	128
  7711     0063  0275               	subwf	??_myFunction,w
  7712     0064  1D03               	skipz
  7713     0065  2868               	goto	u251_25
  7714     0066  3001               	movlw	1
  7715     0067  025F               	subwf	_currentCommand+10,w
  7716     0068                     u251_25:
  7717     0068  1803               	skipnc
  7718     0069  286B               	goto	u251_21
  7719     006A  286C               	goto	u251_20
  7720     006B                     u251_21:
  7721     006B  2885               	goto	i1l3320
  7722     006C                     u251_20:
  7723     006C                     i1l3314:
  7724                           
  7725                           ;motorMain.c: 441:                 currentCommand.done = 1;
  7726     006C  0020               	movlb	0	; select bank0
  7727     006D  01E3               	clrf	_currentCommand+14
  7728     006E  0AE3               	incf	_currentCommand+14,f
  7729     006F  2885               	goto	i1l3320
  7730     0070                     i1l3316:
  7731                           
  7732                           ;motorMain.c: 445:             TX1REGbits.TX1REG = currentCommand.toSend[currentCommand.
      +                          sendIt];
  7733     0070  3002               	movlw	2
  7734     0071  3E55               	addlw	(low (_currentCommand| 0))& (0+255)
  7735     0072  0086               	movwf	6
  7736     0073  0187               	clrf	7
  7737     0074  3F40               	moviw [0]fsr1
  7738     0075  0020               	movlb	0	; select bank0
  7739     0076  075B               	addwf	low ((_currentCommand| 0+6)),w
  7740     0077  0084               	movwf	4
  7741     0078  3F41               	moviw [1]fsr1
  7742     0079  3D5C               	addwfc	(low ((_currentCommand| 0+6))+1),w
  7743     007A  0085               	movwf	5
  7744     007B  0800               	movf	0,w
  7745     007C  0022               	movlb	2	; select bank2
  7746     007D  009A               	movwf	26	;volatile
  7747     007E                     i1l3318:
  7748                           
  7749                           ;motorMain.c: 446:             currentCommand.sendIt = currentCommand.sendIt + 1;
  7750     007E  0020               	movlb	0	; select bank0
  7751     007F  0857               	movf	_currentCommand+2,w
  7752     0080  3E01               	addlw	1
  7753     0081  00D7               	movwf	_currentCommand+2
  7754     0082  3000               	movlw	0
  7755     0083  3D58               	addwfc	_currentCommand+3,w
  7756     0084  00D8               	movwf	_currentCommand+3
  7757     0085                     i1l3320:
  7758                           
  7759                           ;motorMain.c: 448:         PIR3bits.TXIF = 0;
  7760     0085  002E               	movlb	14	; select bank14
  7761     0086  120F               	bcf	15,4	;volatile
  7762     0087                     i1l458:
  7763     0087  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7764     0088  0009               	retfie
  7765     0089                     __end_of_myFunction:
  7766                           
  7767                           	psect	text42
  7768     0476                     __ptext42:	
  7769 ;; *************** function _GetControllerInput *****************
  7770 ;; Defined at:
  7771 ;;		line 234 in file "motorMain.c"
  7772 ;; Parameters:    Size  Location     Type
  7773 ;;  input           2    0[COMMON] int 
  7774 ;; Auto vars:     Size  Location     Type
  7775 ;;		None
  7776 ;; Return value:  Size  Location     Type
  7777 ;;                  1    wreg      void 
  7778 ;; Registers used:
  7779 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7780 ;; Tracked objects:
  7781 ;;		On entry : 0/0
  7782 ;;		On exit  : 0/0
  7783 ;;		Unchanged: 0/0
  7784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7785 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7787 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7788 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7789 ;;Total ram usage:        5 bytes
  7790 ;; Hardware stack levels used: 1
  7791 ;; This function calls:
  7792 ;;		Nothing
  7793 ;; This function is called by:
  7794 ;;		_myFunction
  7795 ;; This function uses a non-reentrant model
  7796 ;;
  7797                           
  7798     0476                     _GetControllerInput:	
  7799                           ;psect for function _GetControllerInput
  7800                           
  7801     0476                     i1l3232:	
  7802                           ;incstack = 0
  7803                           ; Regs used in _GetControllerInput: [wreg-fsr1h+status,2+status,0]
  7804                           
  7805                           
  7806                           ;motorMain.c: 235:     if(currentCommand.receiveIt <0 ){
  7807     0476  3008               	movlw	8
  7808     0477  3E55               	addlw	(low (_currentCommand| 0))& (0+255)
  7809     0478  0086               	movwf	6
  7810     0479  0187               	clrf	7
  7811     047A  3141               	addfsr 1,1
  7812     047B  1F81               	btfss	1,7
  7813     047C  2C7E               	goto	u244_21
  7814     047D  2C7F               	goto	u244_20
  7815     047E                     u244_21:
  7816     047E  2D47               	goto	i1l3280
  7817     047F                     u244_20:
  7818     047F  2D8B               	goto	i1l375
  7819     0480                     i1l3236:
  7820     0480  0871               	movf	GetControllerInput@input+1,w
  7821     0481  0021               	movlb	1	; select bank1
  7822     0482  00E9               	movwf	((_controls+1)^(0+128)+20)
  7823     0483  0870               	movf	GetControllerInput@input,w
  7824     0484  00E8               	movwf	(_controls^(0+128)+20)
  7825     0485  2D8B               	goto	i1l375
  7826     0486                     i1l3238:
  7827     0486  3014               	movlw	20
  7828     0487  3ED4               	addlw	(low (_controls| 0))& (0+255)
  7829     0488  0086               	movwf	6
  7830     0489  0187               	clrf	7
  7831     048A  0871               	movf	GetControllerInput@input+1,w
  7832     048B  00F3               	movwf	??_GetControllerInput+1
  7833     048C  0870               	movf	GetControllerInput@input,w
  7834     048D  00F2               	movwf	??_GetControllerInput
  7835     048E  0872               	movf	??_GetControllerInput,w
  7836     048F  00F3               	movwf	??_GetControllerInput+1
  7837     0490  01F2               	clrf	??_GetControllerInput
  7838     0491  3F40               	moviw [0]fsr1
  7839     0492  0772               	addwf	??_GetControllerInput,w
  7840     0493  0021               	movlb	1	; select bank1
  7841     0494  00D4               	movwf	_controls^(0+128)
  7842     0495  3F41               	moviw [1]fsr1
  7843     0496  3D73               	addwfc	??_GetControllerInput+1,w
  7844     0497  00D5               	movwf	(_controls^(0+128)+1)
  7845     0498  2D8B               	goto	i1l375
  7846     0499                     i1l3242:
  7847     0499  3014               	movlw	20
  7848     049A  3ED4               	addlw	(low (_controls| 0))& (0+255)
  7849     049B  0086               	movwf	6
  7850     049C  0187               	clrf	7
  7851     049D  0871               	movf	GetControllerInput@input+1,w
  7852     049E  00F3               	movwf	??_GetControllerInput+1
  7853     049F  0870               	movf	GetControllerInput@input,w
  7854     04A0  00F2               	movwf	??_GetControllerInput
  7855     04A1  0872               	movf	??_GetControllerInput,w
  7856     04A2  00F3               	movwf	??_GetControllerInput+1
  7857     04A3  01F2               	clrf	??_GetControllerInput
  7858     04A4  3F40               	moviw [0]fsr1
  7859     04A5  0772               	addwf	??_GetControllerInput,w
  7860     04A6  0021               	movlb	1	; select bank1
  7861     04A7  00D6               	movwf	(_controls^(0+128)+2)
  7862     04A8  3F41               	moviw [1]fsr1
  7863     04A9  3D73               	addwfc	??_GetControllerInput+1,w
  7864     04AA  00D7               	movwf	(_controls^(0+128)+3)
  7865     04AB  2D8B               	goto	i1l375
  7866     04AC                     i1l3246:
  7867     04AC  3014               	movlw	20
  7868     04AD  3ED4               	addlw	(low (_controls| 0))& (0+255)
  7869     04AE  0086               	movwf	6
  7870     04AF  0187               	clrf	7
  7871     04B0  0871               	movf	GetControllerInput@input+1,w
  7872     04B1  00F3               	movwf	??_GetControllerInput+1
  7873     04B2  0870               	movf	GetControllerInput@input,w
  7874     04B3  00F2               	movwf	??_GetControllerInput
  7875     04B4  0872               	movf	??_GetControllerInput,w
  7876     04B5  00F3               	movwf	??_GetControllerInput+1
  7877     04B6  01F2               	clrf	??_GetControllerInput
  7878     04B7  3F40               	moviw [0]fsr1
  7879     04B8  0772               	addwf	??_GetControllerInput,w
  7880     04B9  0021               	movlb	1	; select bank1
  7881     04BA  00D8               	movwf	(_controls^(0+128)+4)
  7882     04BB  3F41               	moviw [1]fsr1
  7883     04BC  3D73               	addwfc	??_GetControllerInput+1,w
  7884     04BD  00D9               	movwf	(_controls^(0+128)+5)
  7885     04BE  2D8B               	goto	i1l375
  7886     04BF                     i1l3250:
  7887     04BF  3014               	movlw	20
  7888     04C0  3ED4               	addlw	(low (_controls| 0))& (0+255)
  7889     04C1  0086               	movwf	6
  7890     04C2  0187               	clrf	7
  7891     04C3  0871               	movf	GetControllerInput@input+1,w
  7892     04C4  00F3               	movwf	??_GetControllerInput+1
  7893     04C5  0870               	movf	GetControllerInput@input,w
  7894     04C6  00F2               	movwf	??_GetControllerInput
  7895     04C7  0872               	movf	??_GetControllerInput,w
  7896     04C8  00F3               	movwf	??_GetControllerInput+1
  7897     04C9  01F2               	clrf	??_GetControllerInput
  7898     04CA  3F40               	moviw [0]fsr1
  7899     04CB  0772               	addwf	??_GetControllerInput,w
  7900     04CC  0021               	movlb	1	; select bank1
  7901     04CD  00DA               	movwf	(_controls^(0+128)+6)
  7902     04CE  3F41               	moviw [1]fsr1
  7903     04CF  3D73               	addwfc	??_GetControllerInput+1,w
  7904     04D0  00DB               	movwf	(_controls^(0+128)+7)
  7905     04D1  2D8B               	goto	i1l375
  7906     04D2                     i1l3254:
  7907     04D2  3014               	movlw	20
  7908     04D3  3ED4               	addlw	(low (_controls| 0))& (0+255)
  7909     04D4  0086               	movwf	6
  7910     04D5  0187               	clrf	7
  7911     04D6  0871               	movf	GetControllerInput@input+1,w
  7912     04D7  00F3               	movwf	??_GetControllerInput+1
  7913     04D8  0870               	movf	GetControllerInput@input,w
  7914     04D9  00F2               	movwf	??_GetControllerInput
  7915     04DA  0872               	movf	??_GetControllerInput,w
  7916     04DB  00F3               	movwf	??_GetControllerInput+1
  7917     04DC  01F2               	clrf	??_GetControllerInput
  7918     04DD  3F40               	moviw [0]fsr1
  7919     04DE  0772               	addwf	??_GetControllerInput,w
  7920     04DF  0021               	movlb	1	; select bank1
  7921     04E0  00DC               	movwf	(_controls^(0+128)+8)
  7922     04E1  3F41               	moviw [1]fsr1
  7923     04E2  3D73               	addwfc	??_GetControllerInput+1,w
  7924     04E3  00DD               	movwf	(_controls^(0+128)+9)
  7925     04E4  2D8B               	goto	i1l375
  7926     04E5                     i1l3258:
  7927     04E5  3014               	movlw	20
  7928     04E6  3ED4               	addlw	(low (_controls| 0))& (0+255)
  7929     04E7  0086               	movwf	6
  7930     04E8  0187               	clrf	7
  7931     04E9  0871               	movf	GetControllerInput@input+1,w
  7932     04EA  00F3               	movwf	??_GetControllerInput+1
  7933     04EB  0870               	movf	GetControllerInput@input,w
  7934     04EC  00F2               	movwf	??_GetControllerInput
  7935     04ED  0872               	movf	??_GetControllerInput,w
  7936     04EE  00F3               	movwf	??_GetControllerInput+1
  7937     04EF  01F2               	clrf	??_GetControllerInput
  7938     04F0  3F40               	moviw [0]fsr1
  7939     04F1  0772               	addwf	??_GetControllerInput,w
  7940     04F2  0021               	movlb	1	; select bank1
  7941     04F3  00DE               	movwf	(_controls^(0+128)+10)
  7942     04F4  3F41               	moviw [1]fsr1
  7943     04F5  3D73               	addwfc	??_GetControllerInput+1,w
  7944     04F6  00DF               	movwf	(_controls^(0+128)+11)
  7945     04F7  2D8B               	goto	i1l375
  7946     04F8                     i1l3262:
  7947     04F8  3014               	movlw	20
  7948     04F9  3ED4               	addlw	(low (_controls| 0))& (0+255)
  7949     04FA  0086               	movwf	6
  7950     04FB  0187               	clrf	7
  7951     04FC  0871               	movf	GetControllerInput@input+1,w
  7952     04FD  00F3               	movwf	??_GetControllerInput+1
  7953     04FE  0870               	movf	GetControllerInput@input,w
  7954     04FF  00F2               	movwf	??_GetControllerInput
  7955     0500  0872               	movf	??_GetControllerInput,w
  7956     0501  00F3               	movwf	??_GetControllerInput+1
  7957     0502  01F2               	clrf	??_GetControllerInput
  7958     0503  3F40               	moviw [0]fsr1
  7959     0504  0772               	addwf	??_GetControllerInput,w
  7960     0505  0021               	movlb	1	; select bank1
  7961     0506  00E0               	movwf	(_controls^(0+128)+12)
  7962     0507  3F41               	moviw [1]fsr1
  7963     0508  3D73               	addwfc	??_GetControllerInput+1,w
  7964     0509  00E1               	movwf	(_controls^(0+128)+13)
  7965     050A  2D8B               	goto	i1l375
  7966     050B                     i1l3266:
  7967     050B  3014               	movlw	20
  7968     050C  3ED4               	addlw	(low (_controls| 0))& (0+255)
  7969     050D  0086               	movwf	6
  7970     050E  0187               	clrf	7
  7971     050F  0871               	movf	GetControllerInput@input+1,w
  7972     0510  00F3               	movwf	??_GetControllerInput+1
  7973     0511  0870               	movf	GetControllerInput@input,w
  7974     0512  00F2               	movwf	??_GetControllerInput
  7975     0513  0872               	movf	??_GetControllerInput,w
  7976     0514  00F3               	movwf	??_GetControllerInput+1
  7977     0515  01F2               	clrf	??_GetControllerInput
  7978     0516  3F40               	moviw [0]fsr1
  7979     0517  0772               	addwf	??_GetControllerInput,w
  7980     0518  0021               	movlb	1	; select bank1
  7981     0519  00E2               	movwf	(_controls^(0+128)+14)
  7982     051A  3F41               	moviw [1]fsr1
  7983     051B  3D73               	addwfc	??_GetControllerInput+1,w
  7984     051C  00E3               	movwf	(_controls^(0+128)+15)
  7985     051D  2D8B               	goto	i1l375
  7986     051E                     i1l3270:
  7987     051E  3014               	movlw	20
  7988     051F  3ED4               	addlw	(low (_controls| 0))& (0+255)
  7989     0520  0086               	movwf	6
  7990     0521  0187               	clrf	7
  7991     0522  0871               	movf	GetControllerInput@input+1,w
  7992     0523  00F3               	movwf	??_GetControllerInput+1
  7993     0524  0870               	movf	GetControllerInput@input,w
  7994     0525  00F2               	movwf	??_GetControllerInput
  7995     0526  0872               	movf	??_GetControllerInput,w
  7996     0527  00F3               	movwf	??_GetControllerInput+1
  7997     0528  01F2               	clrf	??_GetControllerInput
  7998     0529  3F40               	moviw [0]fsr1
  7999     052A  0772               	addwf	??_GetControllerInput,w
  8000     052B  0021               	movlb	1	; select bank1
  8001     052C  00E4               	movwf	(_controls^(0+128)+16)
  8002     052D  3F41               	moviw [1]fsr1
  8003     052E  3D73               	addwfc	??_GetControllerInput+1,w
  8004     052F  00E5               	movwf	(_controls^(0+128)+17)
  8005     0530  2D8B               	goto	i1l375
  8006     0531                     i1l3274:
  8007     0531  3014               	movlw	20
  8008     0532  3ED4               	addlw	(low (_controls| 0))& (0+255)
  8009     0533  0086               	movwf	6
  8010     0534  0187               	clrf	7
  8011     0535  0871               	movf	GetControllerInput@input+1,w
  8012     0536  00F3               	movwf	??_GetControllerInput+1
  8013     0537  0870               	movf	GetControllerInput@input,w
  8014     0538  00F2               	movwf	??_GetControllerInput
  8015     0539  0872               	movf	??_GetControllerInput,w
  8016     053A  00F3               	movwf	??_GetControllerInput+1
  8017     053B  01F2               	clrf	??_GetControllerInput
  8018     053C  3F40               	moviw [0]fsr1
  8019     053D  0772               	addwf	??_GetControllerInput,w
  8020     053E  0021               	movlb	1	; select bank1
  8021     053F  00E6               	movwf	(_controls^(0+128)+18)
  8022     0540  3F41               	moviw [1]fsr1
  8023     0541  3D73               	addwfc	??_GetControllerInput+1,w
  8024     0542  00E7               	movwf	(_controls^(0+128)+19)
  8025     0543                     i1l3276:
  8026     0543  0020               	movlb	0	; select bank0
  8027     0544  01E4               	clrf	_currentInput
  8028     0545  01E5               	clrf	_currentInput+1
  8029     0546  2D8B               	goto	i1l375
  8030     0547                     i1l3280:
  8031                           
  8032                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8033                           ; Switch size 1, requested type "simple"
  8034                           ; Number of cases is 1, Range of values is 0 to 0
  8035                           ; switch strategies available:
  8036                           ; Name         Instructions Cycles
  8037                           ; simple_byte            4     3 (average)
  8038                           ; direct_byte            8     6 (fixed)
  8039                           ; jumptable            260     6 (fixed)
  8040                           ;	Chosen strategy is simple_byte
  8041     0547  0020               	movlb	0	; select bank0
  8042     0548  085E               	movf	_currentCommand+9,w
  8043     0549  3A00               	xorlw	0	; case 0
  8044     054A  1903               	skipnz
  8045     054B  2D4D               	goto	i1l3396
  8046     054C  2D8B               	goto	i1l375
  8047     054D                     i1l3396:
  8048                           
  8049                           ; Switch size 1, requested type "simple"
  8050                           ; Number of cases is 20, Range of values is 6 to 25
  8051                           ; switch strategies available:
  8052                           ; Name         Instructions Cycles
  8053                           ; direct_byte           49     9 (fixed)
  8054                           ; simple_byte           61    31 (average)
  8055                           ; jumptable            263     9 (fixed)
  8056                           ;	Chosen strategy is simple_byte
  8057     054D  085D               	movf	_currentCommand+8,w
  8058     054E  3A06               	xorlw	6	; case 6
  8059     054F  1903               	skipnz
  8060     0550  2C80               	goto	i1l3236
  8061     0551  3A01               	xorlw	1	; case 7
  8062     0552  1903               	skipnz
  8063     0553  2C86               	goto	i1l3238
  8064     0554  3A0F               	xorlw	15	; case 8
  8065     0555  1903               	skipnz
  8066     0556  2C80               	goto	i1l3236
  8067     0557  3A01               	xorlw	1	; case 9
  8068     0558  1903               	skipnz
  8069     0559  2C99               	goto	i1l3242
  8070     055A  3A03               	xorlw	3	; case 10
  8071     055B  1903               	skipnz
  8072     055C  2C80               	goto	i1l3236
  8073     055D  3A01               	xorlw	1	; case 11
  8074     055E  1903               	skipnz
  8075     055F  2CAC               	goto	i1l3246
  8076     0560  3A07               	xorlw	7	; case 12
  8077     0561  1903               	skipnz
  8078     0562  2C80               	goto	i1l3236
  8079     0563  3A01               	xorlw	1	; case 13
  8080     0564  1903               	skipnz
  8081     0565  2CBF               	goto	i1l3250
  8082     0566  3A03               	xorlw	3	; case 14
  8083     0567  1903               	skipnz
  8084     0568  2C80               	goto	i1l3236
  8085     0569  3A01               	xorlw	1	; case 15
  8086     056A  1903               	skipnz
  8087     056B  2CD2               	goto	i1l3254
  8088     056C  3A1F               	xorlw	31	; case 16
  8089     056D  1903               	skipnz
  8090     056E  2C80               	goto	i1l3236
  8091     056F  3A01               	xorlw	1	; case 17
  8092     0570  1903               	skipnz
  8093     0571  2CE5               	goto	i1l3258
  8094     0572  3A03               	xorlw	3	; case 18
  8095     0573  1903               	skipnz
  8096     0574  2C80               	goto	i1l3236
  8097     0575  3A01               	xorlw	1	; case 19
  8098     0576  1903               	skipnz
  8099     0577  2CF8               	goto	i1l3262
  8100     0578  3A07               	xorlw	7	; case 20
  8101     0579  1903               	skipnz
  8102     057A  2C80               	goto	i1l3236
  8103     057B  3A01               	xorlw	1	; case 21
  8104     057C  1903               	skipnz
  8105     057D  2D0B               	goto	i1l3266
  8106     057E  3A03               	xorlw	3	; case 22
  8107     057F  1903               	skipnz
  8108     0580  2C80               	goto	i1l3236
  8109     0581  3A01               	xorlw	1	; case 23
  8110     0582  1903               	skipnz
  8111     0583  2D1E               	goto	i1l3270
  8112     0584  3A0F               	xorlw	15	; case 24
  8113     0585  1903               	skipnz
  8114     0586  2C80               	goto	i1l3236
  8115     0587  3A01               	xorlw	1	; case 25
  8116     0588  1903               	skipnz
  8117     0589  2D31               	goto	i1l3274
  8118     058A  2D8B               	goto	i1l375
  8119     058B                     i1l375:
  8120     058B  0008               	return
  8121     058C                     __end_of_GetControllerInput:
  8122     007E                     btemp	set	126	;btemp
  8123     007E                     int$flags	set	126
  8124     007E                     wtemp0	set	126
  8125                           
  8126                           	psect	config
  8127                           
  8128                           ;Config register CONFIG1 @ 0x8007
  8129                           ;	External Oscillator mode selection bits
  8130                           ;	FEXTOSC = ECH, EC above 8MHz; PFM set to high power
  8131                           ;	Power-up default value for COSC bits
  8132                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
  8133                           ;	Clock Out Enable bit
  8134                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  8135                           ;	Clock Switch Enable bit
  8136                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  8137                           ;	Fail-Safe Clock Monitor Enable bit
  8138                           ;	FCMEN = OFF, FSCM timer disabled
  8139     8007                     	org	32775
  8140     8007  1F8F               	dw	8079
  8141                           
  8142                           ;Config register CONFIG2 @ 0x8008
  8143                           ;	Master Clear Enable bit
  8144                           ;	MCLRE = ON, MCLR pin is Master Clear function
  8145                           ;	Power-up Timer Enable bit
  8146                           ;	PWRTE = OFF, PWRT disabled
  8147                           ;	Low-Power BOR enable bit
  8148                           ;	LPBOREN = OFF, ULPBOR disabled
  8149                           ;	Brown-out reset enable bits
  8150                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  8151                           ;	Brown-out Reset Voltage Selection
  8152                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  8153                           ;	Zero-cross detect disable
  8154                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  8155                           ;	Peripheral Pin Select one-way control
  8156                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  8157                           ;	Stack Overflow/Underflow Reset Enable bit
  8158                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  8159                           ;	Background Debugger
  8160                           ;	DEBUG = 0x1, unprogrammed default
  8161     8008                     	org	32776
  8162     8008  3FFF               	dw	16383
  8163                           
  8164                           ;Config register CONFIG3 @ 0x8009
  8165                           ;	WDT Period Select bits
  8166                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8167                           ;	WDT operating mode
  8168                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  8169                           ;	WDT Window Select bits
  8170                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  8171                           ;	WDT input clock selector
  8172                           ;	WDTCCS = SC, Software Control
  8173     8009                     	org	32777
  8174     8009  3F9F               	dw	16287
  8175                           
  8176                           ;Config register CONFIG4 @ 0x800A
  8177                           ;	UserNVM self-write protection bits
  8178                           ;	WRT = OFF, Write protection off
  8179                           ;	Scanner Enable bit
  8180                           ;	SCANE = available, Scanner module is available for use
  8181                           ;	Low Voltage Programming Enable bit
  8182                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  8183     800A                     	org	32778
  8184     800A  3FFF               	dw	16383
  8185                           
  8186                           ;Config register CONFIG5 @ 0x800B
  8187                           ;	UserNVM Program memory code protection bit
  8188                           ;	CP = OFF, Program Memory code protection disabled
  8189                           ;	DataNVM code protection bit
  8190                           ;	CPD = OFF, Data EEPROM code protection disabled
  8191     800B                     	org	32779
  8192     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    2
    Data        79
    BSS         97
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80     53      79
    BANK1            80      0      80
    BANK2            80      0      66
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ColorSensor@color	PTR unsigned char  size(1) Largest target is 1
		 -> color(BANK0[1]), 

    ColorSensor@colors	PTR struct colorScheme size(1) Largest target is 12
		 -> colors(BANK2[12]), 

    ColorSensor@I2CStage	PTR int  size(1) Largest target is 2
		 -> I2CStage(BANK0[2]), 

    ColorSensor@newI2CMessage	PTR unsigned char  size(1) Largest target is 1
		 -> newI2CMessage(BANK0[1]), 

    Command$toSend	PTR unsigned char  size(2) Largest target is 10
		 -> Break(BANK2[10]), GetUserDataCommand(BANK1[6]), MoveBackwardCommand(BANK1[10]), MoveForwardCommand(BANK1[10]), 
		 -> TurnLeftCommand(BANK1[10]), TurnRightCommand(BANK1[10]), 

    currentCommand$toSend	PTR unsigned char  size(2) Largest target is 10
		 -> Break(BANK2[10]), GetUserDataCommand(BANK1[6]), MoveBackwardCommand(BANK1[10]), MoveForwardCommand(BANK1[10]), 
		 -> TurnLeftCommand(BANK1[10]), TurnRightCommand(BANK1[10]), 

    GetValueAndEndI2C@colors	PTR struct colorScheme size(1) Largest target is 12
		 -> colors(BANK2[12]), 

    IncrementColorStage@colors	PTR struct colorScheme size(1) Largest target is 12
		 -> colors(BANK2[12]), 

    LoadTemp@colors	PTR struct colorScheme size(1) Largest target is 12
		 -> colors(BANK2[12]), 

    ReadColorReady@colors	PTR struct colorScheme size(1) Largest target is 12
		 -> colors(BANK2[12]), 

    Reset@colors	PTR struct colorScheme size(1) Largest target is 12
		 -> colors(BANK2[12]), 

    S328command$toSend	PTR unsigned char  size(2) Largest target is 10
		 -> Break(BANK2[10]), GetUserDataCommand(BANK1[6]), MoveBackwardCommand(BANK1[10]), MoveForwardCommand(BANK1[10]), 
		 -> TurnLeftCommand(BANK1[10]), TurnRightCommand(BANK1[10]), 

    UpdateColors@colors	PTR struct colorScheme size(1) Largest target is 12
		 -> colors(BANK2[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myFunction in COMMON

    _myFunction->_GetControllerInput

Critical Paths under _main in BANK0

    _main->_drive
    _drive->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _SetUpColorSensor->_SetUp
    _ColorSensor->_UpdateColors
    _UpdateColors->___awmod
    _GetValueAndEndI2C->_ReadColorReady
    _ReadColorReady->_IncrementColorStage

Critical Paths under _myFunction in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myFunction in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myFunction in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myFunction in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myFunction in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myFunction in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myFunction in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myFunction in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myFunction in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myFunction in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myFunction in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myFunction in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myFunction in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7734
                       _ActivatePump
                        _ColorSensor
              _CreateControlsCommand
                        _MovePumpArm
                   _SetUpColorSensor
                          _SetUpPump
                       _SetUpPumpArm
                              _drive
 ---------------------------------------------------------------------------------
 (1) _drive                                                3     3      0    3689
                                             50 BANK0      3     3      0
                        _CreateBreak
              _CreateControlsCommand
         _CreateMoveBackwardCommmand
          _CreateMoveForwardCommmand
             _CreateTurnLeftCommmand
            _CreateTurnRightCommmand
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                             40 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2417
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _CreateTurnRightCommmand                              2     0      2     120
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CreateTurnLeftCommmand                               2     0      2     120
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CreateMoveForwardCommmand                            2     0      2     120
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CreateMoveBackwardCommmand                           2     0      2     120
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CreateControlsCommand                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CreateBreak                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetUpPumpArm                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetUpPump                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetUpColorSensor                                     4     4      0      46
                                              6 BANK0      4     4      0
                              _SetUp
                           _SetUpI2C
 ---------------------------------------------------------------------------------
 (2) _SetUpI2C                                             0     0      0       0
                       _SetUpI2CPins
                      _SetUpIC2Clock
 ---------------------------------------------------------------------------------
 (3) _SetUpIC2Clock                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SetUpI2CPins                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SetUp                                                6     4      2      23
                                              0 BANK0      6     4      2
                 _EndIC2Transmission
                      _RepeatedStart
               _StartIC2Transmission
                   _StartReadRequest
                  _StartWriteRequest
 ---------------------------------------------------------------------------------
 (3) _StartWriteRequest                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _StartReadRequest                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _StartIC2Transmission                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RepeatedStart                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EndIC2Transmission                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MovePumpArm                                          2     0      2     196
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ColorSensor                                          9     6      3    3629
                                             12 BANK0      9     6      3
                       _UpdateColors
 ---------------------------------------------------------------------------------
 (2) _UpdateColors                                         5     3      2    2906
                                              7 BANK0      5     3      2
                  _GetValueAndEndI2C
                     _ReadAddressI2C
                            _ReadI2C
                          _RepeatI2C
               _SelectColourRegister
                           _StartI2C
                           _WriteI2C
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     448
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _StartI2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SelectColourRegister                                 3     1      2     130
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _RepeatI2C                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ReadI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ReadAddressI2C                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _GetValueAndEndI2C                                    2     2      0    2131
                                              3 BANK0      2     2      0
                             _EndI2C
                _IncrementColorStage
                           _LoadTemp
                     _ReadColorReady
                              _Reset
 ---------------------------------------------------------------------------------
 (4) _Reset                                                1     1      0      99
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ReadColorReady                                       2     1      1     528
                                              1 BANK0      2     1      1
                _IncrementColorStage
 ---------------------------------------------------------------------------------
 (5) _IncrementColorStage                                  1     1      0     308
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _LoadTemp                                             2     1      1     480
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (4) _EndI2C                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ActivatePump                                         2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _myFunction                                           4     4      0     744
                                              5 COMMON     4     4      0
                 _GetControllerInput
 ---------------------------------------------------------------------------------
 (7) _GetControllerInput                                   5     3      2     710
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ActivatePump
   _ColorSensor
     _UpdateColors
       _GetValueAndEndI2C
         _EndI2C
         _IncrementColorStage
         _LoadTemp
         _ReadColorReady
           _IncrementColorStage
         _Reset
       _ReadAddressI2C
       _ReadI2C
       _RepeatI2C
       _SelectColourRegister
       _StartI2C
       _WriteI2C
       ___awmod
   _CreateControlsCommand
   _MovePumpArm
   _SetUpColorSensor
     _SetUp
       _EndIC2Transmission
       _RepeatedStart
       _StartIC2Transmission
       _StartReadRequest
       _StartWriteRequest
     _SetUpI2C
       _SetUpI2CPins
       _SetUpIC2Clock
   _SetUpPump
   _SetUpPumpArm
   _drive
     _CreateBreak
     _CreateControlsCommand
     _CreateMoveBackwardCommmand
     _CreateMoveForwardCommmand
     _CreateTurnLeftCommmand
     _CreateTurnRightCommmand
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl

 _myFunction (ROOT)
   _GetControllerInput

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     35      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      42       9       82.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      EE      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      EE      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Mar 31 15:17:02 2024

               __Umul8_16@word_mpld 0026                                 l111 0C03  
                               l114 0B23                                 l141 0BBE  
                               l117 0B71                                 l222 0D8F  
                               l150 0BAE                                 l231 0B19  
                               l303 069C                                 l143 0BC3  
                               l152 0BB3                                 l144 0BC5  
                               l225 0BEC                                 l153 0BB5  
                               l234 0B38                                 l162 0B4D  
                               l170 07FE                                 l138 0BB9  
                               l410 0475                                 l243 0B1C  
                               l171 07FF                                 l147 0BA9  
                               l252 0B5D                                 l228 0B2C  
                               l164 0B52                                 l156 0B62  
                               l180 0EAE                                 l237 0B32  
                               l165 0B53                                 l413 0CF3  
                               l270 074B                                 l246 0B1F  
                               l158 0B66                                 l174 0E9F  
                               l422 0C90                                 l159 0B67  
                               l191 0ECD                                 l183 0EB3  
                               l431 0B85                                 l256 0C37  
                               l440 0C52                                 l168 07F9  
                               l192 0ED7                                 l416 0CD2  
                               l249 0BA5                                 l185 0EB8  
                               l177 0EA4                                 l425 0C1C  
                               l282 0E3C                                 l194 0EDC  
                               l186 0EC3                                 l434 0B7B  
                               l443 0B93                                 l179 0EA9  
                               l419 0CB1                                 l196 0EFA  
                               l428 0C6F                                 l445 0B95  
                               l189 0EC8                                 l293 0E95  
                               l297 069C                                 l811 0F56  
                               l804 0F6B                                 l814 0F6B  
                               l776 0DE3                                 _RED 006D  
     __end_of_CreateControlsCommand 0C70                _StartIC2Transmission 0B5E  
                      ___awmod@sign 0026                                 wreg 0009  
        ?_CreateMoveForwardCommmand 0020                        ___flmul@aexp 0040  
                      ___flmul@bexp 0041                        ___flmul@sign 003B  
                      ___flmul@temp 0046                        ___flmul@prod 0042  
            GetValueAndEndI2C@value 0023        __end_of_SelectColourRegister 0D90  
                      _BAUD1CONbits 011F                        ___fltol@exp1 0051  
                              l1013 0291                                l1007 0311  
                              l1026 0D07                                l1019 0305  
                              l1051 076F                                l1028 0D17  
                              l1053 07F6                                l2200 0B4B  
                              l1064 07C2                                l1065 07CE  
                              l1057 07A8                                l2210 0D58  
                              l2202 0D4C                                l2220 0D67  
                              l2212 0D5B                                l2204 0D4F  
                              l2300 0DA6                                l3100 0FC3  
                              l2214 0D5E                                l2206 0D52  
                              l2310 0DBC                                l2302 0DAC  
                              l3102 0FCD                                l2160 0B17  
                              l2240 0B2F                                l2216 0D61  
                              l2208 0D55                                l2224 0D6A  
                              l2232 0B28                                l2320 0DDA  
                              l2312 0DC6                                l2304 0DAF  
                              l3120 0FF0                                l3104 0FD9  
                              l2162 0B56                                l2170 0C33  
                              l2250 06AB                                l2242 0B1A  
                              l2218 0D64                                l2226 0D8C  
                              l2234 0B33                                l2322 0DDF  
                              l2314 0DCA                                l2306 0DB4  
                              l2410 0C5C                                l2330 0CFF  
                              l3122 0FF6                                l3106 0FEA  
                              l2156 0B98                                l2164 0C1F  
                              l2260 06CF                                l2252 06B1  
                              l2244 0B1D                                l2236 0B35  
                              l2316 0DCF                                l2308 0DB8  
                              l2180 0BFD                                l2172 0BED  
                              l2340 0B68                                l2420 0C6C  
                              l2412 0C5E                                l2332 0D03  
                              l2500 0F20                                l3124 0FFA  
                              l3060 0F81                                l2166 0C22  
                              l2158 0BD9                                l2270 06F4  
                              l2262 06D4                                l2254 06B7  
                              l2246 069F                                l2238 0B2D  
                              l2318 0DD5                                l2350 0EAB  
                              l2182 0BFE                                l2174 0BF6  
                              l2190 0B20                                l2342 0B6B  
                              l2422 0C6D                                l2414 0C62  
                              l2430 0CE5                                l2334 0D0E  
                              l2326 0CF6                                l2502 0F28  
                              l3118 0FEA                                l3070 0F8E  
                              l3062 0F82                                l3054 0F6C  
                              l2168 0C29                                l2280 0721  
                              l2272 0702                                l2264 06E3  
                              l2256 06C4                                l2248 06A4  
                              l2192 0B5E                                l2360 0ED5  
                              l2352 0EBA                                l2184 0C00  
                              l2176 0BF9                                l2344 0B6E  
                              l2416 0C66                                l2408 0C53  
                              l2440 0CB7                                l2432 0CE8  
                              l2424 0CD3                                l2336 0D13  
                              l2328 0CF8                                l2600 01FE  
                              l2520 0F4D                                l2512 0F36  
                              l2504 0F2A                                l3080 0F99  
                              l3072 0F90                                l3064 0F85  
                              l3056 0F79                                l2274 0707  
                              l2266 06E8                                l2258 06C9  
                              l2290 0D92                                l2194 0BB6  
                              l2370 0EF3                                l2362 0EDD  
                              l2354 0EBD                                l2346 0E96  
                              l2186 0C01                                l2178 0BFB  
                              l2418 0C68                                l2450 0CD0  
                              l2442 0CB9                                l2434 0CEC  
                              l2426 0CD8                                l2610 024E  
                              l2602 0209                                l2530 00DD  
                              l2522 0F5B                                l2506 0F2E  
                              l2514 0F46                                l3090 0FA1  
                              l3082 0F9A                                l3074 0F93  
                              l3066 0F87                                l3058 0F7F  
                              l2276 070D                                l2268 06EE  
                              l2284 0726                                l2292 0D96  
                              l2380 0DE7                                l2196 07F7  
                              l2364 0EE6                                l2356 0ECF  
                              l2348 0E99                                l2188 0C02  
                              l2460 0CA6                                l2452 0C91  
                              l2444 0CC4                                l2436 0CF1  
                              l2428 0CDA                                l2620 026D  
                              l2612 025A                                l2604 021B  
                              l2540 00F4                                l2532 00E1  
                              l2524 0F60                                l2700 07E4  
                              l3092 0FA2                                l3084 0F9B  
                              l3076 0F96                                l3068 0F8C  
                              l2278 0713                                l2286 0748  
                              l2294 0D9B                                l2390 0E07  
                              l2382 0DEB                                l2198 0BA6  
                              l2374 0EF8                                l2366 0EE8  
                              l2358 0ED2                                l2710 0E3D  
                              l2470 0C77                                l2462 0CAA  
                              l2454 0C96                                l2446 0CC7  
                              l2438 0CB2                                l2630 028E  
                              l2614 0261                                l2622 0271  
                              l2606 0230                                l2550 0109  
                              l2542 00F6                                l2534 00E2  
                              l2526 00D7                                l2702 07E9  
                              l3094 0FA3                                l3086 0F9E  
                              l3078 0F98                                l2296 0D9D  
                              l2288 0D90                                l2392 0E0B  
                              l2384 0DEF                                l2368 0EEB  
                              l2720 0E61                                l2712 0E48  
                              l2480 0C04                                l2472 0C82  
                              l2464 0CAF                                l2456 0C98  
                              l2448 0CCB                                l2640 02A7  
                              l2624 0275                                l2616 0265  
                              l2608 0247                                l2560 011E  
                              l2552 010A                                l2544 00FE  
                              l2536 00E7                                l2528 00DB  
                              l2704 07ED                                l2800 037A  
                              l3096 0FA4                                l3088 0F9F  
                              l2298 0DA1                                l2386 0DFF  
                              l2378 0DE6                                l2730 0E74  
                              l2722 0E62                                l2714 0E4E  
                              l2482 0C09                                l2474 0C85  
                              l2466 0C70                                l2458 0CA3  
                              l2650 02E8                                l2642 02BF  
                              l2634 0296                                l2626 0276  
                              l2618 0266                                l2570 0139  
                              l2562 0126                                l2554 010F  
                              l2546 0103                                l2538 00EC  
                              l2490 0EFB                                l2706 07EE  
                              l2810 03BC                                l2802 0383  
                              l3098 0FAE                                l2388 0E03  
                              l2396 0E10                                l2740 0E87  
                              l2732 0E75                                l2724 0E63  
                              l2716 0E52                                l2484 0C0B  
                              l2476 0C89                                l2468 0C75  
                              l2660 0303                                l2652 02F1  
                              l2636 029B                                l2644 02C3  
                              l2628 027A                                l2580 018E  
                              l2572 0144                                l2564 012B  
                              l2556 0114                                l2548 0105  
                              l2492 0F05                                l2820 0405  
                              l2812 03CC                                l2804 0393  
                              l2398 0E2C                                l2750 05B9  
                              l2742 058E                                l2734 0E83  
                              l2726 0E71                                l2718 0E5F  
                              l2486 0C16                                l2478 0C8E  
                              l2662 0309                                l2654 02F3  
                              l2646 02D0                                l2638 02A3  
                              l2590 01C1                                l2582 019B  
                              l2574 0151                                l2566 0130  
                              l2558 011C                                l2670 0757  
                              l2830 044E                                l2822 0415  
                              l2814 03DC                                l2806 03A3  
                              l3392 0E15                                l2760 0625  
                              l2752 05D9                                l2744 0596  
                              l2736 0E85                                l2728 0E73  
                              l2488 0C1A                                l2656 02FE  
                              l2648 02DA                                l2592 01CC  
                              l2584 01A8                                l2576 0169  
                              l2496 0F0E                                l2680 0783  
                              l2672 0767                                l2832 045E  
                              l2824 0425                                l2816 03EC  
                              l2808 03B3                                l3394 0D6F  
                              l2770 0692                                l2762 0646  
                              l2754 05FA                                l2746 059A  
                              l2738 0E86                                l2658 0302  
                              l2594 01D3                                l2586 01AF  
                              l2578 0176                                l2498 0F1F  
                              l2690 07AF                                l2682 078E  
                              l2674 0777                                l2666 074E  
                              l2834 046E                                l2826 042E  
                              l2818 03F5                                l2772 0696  
                              l2764 064A                                l2756 05FE  
                              l2748 05AF                                l2780 0C3B  
                              l2596 01E5                                l2588 01BA  
                              l2692 07B8                                l2684 0795  
                              l2668 0753                                l2828 043E  
                              l2836 0472                                l2790 0B90  
                              l2766 0650                                l2758 0604  
                              l2782 0C44                                l2774 0B7C  
                              l2598 01EC                                l2694 07BC  
                              l2686 0799                                l2678 0780  
                              l2768 0671                                l2784 0C47  
                              l2776 0B72                                l2696 07C6  
                              l2688 07A1                                l2792 0312  
                              l2786 0C50                                l2778 0C38  
                              l2698 07D0                                l2794 034A  
                              l2788 0B86                                l2796 035A  
                              l2798 036A                                _BLUE 006C  
                              u2000 07E9                                u2001 07E8  
                              u2010 07ED                                u2011 07EC  
                              u2100 0692                                u1300 0BB3  
                              u2020 0E4E                                u2101 0691  
                              u1301 0BB2                                u2021 0E4D  
                              u2030 0596                                u2110 0C44  
                              u1310 0B52                                u2031 0595  
                              u2111 0C43                                u1311 0B51  
                              u1240 0C33                                u1400 0DDA  
                              u1320 0D96                                u2040 05B9  
                              u2120 0C50                                u2200 03CC  
                              u1241 0C32                                u1401 0DD9  
                              u1321 0D95                                u2105 068E  
                              u2041 05B8                                u2121 0C4F  
                              u2201 03CB                                u2130 0B90  
                              u1330 0DA1                                u2050 05D9  
                              u1250 0B66                                u1410 0D03  
                              u2210 03DC                                u2131 0B8F  
                              u1331 0DA0                                u2051 05D8  
                              u1251 0B65                                u1411 0D02  
                              u2211 03DB                                u1340 0DAC  
                              u2060 05FA                                u1260 0BBE  
                              u1500 0EDC                                u2220 03EC  
                              u2140 035A                                u1341 0DAB  
                              u2061 05F9                                u1261 0BBD  
                              u1501 0EDB                                u2221 03EB  
                              u2205 03C8                                u2141 0359  
                              u2070 0625                                u1270 0BC3  
                              u1510 0EF3                                u1430 0D13  
                              u2230 0405                                u2150 036A  
                              u2071 0624                                u2055 05D5  
                              u1271 0BC2                                u1511 0EF2  
                              u1431 0D12                                u2231 0404  
                              u2215 03D8                                u2151 0369  
                              u1360 0DBC                                u2080 0646  
                              u1280 07FE                                u1440 0EA4  
                              u1600 0F5B                                u1520 0F05  
                              u2240 0415                                u2160 037A  
                              u1361 0DBB                                u2081 0645  
                              u2065 05F6                                u1281 07FD  
                              u1441 0EA3                                u1425 0D08  
                              u1601 0F5A                                u1521 0F04  
                              u2241 0414                                u2225 03E8  
                              u2161 0379                                u2145 0356  
                              u1370 0DC6                                u2090 0671  
                              u1290 0BAE                                u1450 0EA9  
                              u1610 0F60                                u1530 0F1B  
                              u2250 0425                                u2170 0393  
                              u2330 0FAE                                u1371 0DC5  
                              u1355 0DB0                                u2091 0670  
                              u2075 0621                                u1291 0BAD  
                              u1451 0EA8                                u1611 0F5F  
                              u2251 0424                                u2235 0401  
                              u2171 0392                                u2155 0366  
                              u2331 0FAD                                u1460 0EB3  
                              u1620 00E1                                u1540 0F2E  
                              u2260 043E                                u2180 03A3  
                              u2340 0FCD                                u2085 0642  
                              u1461 0EB2                                u1621 00E0  
                              u1541 0F2D                                u2261 043D  
                              u2245 0411                                u2181 03A2  
                              u2165 0376                                u2341 0FCC  
                              u1390 0DD5                                u1470 0EB8  
                              u1630 00E7                                u1550 0F35  
                              u2270 044E                                u2190 03B3  
                              u2350 0FF0                                u1391 0DD4  
                              u1375 0DC2                                u2095 066D  
                              u1471 0EB7                                u1631 00E6  
                              u1551 0F34                                u1535 0F17  
                              u2271 044D                                u2255 0421  
                              u2191 03B2                                u2175 038F  
                              u2351 0FEF                                u1480 0EC8  
                              u1800 028E                                u1720 0226  
                              u1640 00EC                                u2280 045E  
                              u2360 0FF6                                u1385 0DCB  
                              u1481 0EC7                                u1801 028D  
                              u1705 01A9                                u1641 00EB  
                              u2281 045D                                u2265 043A  
                              u2185 039F                                u2361 0FF5  
                              u1490 0ECD                                u1810 0295  
                              u1730 023D                                u1650 0109  
                              u1570 0F45                                u2290 046E  
                              u1491 0ECC                                u1811 0294  
                              u1715 01D4                                u1651 0108  
                              u1571 0F44                                u2291 046D  
                              u2275 044A                                u2195 03AF  
                              u1820 029B                                u1660 010F  
                              u1580 0F4C                                u1900 0777  
                              u1821 029A                                u1725 0222  
                              u1661 010E                                u1581 0F4B  
                              u1565 0F37                                u1901 0776  
                              u2285 045A                                u1830 02A7  
                              u1670 0114                                u2527 0E58  
                              u1831 02A6                                u1735 0239  
                              u1671 0113                                u2295 046A  
                              u1840 02B5                                u1760 0265  
                              u1680 012B                                u1920 0794  
                              u2537 0E6A                                u1761 0264  
                              u1745 0248                                u1681 012A  
                              u1921 0793                                u1850 02D0  
                              u1690 0130                                u2547 0E7C  
                              u1851 02CF                                u1755 025B  
                              u1691 012F                                u1595 0F4E  
                              u1915 0788                                u1860 02E8  
                              u1780 0275                                u1940 07AE  
                              u2557 0E8E                                u1861 02E7  
                              u1845 02B1                                u1781 0274  
                              u1941 07AD                                u1870 0302  
                              u1790 027A                                u1871 0301  
                              u1855 02CC                                u1791 0279  
                              u1775 0267                                u1935 07A2  
                              u1960 07BC                                u1880 0753  
                              u1865 02E4                                u1961 07BB  
                              u1881 0752                                u1970 07C2  
                              u1890 0757                                u1971 07C1  
                              u1955 07B2                                u1891 0756  
                              u1980 07C6                                u1981 07C5  
                              u1990 07DA                                u1995 07D6  
               __end_of_CreateBreak 0C1D                                _main 0F6C  
                              fsr0h 0005                                fsr1h 0007  
                              indf0 0000                                fsr0l 0004  
                              indf1 0001                                fsr1l 0006  
                              btemp 007E                                start 0089  
                    _ReadAddressI2C 0B2D             GetValueAndEndI2C@colors 0024  
                   __end_of_ReadI2C 0B1D              MovePumpArm@switchValue 0020  
               __end_of_ColorSensor 069D                       ___fltol@sign1 0050  
         CreateTurnLeftCommmand@pwm 0020                               ?_main 0070  
                   __end_of___awmod 0DE4                     __end_of___flmul 0312  
                   __end_of___fltol 0F6C                               _GREEN 006B  
             ?_StartIC2Transmission 0070                               i1l450 0010  
                             i1l375 058B                               i1l458 0087  
                             _RCREG 0119                  _GetControllerInput 0476  
                  ColorSensor@color 002E                               _Break 0158  
                             _SetUp 0E96                               _Reset 0BD7  
 __end_of_CreateMoveForwardCommmand 0CB2           ??_CreateTurnRightCommmand 0022  
                             _color 0068                               _cycle 0079  
                             _drive 0312                 ?_GetControllerInput 0070  
                             status 0003                               wtemp0 007E  
            __end_of_ReadAddressI2C 0B33                     __initialization 008B  
                      __end_of_main 1000                 _MoveBackwardCommand 00A6  
                        SetUp@value 0024                      _ReadColorReady 0C1D  
                  __end_of_LoadTemp 0B5E                    _StartReadRequest 0BA6  
              ??_GetControllerInput 0072                    __end_of_SetUpI2C 0B72  
                            ??_main 0055                              ?_SetUp 0020  
                            ?_Reset 0070                    __end_of_StartI2C 0B2D  
                       _CreateBreak 0C04                       ??_MovePumpArm 0022  
                            ?_drive 0070                    __end_of_WriteI2C 0B39  
                            _RC3PPS 0F23                              _RC4PPS 0F24  
                            _RC5PPS 0F25                              i1l3300 003F  
                            i1l3310 005C                              i1l3302 0042  
                            i1l3232 0476                              i1l3320 0085  
                            i1l3312 005E                              i1l3304 0047  
                            i1l3250 04BF                              i1l3242 0499  
                            i1l3314 006C                              i1l3306 0049  
                            i1l3236 0480                              i1l3316 0070  
                            i1l3308 004D                              i1l3270 051E  
                            i1l3262 04F8                              i1l3254 04D2  
                            i1l3246 04AC                              i1l3238 0486  
                            i1l3318 007E                              i1l3280 0547  
                            i1l3274 0531                              i1l3266 050B  
                            i1l3258 04E5                              i1l3290 0014  
                            i1l3276 0543                              i1l3292 001C  
                            i1l3294 0023                              i1l3286 0006  
                            i1l3296 002A                              i1l3288 000B  
                            i1l3298 0031                              i1l3396 054D  
                            u250_20 005C                 _IncrementColorStage 0B96  
                            u250_21 005B                              u250_25 0058  
                            u251_20 006C                              u251_21 006B  
                            u251_25 0068                              u244_20 047F  
                            u244_21 047E                              u245_20 000B  
                            u245_21 000A                              u246_20 0014  
                            u246_21 0013                              u247_20 0023  
                            u247_21 0022                              u248_20 003F  
                            u248_21 003E                              u248_25 003B  
                            u249_20 004D                              u249_21 004C  
                  __end_of___xxtofl 07F7                              _EndI2C 0B17  
                         ??_ReadI2C 0020                     ?_ReadAddressI2C 0070  
                 ColorSensor@colors 002D              __end_of_ReadColorReady 0C38  
                      _ActivatePump 0B86                         _ColorSensor 058C  
            _CreateTurnLeftCommmand 0CB2                           ??___awmod 0024  
                         ??___flmul 0036                           ??___fltol 004C  
                     ?_SetUpI2CPins 0070                _SelectColourRegister 0D4C  
                            _colors 0145                ?_IncrementColorStage 0070  
                   ___awmod@divisor 0020              ??_StartIC2Transmission 0020  
                   ___awmod@counter 0025                        __pdataCOMMON 0079  
            SetUpColorSensor@result 0028                        ___xxtofl@arg 002A  
                      ___xxtofl@exp 0029                        ___xxtofl@val 0020  
           __end_of__initialization 00D3                 __end_of_MovePumpArm 0C53  
                        ___fltol@f1 0048                       ?_SetUpPumpArm 0070  
                   ?_ReadColorReady 0021                      __pcstackCOMMON 0070  
                     __end_of_SetUp 0EFB                       __end_of_Reset 0BED  
                    ??_SetUpI2CPins 0020                        __pidataBANK0 0B45  
                      __pidataBANK1 0D18                        __pidataBANK2 0BC6  
             ?_SelectColourRegister 0020                       __end_of_drive 0476  
             ??_IncrementColorStage 0020                  _EndIC2Transmission 0B4B  
                  _TurnRightCommand 00BA                   _GetValueAndEndI2C 069D  
                           ??_SetUp 0022         ??_CreateMoveForwardCommmand 0022  
                           ??_Reset 0020                  ?_GetValueAndEndI2C 0070  
               ?_EndIC2Transmission 0070                             ??_drive 0052  
                 __end_of_RepeatI2C 0B20                         Reset@colors 0020  
                        __pbssBANK0 0055                          __pbssBANK1 00D4  
                        __pbssBANK2 0120                   __end_of_SetUpPump 0B7C  
                         ?_LoadTemp 0020                 ??_GetValueAndEndI2C 0023  
                           ?_EndI2C 0070               __end_of_CONTROL_INPUT 1002  
                         ?_SetUpI2C 0070                      ??_SetUpPumpArm 0020  
                 __end_of__Umul8_16 0D18                      _SSP1DATPPSbits 0EC6  
              ??_EndIC2Transmission 0020                          __pmaintext 0F6C  
                         ?_StartI2C 0070                          __pintentry 0004  
                         ?_WriteI2C 0070                      _SSP1CLKPPSbits 0EC5  
         __end_of_GetValueAndEndI2C 074C                       _SetUpIC2Clock 0B20  
                         ?___xxtofl 0020                       LoadTemp@value 0020  
        CreateTurnRightCommmand@pwm 0020               _CreateControlsCommand 0C53  
                           _SSP1ADD 018D                             _SSP1BUF 018C  
                       _MovePumpArm 0C38            __end_of_StartReadRequest 0BB6  
                        ??_LoadTemp 0021                             _Command 0136  
                           _ReadI2C 0B1A       CreateMoveBackwardCommmand@pwm 0020  
                        ??_SetUpI2C 0020            ColorSensor@newI2CMessage 0034  
         _CreateMoveForwardCommmand 0C91              ??_SelectColourRegister 0022  
                        ??_StartI2C 0020                             ___awmod 0D90  
                           ___flmul 00D7                             ___fltol 0EFB  
                        ??_WriteI2C 0020                             __ptext1 0312  
                           __ptext2 074C                             __ptext3 0EFB  
                           __ptext4 00D7                             __ptext5 0CF4  
                           __ptext6 0CD3                             __ptext7 0CB2  
                           __ptext8 0C91                             __ptext9 0C70  
                    ?_SetUpIC2Clock 0070        ??_CreateMoveBackwardCommmand 0022  
                           _counter 00EA                          ??___xxtofl 0024  
                        _myFunction 0004                    ___awmod@dividend 0022  
                        _inputStage 00EE                        ?_CreateBreak 0070  
                     ?_UpdateColors 0027                             clrloop0 0B3A  
              __end_of_SetUpI2CPins 0C04                    ??_ReadAddressI2C 0020  
              end_of_initialization 00D3                             init_ram 0B3F  
                           initloop 0B40                       _RepeatedStart 07F7  
            UpdateColors@stageValue 0027             ?_CreateTurnLeftCommmand 0020  
                      ?_ColorSensor 002C                    _SetUpColorSensor 0E3D  
                   myFunction@input 0077            ?_CreateTurnRightCommmand 0020  
           ActivatePump@switchValue 0020              ?_CreateControlsCommand 0070  
              __end_of_SetUpPumpArm 0B86                       ___xxtofl@sign 0028  
                         _TRISAbits 0011                           _TRISBbits 0012  
                         _TRISCbits 0013                     _TurnLeftCommand 00C4  
                    ??_UpdateColors 0029                           _RXPPSbits 0ECB  
                       ___flmul@grs 003C                      ?_RepeatedStart 0070  
    __end_of_CreateTurnLeftCommmand 0CD3                    ??_ReadColorReady 0022  
                    __end_of_EndI2C 0B1A                     ??_SetUpIC2Clock 0020  
                     __pidataCOMMON 0B24                          drive@power 0053  
                       ?_myFunction 0070                 start_initialization 008B  
    SelectColourRegister@colorStage 0020                           _RepeatI2C 0B1D  
                          ??_EndI2C 0020                      _CONTROL_OUTPUT 0069  
                         _SetUpPump 0B72         __end_of_IncrementColorStage 0BA6  
                    _currentCommand 0055                           __Umul8_16 0CF4  
                       __pdataBANK0 0069                         __pdataBANK1 00A0  
                       __pdataBANK2 0151     __end_of_CreateTurnRightCommmand 0CF4  
                _MoveForwardCommand 00B0                 ColorSensor@I2CStage 002C  
__end_of_CreateMoveBackwardCommmand 0C91          _CreateMoveBackwardCommmand 0C70  
           _EnableLaserScopeCommand 0151                           ___flmul@a 0032  
                         ___flmul@b 002E                ReadColorReady@buffer 0021  
              ReadColorReady@colors 0022                           ___latbits 0002  
                     __pcstackBANK0 0020                        ?_MovePumpArm 0020  
                   ??_RepeatedStart 0020                   ?_StartReadRequest 0070  
                      _currentInput 0064                          ?_RepeatI2C 0070  
                ??_StartReadRequest 0020                            ?_ReadI2C 0070  
                        ?_SetUpPump 0070             GetControllerInput@input 0070  
              __end_of_UpdateColors 0E3D                            ?___awmod 0020  
                          ?___flmul 002E                            ?___fltol 0048  
                        ?__Umul8_16 0020                        _SetUpI2CPins 0BED  
                         _commandIt 00EC                            _I2CStage 0066  
                         _frequency 007B            __end_of_SetUpColorSensor 0E96  
                          _LATAbits 0016                            _LATBbits 0017  
                    LoadTemp@colors 0021                           clear_ram0 0B39  
                          _PIE3bits 0719                        _SetUpPumpArm 0B7C  
                     ?_ActivatePump 0020                            _PIR3bits 070F  
                          _SSP1CON1 0190      SelectColourRegister@writeValue 0022  
           ??_CreateControlsCommand 0020                            _WPUCbits 0F4F  
                          _Controls 0120                            _LoadTemp 0B54  
                       ??_RepeatI2C 0020                         ??_SetUpPump 0020  
                          _SetUpI2C 0B68                       _CONTROL_INPUT 1000  
                    ??_ActivatePump 0022          __end_of_GetControllerInput 058C  
                          _StartI2C 0B28                         ??__Umul8_16 0022  
                          _WriteI2C 0B33        CreateMoveForwardCommmand@pwm 0020  
                       _SP1BRGLbits 011B                          _ANSELAbits 0F38  
                        _ANSELBbits 0F43                          _ANSELCbits 0F4E  
                 _StartWriteRequest 0BB6                        ??_myFunction 0075  
                          ___xxtofl 074C                  ?_StartWriteRequest 0070  
                          __ptext10 0C53                            __ptext11 0C04  
                          __ptext20 0BA6                            __ptext12 0B7C  
                          __ptext21 0B5E                            __ptext13 0B72  
                          __ptext30 0D4C                            __ptext22 07F7  
                          __ptext14 0E3D                            __ptext31 0B1D  
                          __ptext23 0B4B                            __ptext15 0B68  
                          __ptext40 0B86                            __ptext32 0B1A  
                          __ptext24 0C38                            __ptext16 0B20  
                          __ptext33 0B2D                            __ptext25 058C  
                          __ptext17 0BED                            __ptext42 0476  
                          __ptext34 069D                            __ptext26 0DE4  
                          __ptext18 0E96                            __ptext35 0BD7  
                          __ptext27 0D90                            __ptext19 0BB6  
                          __ptext36 0C1D                            __ptext28 0B33  
                          __ptext37 0B96                            __ptext29 0B28  
                          __ptext38 0B54                            __ptext39 0B17  
                      _SSP1CON2bits 0191                            _controls 00D4  
               ??_StartWriteRequest 0020        __end_of_StartIC2Transmission 0B68  
                        _RC1STAbits 011D                  __end_of_myFunction 0089  
                          int$flags 007E           __end_of_StartWriteRequest 0BC6  
       ?_CreateMoveBackwardCommmand 0020               __end_of_SetUpIC2Clock 0B24  
                        _INTCONbits 000B                        _UpdateColors 0DE4  
                     _newI2CMessage 006E                            intlevel1 0000  
                      _DAC1CON1bits 090F                  _GetUserDataCommand 00CE  
                       _SSP1BUFbits 018C                       __pstringtext1 1000  
            __Umul8_16@multiplicand 0020                  UpdateColors@colors 002B  
                        _TX1REGbits 011A                __end_of_ActivatePump 0B96  
                     ??_CreateBreak 0020            ??_CreateTurnLeftCommmand 0022  
                        _TX1STAbits 011E           IncrementColorStage@colors 0020  
                 ?_SetUpColorSensor 0070             _CreateTurnRightCommmand 0CD3  
             __end_of_RepeatedStart 0800                  ??_SetUpColorSensor 0026  
              __Umul8_16@multiplier 0028          __end_of_EndIC2Transmission 0B54  
                 __Umul8_16@product 0024                          _SWITCH_MID 00A0  
                        _SWITCH_MAX 00A4                       ??_ColorSensor 002F  
                        _SWITCH_MIN 00A2  

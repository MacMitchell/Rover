

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Apr 04 19:41:26 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     8                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    19                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    20                           	psect	inittext,global,class=CODE,delta=2
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,delta=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text6,local,class=CODE,merge=1,delta=2
    31                           	psect	text7,local,class=CODE,merge=1,delta=2
    32                           	psect	text8,local,class=CODE,merge=1,delta=2
    33                           	psect	text9,local,class=CODE,merge=1,delta=2
    34                           	psect	text10,local,class=CODE,merge=1,delta=2
    35                           	psect	text11,local,class=CODE,merge=1,delta=2
    36                           	psect	text12,local,class=CODE,merge=1,delta=2
    37                           	psect	text13,local,class=CODE,merge=1,delta=2
    38                           	psect	text14,local,class=CODE,merge=1,delta=2
    39                           	psect	text15,local,class=CODE,merge=1,delta=2
    40                           	psect	text16,local,class=CODE,merge=1,delta=2
    41                           	psect	text17,local,class=CODE,merge=1,delta=2
    42                           	psect	text18,local,class=CODE,merge=1,delta=2
    43                           	psect	text19,local,class=CODE,merge=1,delta=2
    44                           	psect	text20,local,class=CODE,merge=1,delta=2
    45                           	psect	text21,local,class=CODE,merge=1,delta=2
    46                           	psect	text22,local,class=CODE,merge=1,delta=2
    47                           	psect	text23,local,class=CODE,merge=1,delta=2
    48                           	psect	text24,local,class=CODE,merge=1,delta=2
    49                           	psect	text25,local,class=CODE,merge=1,delta=2
    50                           	psect	text26,local,class=CODE,merge=1,delta=2
    51                           	psect	text27,local,class=CODE,merge=1,delta=2
    52                           	psect	text28,local,class=CODE,merge=1,delta=2
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text31,local,class=CODE,merge=1,delta=2
    56                           	psect	text32,local,class=CODE,merge=1,delta=2
    57                           	psect	text33,local,class=CODE,merge=1,delta=2
    58                           	psect	text34,local,class=CODE,merge=1,delta=2
    59                           	psect	text35,local,class=CODE,merge=1,delta=2
    60                           	psect	text36,local,class=CODE,merge=1,delta=2
    61                           	psect	text37,local,class=CODE,merge=1,delta=2
    62                           	psect	text38,local,class=CODE,merge=1,delta=2
    63                           	psect	text39,local,class=CODE,merge=1,delta=2
    64                           	psect	text40,local,class=CODE,merge=1,delta=2
    65                           	psect	text41,local,class=CODE,merge=1,delta=2
    66                           	psect	text42,local,class=CODE,merge=1,delta=2
    67                           	psect	text43,local,class=CODE,merge=1,delta=2
    68                           	psect	text44,local,class=CODE,merge=1,delta=2
    69                           	psect	intentry,global,class=CODE,delta=2
    70                           	psect	text46,local,class=CODE,merge=1,delta=2
    71                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    72                           	dabs	1,0x7E,2
    73     0000                     
    74                           ; Generated 21/06/2023 GMT
    75                           ; 
    76                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution. Publication is not required when
    90                           ;        this file is used in an embedded application.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC16F18855 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0016                     	;# 
   128     0017                     	;# 
   129     0018                     	;# 
   130     001C                     	;# 
   131     001C                     	;# 
   132     001D                     	;# 
   133     001D                     	;# 
   134     001E                     	;# 
   135     001F                     	;# 
   136     008C                     	;# 
   137     008C                     	;# 
   138     008D                     	;# 
   139     008E                     	;# 
   140     008E                     	;# 
   141     008F                     	;# 
   142     0090                     	;# 
   143     0090                     	;# 
   144     0091                     	;# 
   145     0093                     	;# 
   146     0094                     	;# 
   147     0095                     	;# 
   148     0096                     	;# 
   149     0097                     	;# 
   150     0098                     	;# 
   151     0099                     	;# 
   152     009A                     	;# 
   153     009B                     	;# 
   154     009C                     	;# 
   155     009D                     	;# 
   156     009E                     	;# 
   157     010C                     	;# 
   158     010D                     	;# 
   159     010E                     	;# 
   160     010E                     	;# 
   161     010F                     	;# 
   162     0110                     	;# 
   163     0110                     	;# 
   164     0111                     	;# 
   165     0112                     	;# 
   166     0112                     	;# 
   167     0113                     	;# 
   168     0114                     	;# 
   169     0114                     	;# 
   170     0115                     	;# 
   171     0116                     	;# 
   172     0116                     	;# 
   173     0117                     	;# 
   174     0119                     	;# 
   175     0119                     	;# 
   176     0119                     	;# 
   177     011A                     	;# 
   178     011A                     	;# 
   179     011A                     	;# 
   180     011B                     	;# 
   181     011B                     	;# 
   182     011B                     	;# 
   183     011B                     	;# 
   184     011B                     	;# 
   185     011C                     	;# 
   186     011C                     	;# 
   187     011C                     	;# 
   188     011D                     	;# 
   189     011D                     	;# 
   190     011D                     	;# 
   191     011E                     	;# 
   192     011E                     	;# 
   193     011E                     	;# 
   194     011F                     	;# 
   195     011F                     	;# 
   196     011F                     	;# 
   197     011F                     	;# 
   198     011F                     	;# 
   199     018C                     	;# 
   200     018D                     	;# 
   201     018E                     	;# 
   202     018F                     	;# 
   203     0190                     	;# 
   204     0191                     	;# 
   205     0192                     	;# 
   206     0196                     	;# 
   207     0197                     	;# 
   208     0198                     	;# 
   209     0199                     	;# 
   210     019A                     	;# 
   211     019B                     	;# 
   212     019C                     	;# 
   213     020C                     	;# 
   214     020C                     	;# 
   215     020D                     	;# 
   216     020E                     	;# 
   217     020F                     	;# 
   218     020F                     	;# 
   219     0210                     	;# 
   220     0210                     	;# 
   221     0211                     	;# 
   222     0211                     	;# 
   223     0212                     	;# 
   224     0212                     	;# 
   225     0213                     	;# 
   226     0214                     	;# 
   227     0215                     	;# 
   228     0215                     	;# 
   229     0216                     	;# 
   230     0216                     	;# 
   231     0217                     	;# 
   232     0217                     	;# 
   233     0218                     	;# 
   234     0218                     	;# 
   235     0219                     	;# 
   236     021A                     	;# 
   237     021B                     	;# 
   238     021B                     	;# 
   239     021C                     	;# 
   240     021C                     	;# 
   241     021D                     	;# 
   242     021D                     	;# 
   243     021E                     	;# 
   244     021F                     	;# 
   245     028C                     	;# 
   246     028C                     	;# 
   247     028D                     	;# 
   248     028D                     	;# 
   249     028E                     	;# 
   250     028F                     	;# 
   251     0290                     	;# 
   252     0290                     	;# 
   253     0291                     	;# 
   254     0292                     	;# 
   255     0292                     	;# 
   256     0293                     	;# 
   257     0293                     	;# 
   258     0294                     	;# 
   259     0295                     	;# 
   260     0296                     	;# 
   261     0296                     	;# 
   262     0297                     	;# 
   263     0298                     	;# 
   264     0298                     	;# 
   265     0299                     	;# 
   266     0299                     	;# 
   267     029A                     	;# 
   268     029B                     	;# 
   269     029C                     	;# 
   270     029C                     	;# 
   271     029D                     	;# 
   272     030C                     	;# 
   273     030C                     	;# 
   274     030D                     	;# 
   275     030E                     	;# 
   276     030F                     	;# 
   277     0310                     	;# 
   278     0310                     	;# 
   279     0311                     	;# 
   280     0312                     	;# 
   281     0313                     	;# 
   282     0314                     	;# 
   283     0314                     	;# 
   284     0315                     	;# 
   285     0316                     	;# 
   286     0317                     	;# 
   287     0318                     	;# 
   288     0318                     	;# 
   289     0319                     	;# 
   290     031A                     	;# 
   291     031B                     	;# 
   292     031C                     	;# 
   293     031C                     	;# 
   294     031D                     	;# 
   295     031E                     	;# 
   296     031F                     	;# 
   297     038C                     	;# 
   298     038C                     	;# 
   299     038D                     	;# 
   300     038E                     	;# 
   301     0390                     	;# 
   302     0390                     	;# 
   303     0391                     	;# 
   304     0392                     	;# 
   305     040C                     	;# 
   306     040D                     	;# 
   307     040E                     	;# 
   308     040F                     	;# 
   309     0410                     	;# 
   310     0411                     	;# 
   311     0416                     	;# 
   312     0416                     	;# 
   313     0417                     	;# 
   314     0418                     	;# 
   315     0418                     	;# 
   316     0419                     	;# 
   317     041A                     	;# 
   318     041A                     	;# 
   319     041B                     	;# 
   320     041C                     	;# 
   321     041C                     	;# 
   322     041D                     	;# 
   323     041E                     	;# 
   324     041F                     	;# 
   325     048C                     	;# 
   326     048C                     	;# 
   327     048D                     	;# 
   328     048E                     	;# 
   329     048F                     	;# 
   330     048F                     	;# 
   331     0490                     	;# 
   332     0491                     	;# 
   333     0492                     	;# 
   334     0492                     	;# 
   335     0493                     	;# 
   336     0494                     	;# 
   337     0495                     	;# 
   338     0495                     	;# 
   339     0496                     	;# 
   340     0497                     	;# 
   341     0498                     	;# 
   342     0499                     	;# 
   343     049A                     	;# 
   344     049B                     	;# 
   345     049C                     	;# 
   346     049D                     	;# 
   347     050C                     	;# 
   348     050C                     	;# 
   349     050D                     	;# 
   350     050E                     	;# 
   351     050F                     	;# 
   352     050F                     	;# 
   353     0510                     	;# 
   354     0511                     	;# 
   355     0512                     	;# 
   356     0512                     	;# 
   357     0513                     	;# 
   358     0514                     	;# 
   359     0515                     	;# 
   360     0515                     	;# 
   361     0516                     	;# 
   362     0517                     	;# 
   363     0518                     	;# 
   364     0519                     	;# 
   365     051A                     	;# 
   366     051B                     	;# 
   367     051C                     	;# 
   368     051D                     	;# 
   369     058C                     	;# 
   370     058C                     	;# 
   371     058D                     	;# 
   372     058E                     	;# 
   373     058F                     	;# 
   374     058F                     	;# 
   375     0590                     	;# 
   376     0591                     	;# 
   377     0592                     	;# 
   378     0593                     	;# 
   379     060C                     	;# 
   380     060D                     	;# 
   381     060E                     	;# 
   382     060F                     	;# 
   383     0610                     	;# 
   384     0611                     	;# 
   385     0612                     	;# 
   386     0613                     	;# 
   387     0614                     	;# 
   388     0616                     	;# 
   389     0617                     	;# 
   390     0618                     	;# 
   391     0619                     	;# 
   392     061A                     	;# 
   393     061B                     	;# 
   394     061C                     	;# 
   395     061D                     	;# 
   396     061E                     	;# 
   397     068C                     	;# 
   398     068D                     	;# 
   399     068E                     	;# 
   400     068F                     	;# 
   401     0690                     	;# 
   402     0691                     	;# 
   403     0692                     	;# 
   404     0693                     	;# 
   405     0694                     	;# 
   406     070C                     	;# 
   407     070D                     	;# 
   408     070E                     	;# 
   409     070F                     	;# 
   410     0710                     	;# 
   411     0711                     	;# 
   412     0712                     	;# 
   413     0713                     	;# 
   414     0714                     	;# 
   415     0716                     	;# 
   416     0717                     	;# 
   417     0718                     	;# 
   418     0719                     	;# 
   419     071A                     	;# 
   420     071B                     	;# 
   421     071C                     	;# 
   422     071D                     	;# 
   423     071E                     	;# 
   424     0796                     	;# 
   425     0797                     	;# 
   426     0798                     	;# 
   427     0799                     	;# 
   428     079A                     	;# 
   429     079B                     	;# 
   430     080C                     	;# 
   431     080D                     	;# 
   432     080E                     	;# 
   433     080F                     	;# 
   434     0810                     	;# 
   435     0811                     	;# 
   436     0812                     	;# 
   437     0813                     	;# 
   438     0814                     	;# 
   439     081A                     	;# 
   440     081B                     	;# 
   441     081C                     	;# 
   442     081D                     	;# 
   443     081E                     	;# 
   444     081F                     	;# 
   445     088C                     	;# 
   446     088D                     	;# 
   447     088E                     	;# 
   448     088F                     	;# 
   449     0890                     	;# 
   450     0891                     	;# 
   451     0892                     	;# 
   452     0893                     	;# 
   453     0895                     	;# 
   454     0896                     	;# 
   455     0897                     	;# 
   456     0898                     	;# 
   457     0899                     	;# 
   458     089A                     	;# 
   459     089B                     	;# 
   460     090C                     	;# 
   461     090E                     	;# 
   462     090F                     	;# 
   463     091F                     	;# 
   464     091F                     	;# 
   465     098F                     	;# 
   466     098F                     	;# 
   467     0990                     	;# 
   468     0991                     	;# 
   469     0992                     	;# 
   470     0993                     	;# 
   471     0994                     	;# 
   472     0995                     	;# 
   473     0996                     	;# 
   474     0997                     	;# 
   475     0E0F                     	;# 
   476     0E10                     	;# 
   477     0E11                     	;# 
   478     0E12                     	;# 
   479     0E13                     	;# 
   480     0E14                     	;# 
   481     0E15                     	;# 
   482     0E16                     	;# 
   483     0E17                     	;# 
   484     0E18                     	;# 
   485     0E19                     	;# 
   486     0E1A                     	;# 
   487     0E1B                     	;# 
   488     0E1C                     	;# 
   489     0E1D                     	;# 
   490     0E1E                     	;# 
   491     0E1F                     	;# 
   492     0E20                     	;# 
   493     0E21                     	;# 
   494     0E22                     	;# 
   495     0E23                     	;# 
   496     0E24                     	;# 
   497     0E25                     	;# 
   498     0E26                     	;# 
   499     0E27                     	;# 
   500     0E28                     	;# 
   501     0E29                     	;# 
   502     0E2A                     	;# 
   503     0E2B                     	;# 
   504     0E2C                     	;# 
   505     0E2D                     	;# 
   506     0E2E                     	;# 
   507     0E2F                     	;# 
   508     0E30                     	;# 
   509     0E31                     	;# 
   510     0E32                     	;# 
   511     0E33                     	;# 
   512     0E34                     	;# 
   513     0E35                     	;# 
   514     0E36                     	;# 
   515     0E37                     	;# 
   516     0E8F                     	;# 
   517     0E90                     	;# 
   518     0E91                     	;# 
   519     0E92                     	;# 
   520     0E93                     	;# 
   521     0E94                     	;# 
   522     0E95                     	;# 
   523     0E96                     	;# 
   524     0E97                     	;# 
   525     0E9C                     	;# 
   526     0E9D                     	;# 
   527     0E9E                     	;# 
   528     0EA1                     	;# 
   529     0EA2                     	;# 
   530     0EA3                     	;# 
   531     0EA4                     	;# 
   532     0EA5                     	;# 
   533     0EA9                     	;# 
   534     0EAA                     	;# 
   535     0EAB                     	;# 
   536     0EAC                     	;# 
   537     0EB1                     	;# 
   538     0EB2                     	;# 
   539     0EB3                     	;# 
   540     0EB8                     	;# 
   541     0EB9                     	;# 
   542     0EBA                     	;# 
   543     0EBB                     	;# 
   544     0EBC                     	;# 
   545     0EBD                     	;# 
   546     0EBE                     	;# 
   547     0EC3                     	;# 
   548     0EC5                     	;# 
   549     0EC6                     	;# 
   550     0EC7                     	;# 
   551     0EC8                     	;# 
   552     0EC9                     	;# 
   553     0ECA                     	;# 
   554     0ECB                     	;# 
   555     0ECC                     	;# 
   556     0F10                     	;# 
   557     0F11                     	;# 
   558     0F12                     	;# 
   559     0F13                     	;# 
   560     0F14                     	;# 
   561     0F15                     	;# 
   562     0F16                     	;# 
   563     0F17                     	;# 
   564     0F18                     	;# 
   565     0F19                     	;# 
   566     0F1A                     	;# 
   567     0F1B                     	;# 
   568     0F1C                     	;# 
   569     0F1D                     	;# 
   570     0F1E                     	;# 
   571     0F1F                     	;# 
   572     0F20                     	;# 
   573     0F21                     	;# 
   574     0F22                     	;# 
   575     0F23                     	;# 
   576     0F24                     	;# 
   577     0F25                     	;# 
   578     0F26                     	;# 
   579     0F27                     	;# 
   580     0F38                     	;# 
   581     0F39                     	;# 
   582     0F3A                     	;# 
   583     0F3B                     	;# 
   584     0F3C                     	;# 
   585     0F3D                     	;# 
   586     0F3E                     	;# 
   587     0F3F                     	;# 
   588     0F40                     	;# 
   589     0F41                     	;# 
   590     0F43                     	;# 
   591     0F44                     	;# 
   592     0F45                     	;# 
   593     0F46                     	;# 
   594     0F47                     	;# 
   595     0F48                     	;# 
   596     0F49                     	;# 
   597     0F4A                     	;# 
   598     0F4B                     	;# 
   599     0F4C                     	;# 
   600     0F4E                     	;# 
   601     0F4F                     	;# 
   602     0F50                     	;# 
   603     0F51                     	;# 
   604     0F52                     	;# 
   605     0F53                     	;# 
   606     0F54                     	;# 
   607     0F55                     	;# 
   608     0F56                     	;# 
   609     0F57                     	;# 
   610     0F65                     	;# 
   611     0F68                     	;# 
   612     0F69                     	;# 
   613     0F6A                     	;# 
   614     0F6B                     	;# 
   615     0FE4                     	;# 
   616     0FE5                     	;# 
   617     0FE6                     	;# 
   618     0FE7                     	;# 
   619     0FE8                     	;# 
   620     0FE9                     	;# 
   621     0FEA                     	;# 
   622     0FEB                     	;# 
   623     0FED                     	;# 
   624     0FEE                     	;# 
   625     0FEF                     	;# 
   626     0000                     	;# 
   627     0001                     	;# 
   628     0002                     	;# 
   629     0003                     	;# 
   630     0004                     	;# 
   631     0005                     	;# 
   632     0006                     	;# 
   633     0007                     	;# 
   634     0008                     	;# 
   635     0009                     	;# 
   636     000A                     	;# 
   637     000B                     	;# 
   638     000C                     	;# 
   639     000D                     	;# 
   640     000E                     	;# 
   641     0010                     	;# 
   642     0011                     	;# 
   643     0012                     	;# 
   644     0013                     	;# 
   645     0016                     	;# 
   646     0017                     	;# 
   647     0018                     	;# 
   648     001C                     	;# 
   649     001C                     	;# 
   650     001D                     	;# 
   651     001D                     	;# 
   652     001E                     	;# 
   653     001F                     	;# 
   654     008C                     	;# 
   655     008C                     	;# 
   656     008D                     	;# 
   657     008E                     	;# 
   658     008E                     	;# 
   659     008F                     	;# 
   660     0090                     	;# 
   661     0090                     	;# 
   662     0091                     	;# 
   663     0093                     	;# 
   664     0094                     	;# 
   665     0095                     	;# 
   666     0096                     	;# 
   667     0097                     	;# 
   668     0098                     	;# 
   669     0099                     	;# 
   670     009A                     	;# 
   671     009B                     	;# 
   672     009C                     	;# 
   673     009D                     	;# 
   674     009E                     	;# 
   675     010C                     	;# 
   676     010D                     	;# 
   677     010E                     	;# 
   678     010E                     	;# 
   679     010F                     	;# 
   680     0110                     	;# 
   681     0110                     	;# 
   682     0111                     	;# 
   683     0112                     	;# 
   684     0112                     	;# 
   685     0113                     	;# 
   686     0114                     	;# 
   687     0114                     	;# 
   688     0115                     	;# 
   689     0116                     	;# 
   690     0116                     	;# 
   691     0117                     	;# 
   692     0119                     	;# 
   693     0119                     	;# 
   694     0119                     	;# 
   695     011A                     	;# 
   696     011A                     	;# 
   697     011A                     	;# 
   698     011B                     	;# 
   699     011B                     	;# 
   700     011B                     	;# 
   701     011B                     	;# 
   702     011B                     	;# 
   703     011C                     	;# 
   704     011C                     	;# 
   705     011C                     	;# 
   706     011D                     	;# 
   707     011D                     	;# 
   708     011D                     	;# 
   709     011E                     	;# 
   710     011E                     	;# 
   711     011E                     	;# 
   712     011F                     	;# 
   713     011F                     	;# 
   714     011F                     	;# 
   715     011F                     	;# 
   716     011F                     	;# 
   717     018C                     	;# 
   718     018D                     	;# 
   719     018E                     	;# 
   720     018F                     	;# 
   721     0190                     	;# 
   722     0191                     	;# 
   723     0192                     	;# 
   724     0196                     	;# 
   725     0197                     	;# 
   726     0198                     	;# 
   727     0199                     	;# 
   728     019A                     	;# 
   729     019B                     	;# 
   730     019C                     	;# 
   731     020C                     	;# 
   732     020C                     	;# 
   733     020D                     	;# 
   734     020E                     	;# 
   735     020F                     	;# 
   736     020F                     	;# 
   737     0210                     	;# 
   738     0210                     	;# 
   739     0211                     	;# 
   740     0211                     	;# 
   741     0212                     	;# 
   742     0212                     	;# 
   743     0213                     	;# 
   744     0214                     	;# 
   745     0215                     	;# 
   746     0215                     	;# 
   747     0216                     	;# 
   748     0216                     	;# 
   749     0217                     	;# 
   750     0217                     	;# 
   751     0218                     	;# 
   752     0218                     	;# 
   753     0219                     	;# 
   754     021A                     	;# 
   755     021B                     	;# 
   756     021B                     	;# 
   757     021C                     	;# 
   758     021C                     	;# 
   759     021D                     	;# 
   760     021D                     	;# 
   761     021E                     	;# 
   762     021F                     	;# 
   763     028C                     	;# 
   764     028C                     	;# 
   765     028D                     	;# 
   766     028D                     	;# 
   767     028E                     	;# 
   768     028F                     	;# 
   769     0290                     	;# 
   770     0290                     	;# 
   771     0291                     	;# 
   772     0292                     	;# 
   773     0292                     	;# 
   774     0293                     	;# 
   775     0293                     	;# 
   776     0294                     	;# 
   777     0295                     	;# 
   778     0296                     	;# 
   779     0296                     	;# 
   780     0297                     	;# 
   781     0298                     	;# 
   782     0298                     	;# 
   783     0299                     	;# 
   784     0299                     	;# 
   785     029A                     	;# 
   786     029B                     	;# 
   787     029C                     	;# 
   788     029C                     	;# 
   789     029D                     	;# 
   790     030C                     	;# 
   791     030C                     	;# 
   792     030D                     	;# 
   793     030E                     	;# 
   794     030F                     	;# 
   795     0310                     	;# 
   796     0310                     	;# 
   797     0311                     	;# 
   798     0312                     	;# 
   799     0313                     	;# 
   800     0314                     	;# 
   801     0314                     	;# 
   802     0315                     	;# 
   803     0316                     	;# 
   804     0317                     	;# 
   805     0318                     	;# 
   806     0318                     	;# 
   807     0319                     	;# 
   808     031A                     	;# 
   809     031B                     	;# 
   810     031C                     	;# 
   811     031C                     	;# 
   812     031D                     	;# 
   813     031E                     	;# 
   814     031F                     	;# 
   815     038C                     	;# 
   816     038C                     	;# 
   817     038D                     	;# 
   818     038E                     	;# 
   819     0390                     	;# 
   820     0390                     	;# 
   821     0391                     	;# 
   822     0392                     	;# 
   823     040C                     	;# 
   824     040D                     	;# 
   825     040E                     	;# 
   826     040F                     	;# 
   827     0410                     	;# 
   828     0411                     	;# 
   829     0416                     	;# 
   830     0416                     	;# 
   831     0417                     	;# 
   832     0418                     	;# 
   833     0418                     	;# 
   834     0419                     	;# 
   835     041A                     	;# 
   836     041A                     	;# 
   837     041B                     	;# 
   838     041C                     	;# 
   839     041C                     	;# 
   840     041D                     	;# 
   841     041E                     	;# 
   842     041F                     	;# 
   843     048C                     	;# 
   844     048C                     	;# 
   845     048D                     	;# 
   846     048E                     	;# 
   847     048F                     	;# 
   848     048F                     	;# 
   849     0490                     	;# 
   850     0491                     	;# 
   851     0492                     	;# 
   852     0492                     	;# 
   853     0493                     	;# 
   854     0494                     	;# 
   855     0495                     	;# 
   856     0495                     	;# 
   857     0496                     	;# 
   858     0497                     	;# 
   859     0498                     	;# 
   860     0499                     	;# 
   861     049A                     	;# 
   862     049B                     	;# 
   863     049C                     	;# 
   864     049D                     	;# 
   865     050C                     	;# 
   866     050C                     	;# 
   867     050D                     	;# 
   868     050E                     	;# 
   869     050F                     	;# 
   870     050F                     	;# 
   871     0510                     	;# 
   872     0511                     	;# 
   873     0512                     	;# 
   874     0512                     	;# 
   875     0513                     	;# 
   876     0514                     	;# 
   877     0515                     	;# 
   878     0515                     	;# 
   879     0516                     	;# 
   880     0517                     	;# 
   881     0518                     	;# 
   882     0519                     	;# 
   883     051A                     	;# 
   884     051B                     	;# 
   885     051C                     	;# 
   886     051D                     	;# 
   887     058C                     	;# 
   888     058C                     	;# 
   889     058D                     	;# 
   890     058E                     	;# 
   891     058F                     	;# 
   892     058F                     	;# 
   893     0590                     	;# 
   894     0591                     	;# 
   895     0592                     	;# 
   896     0593                     	;# 
   897     060C                     	;# 
   898     060D                     	;# 
   899     060E                     	;# 
   900     060F                     	;# 
   901     0610                     	;# 
   902     0611                     	;# 
   903     0612                     	;# 
   904     0613                     	;# 
   905     0614                     	;# 
   906     0616                     	;# 
   907     0617                     	;# 
   908     0618                     	;# 
   909     0619                     	;# 
   910     061A                     	;# 
   911     061B                     	;# 
   912     061C                     	;# 
   913     061D                     	;# 
   914     061E                     	;# 
   915     068C                     	;# 
   916     068D                     	;# 
   917     068E                     	;# 
   918     068F                     	;# 
   919     0690                     	;# 
   920     0691                     	;# 
   921     0692                     	;# 
   922     0693                     	;# 
   923     0694                     	;# 
   924     070C                     	;# 
   925     070D                     	;# 
   926     070E                     	;# 
   927     070F                     	;# 
   928     0710                     	;# 
   929     0711                     	;# 
   930     0712                     	;# 
   931     0713                     	;# 
   932     0714                     	;# 
   933     0716                     	;# 
   934     0717                     	;# 
   935     0718                     	;# 
   936     0719                     	;# 
   937     071A                     	;# 
   938     071B                     	;# 
   939     071C                     	;# 
   940     071D                     	;# 
   941     071E                     	;# 
   942     0796                     	;# 
   943     0797                     	;# 
   944     0798                     	;# 
   945     0799                     	;# 
   946     079A                     	;# 
   947     079B                     	;# 
   948     080C                     	;# 
   949     080D                     	;# 
   950     080E                     	;# 
   951     080F                     	;# 
   952     0810                     	;# 
   953     0811                     	;# 
   954     0812                     	;# 
   955     0813                     	;# 
   956     0814                     	;# 
   957     081A                     	;# 
   958     081B                     	;# 
   959     081C                     	;# 
   960     081D                     	;# 
   961     081E                     	;# 
   962     081F                     	;# 
   963     088C                     	;# 
   964     088D                     	;# 
   965     088E                     	;# 
   966     088F                     	;# 
   967     0890                     	;# 
   968     0891                     	;# 
   969     0892                     	;# 
   970     0893                     	;# 
   971     0895                     	;# 
   972     0896                     	;# 
   973     0897                     	;# 
   974     0898                     	;# 
   975     0899                     	;# 
   976     089A                     	;# 
   977     089B                     	;# 
   978     090C                     	;# 
   979     090E                     	;# 
   980     090F                     	;# 
   981     091F                     	;# 
   982     091F                     	;# 
   983     098F                     	;# 
   984     098F                     	;# 
   985     0990                     	;# 
   986     0991                     	;# 
   987     0992                     	;# 
   988     0993                     	;# 
   989     0994                     	;# 
   990     0995                     	;# 
   991     0996                     	;# 
   992     0997                     	;# 
   993     0E0F                     	;# 
   994     0E10                     	;# 
   995     0E11                     	;# 
   996     0E12                     	;# 
   997     0E13                     	;# 
   998     0E14                     	;# 
   999     0E15                     	;# 
  1000     0E16                     	;# 
  1001     0E17                     	;# 
  1002     0E18                     	;# 
  1003     0E19                     	;# 
  1004     0E1A                     	;# 
  1005     0E1B                     	;# 
  1006     0E1C                     	;# 
  1007     0E1D                     	;# 
  1008     0E1E                     	;# 
  1009     0E1F                     	;# 
  1010     0E20                     	;# 
  1011     0E21                     	;# 
  1012     0E22                     	;# 
  1013     0E23                     	;# 
  1014     0E24                     	;# 
  1015     0E25                     	;# 
  1016     0E26                     	;# 
  1017     0E27                     	;# 
  1018     0E28                     	;# 
  1019     0E29                     	;# 
  1020     0E2A                     	;# 
  1021     0E2B                     	;# 
  1022     0E2C                     	;# 
  1023     0E2D                     	;# 
  1024     0E2E                     	;# 
  1025     0E2F                     	;# 
  1026     0E30                     	;# 
  1027     0E31                     	;# 
  1028     0E32                     	;# 
  1029     0E33                     	;# 
  1030     0E34                     	;# 
  1031     0E35                     	;# 
  1032     0E36                     	;# 
  1033     0E37                     	;# 
  1034     0E8F                     	;# 
  1035     0E90                     	;# 
  1036     0E91                     	;# 
  1037     0E92                     	;# 
  1038     0E93                     	;# 
  1039     0E94                     	;# 
  1040     0E95                     	;# 
  1041     0E96                     	;# 
  1042     0E97                     	;# 
  1043     0E9C                     	;# 
  1044     0E9D                     	;# 
  1045     0E9E                     	;# 
  1046     0EA1                     	;# 
  1047     0EA2                     	;# 
  1048     0EA3                     	;# 
  1049     0EA4                     	;# 
  1050     0EA5                     	;# 
  1051     0EA9                     	;# 
  1052     0EAA                     	;# 
  1053     0EAB                     	;# 
  1054     0EAC                     	;# 
  1055     0EB1                     	;# 
  1056     0EB2                     	;# 
  1057     0EB3                     	;# 
  1058     0EB8                     	;# 
  1059     0EB9                     	;# 
  1060     0EBA                     	;# 
  1061     0EBB                     	;# 
  1062     0EBC                     	;# 
  1063     0EBD                     	;# 
  1064     0EBE                     	;# 
  1065     0EC3                     	;# 
  1066     0EC5                     	;# 
  1067     0EC6                     	;# 
  1068     0EC7                     	;# 
  1069     0EC8                     	;# 
  1070     0EC9                     	;# 
  1071     0ECA                     	;# 
  1072     0ECB                     	;# 
  1073     0ECC                     	;# 
  1074     0F10                     	;# 
  1075     0F11                     	;# 
  1076     0F12                     	;# 
  1077     0F13                     	;# 
  1078     0F14                     	;# 
  1079     0F15                     	;# 
  1080     0F16                     	;# 
  1081     0F17                     	;# 
  1082     0F18                     	;# 
  1083     0F19                     	;# 
  1084     0F1A                     	;# 
  1085     0F1B                     	;# 
  1086     0F1C                     	;# 
  1087     0F1D                     	;# 
  1088     0F1E                     	;# 
  1089     0F1F                     	;# 
  1090     0F20                     	;# 
  1091     0F21                     	;# 
  1092     0F22                     	;# 
  1093     0F23                     	;# 
  1094     0F24                     	;# 
  1095     0F25                     	;# 
  1096     0F26                     	;# 
  1097     0F27                     	;# 
  1098     0F38                     	;# 
  1099     0F39                     	;# 
  1100     0F3A                     	;# 
  1101     0F3B                     	;# 
  1102     0F3C                     	;# 
  1103     0F3D                     	;# 
  1104     0F3E                     	;# 
  1105     0F3F                     	;# 
  1106     0F40                     	;# 
  1107     0F41                     	;# 
  1108     0F43                     	;# 
  1109     0F44                     	;# 
  1110     0F45                     	;# 
  1111     0F46                     	;# 
  1112     0F47                     	;# 
  1113     0F48                     	;# 
  1114     0F49                     	;# 
  1115     0F4A                     	;# 
  1116     0F4B                     	;# 
  1117     0F4C                     	;# 
  1118     0F4E                     	;# 
  1119     0F4F                     	;# 
  1120     0F50                     	;# 
  1121     0F51                     	;# 
  1122     0F52                     	;# 
  1123     0F53                     	;# 
  1124     0F54                     	;# 
  1125     0F55                     	;# 
  1126     0F56                     	;# 
  1127     0F57                     	;# 
  1128     0F65                     	;# 
  1129     0F68                     	;# 
  1130     0F69                     	;# 
  1131     0F6A                     	;# 
  1132     0F6B                     	;# 
  1133     0FE4                     	;# 
  1134     0FE5                     	;# 
  1135     0FE6                     	;# 
  1136     0FE7                     	;# 
  1137     0FE8                     	;# 
  1138     0FE9                     	;# 
  1139     0FEA                     	;# 
  1140     0FEB                     	;# 
  1141     0FED                     	;# 
  1142     0FEE                     	;# 
  1143     0FEF                     	;# 
  1144                           
  1145                           	psect	idataCOMMON
  1146     07FC                     __pidataCOMMON:
  1147                           
  1148                           ;initializer for _cycle
  1149     07FC  344B               	retlw	75
  1150     07FD  342E               	retlw	46
  1151                           
  1152                           ;initializer for _frequency
  1153     07FE  348C               	retlw	140
  1154     07FF  340A               	retlw	10
  1155                           
  1156                           	psect	idataBANK0
  1157     0A4F                     __pidataBANK0:
  1158                           
  1159                           ;initializer for _CONTROL_OUTPUT
  1160     0A4F  3401               	retlw	1
  1161     0A50  3400               	retlw	0
  1162                           
  1163                           ;initializer for _GREEN
  1164     0A51  3403               	retlw	3
  1165                           
  1166                           ;initializer for _BLUE
  1167     0A52  3402               	retlw	2
  1168                           
  1169                           ;initializer for _RED
  1170     0A53  3401               	retlw	1
  1171                           
  1172                           ;initializer for _newI2CMessage
  1173     0A54  3401               	retlw	1
  1174                           
  1175                           	psect	idataBANK1
  1176     0C3B                     __pidataBANK1:
  1177                           
  1178                           ;initializer for _SWITCH_MID
  1179     0C3B  34DC               	retlw	220
  1180     0C3C  3405               	retlw	5
  1181                           
  1182                           ;initializer for _SWITCH_MIN
  1183     0C3D  34E8               	retlw	232
  1184     0C3E  3403               	retlw	3
  1185                           
  1186                           ;initializer for _SWITCH_MAX
  1187     0C3F  34D0               	retlw	208
  1188     0C40  3407               	retlw	7
  1189                           
  1190                           ;initializer for _TurnRightCommand
  1191     0C41  34FE               	retlw	254
  1192     0C42  3419               	retlw	25
  1193     0C43  3401               	retlw	1
  1194     0C44  3406               	retlw	6
  1195     0C45  3404               	retlw	4
  1196     0C46  3400               	retlw	0
  1197     0C47  3402               	retlw	2
  1198     0C48  3432               	retlw	50
  1199     0C49  3401               	retlw	1
  1200     0C4A  3432               	retlw	50
  1201                           
  1202                           ;initializer for _TurnLeftCommand
  1203     0C4B  34FE               	retlw	254
  1204     0C4C  3419               	retlw	25
  1205     0C4D  3401               	retlw	1
  1206     0C4E  3406               	retlw	6
  1207     0C4F  3404               	retlw	4
  1208     0C50  3400               	retlw	0
  1209     0C51  3401               	retlw	1
  1210     0C52  3432               	retlw	50
  1211     0C53  3402               	retlw	2
  1212     0C54  3432               	retlw	50
  1213                           
  1214                           ;initializer for _ProcessOreCommand
  1215     0C55  34FE               	retlw	254
  1216     0C56  3419               	retlw	25
  1217     0C57  3403               	retlw	3
  1218     0C58  340A               	retlw	10
  1219     0C59  3401               	retlw	1
  1220     0C5A  3400               	retlw	0
  1221     0C5B  3401               	retlw	1
  1222                           
  1223                           ;initializer for _FireLaserCommand
  1224     0C5C  34FE               	retlw	254
  1225     0C5D  3419               	retlw	25
  1226     0C5E  3401               	retlw	1
  1227     0C5F  3409               	retlw	9
  1228     0C60  3401               	retlw	1
  1229     0C61  3400               	retlw	0
  1230     0C62  3402               	retlw	2
  1231                           
  1232                           ;initializer for _GetUserDataCommand
  1233     0C63  34FE               	retlw	254
  1234     0C64  3419               	retlw	25
  1235     0C65  3401               	retlw	1
  1236     0C66  3405               	retlw	5
  1237     0C67  3400               	retlw	0
  1238     0C68  3400               	retlw	0
  1239                           
  1240                           	psect	idataBANK2
  1241     07D7                     __pidataBANK2:
  1242                           
  1243                           ;initializer for _EnableLaserScopeCommand
  1244     07D7  34FE               	retlw	254
  1245     07D8  3419               	retlw	25
  1246     07D9  3401               	retlw	1
  1247     07DA  3408               	retlw	8
  1248     07DB  3401               	retlw	1
  1249     07DC  3400               	retlw	0
  1250     07DD  3401               	retlw	1
  1251                           
  1252                           ;initializer for _Break
  1253     07DE  34FE               	retlw	254
  1254     07DF  3419               	retlw	25
  1255     07E0  3401               	retlw	1
  1256     07E1  3406               	retlw	6
  1257     07E2  3404               	retlw	4
  1258     07E3  3400               	retlw	0
  1259     07E4  3400               	retlw	0
  1260     07E5  3400               	retlw	0
  1261     07E6  3400               	retlw	0
  1262     07E7  3400               	retlw	0
  1263                           
  1264                           ;initializer for _MoveBackwardCommand
  1265     07E8  34FE               	retlw	254
  1266     07E9  3419               	retlw	25
  1267     07EA  3401               	retlw	1
  1268     07EB  3406               	retlw	6
  1269     07EC  3404               	retlw	4
  1270     07ED  3400               	retlw	0
  1271     07EE  3402               	retlw	2
  1272     07EF  3432               	retlw	50
  1273     07F0  3402               	retlw	2
  1274     07F1  3432               	retlw	50
  1275                           
  1276                           ;initializer for _MoveForwardCommand
  1277     07F2  34FE               	retlw	254
  1278     07F3  3419               	retlw	25
  1279     07F4  3401               	retlw	1
  1280     07F5  3406               	retlw	6
  1281     07F6  3404               	retlw	4
  1282     07F7  3400               	retlw	0
  1283     07F8  3401               	retlw	1
  1284     07F9  3432               	retlw	50
  1285     07FA  3401               	retlw	1
  1286     07FB  3432               	retlw	50
  1287                           
  1288                           	psect	stringtext1
  1289     1000                     __pstringtext1:
  1290     1000                     _LASER_COMMAND:
  1291     1000  3403               	retlw	3
  1292     1001  3400               	retlw	0
  1293     1002                     __end_of_LASER_COMMAND:
  1294                           
  1295                           	psect	stringtext2
  1296     1002                     __pstringtext2:
  1297     1002                     _DRIVE_COMMAND:
  1298     1002  3402               	retlw	2
  1299     1003  3400               	retlw	0
  1300     1004                     __end_of_DRIVE_COMMAND:
  1301                           
  1302                           	psect	stringtext3
  1303     1004                     __pstringtext3:
  1304     1004                     _CONTROL_INPUT:
  1305     1004  3401               	retlw	1
  1306     1005  3400               	retlw	0
  1307     1006                     __end_of_CONTROL_INPUT:
  1308     0017                     _LATBbits	set	23
  1309     000B                     _INTCONbits	set	11
  1310     0011                     _TRISAbits	set	17
  1311     0016                     _LATAbits	set	22
  1312     0012                     _TRISBbits	set	18
  1313     0013                     _TRISCbits	set	19
  1314     011A                     _TX1REGbits	set	282
  1315     0119                     _RCREG	set	281
  1316     011D                     _RC1STAbits	set	285
  1317     011B                     _SP1BRGLbits	set	283
  1318     011E                     _TX1STAbits	set	286
  1319     011F                     _BAUD1CONbits	set	287
  1320     018C                     _SSP1BUFbits	set	396
  1321     0191                     _SSP1CON2bits	set	401
  1322     018C                     _SSP1BUF	set	396
  1323     0190                     _SSP1CON1	set	400
  1324     018D                     _SSP1ADD	set	397
  1325     0719                     _PIE3bits	set	1817
  1326     070F                     _PIR3bits	set	1807
  1327     090F                     _DAC1CON1bits	set	2319
  1328     090E                     _DAC1CON0bits	set	2318
  1329     0ECB                     _RXPPSbits	set	3787
  1330     0EC6                     _SSP1DATPPSbits	set	3782
  1331     0EC5                     _SSP1CLKPPSbits	set	3781
  1332     0F25                     _RC5PPS	set	3877
  1333     0F38                     _ANSELAbits	set	3896
  1334     0F43                     _ANSELBbits	set	3907
  1335     0F4F                     _WPUCbits	set	3919
  1336     0F4E                     _ANSELCbits	set	3918
  1337     0F24                     _RC4PPS	set	3876
  1338     0F23                     _RC3PPS	set	3875
  1339                           
  1340                           	psect	cinit
  1341     008B                     start_initialization:	
  1342                           ; #config settings
  1343                           
  1344     008B                     __initialization:
  1345                           
  1346                           ; Initialize objects allocated to COMMON
  1347     008B  30FC               	movlw	low __pidataCOMMON
  1348     008C  0084               	movwf	4
  1349     008D  3087               	movlw	(high __pidataCOMMON)| (0+128)
  1350     008E  0085               	movwf	5
  1351     008F  3079               	movlw	low __pdataCOMMON
  1352     0090  0086               	movwf	6
  1353     0091  3000               	movlw	high __pdataCOMMON
  1354     0092  0087               	movwf	7
  1355     0093  3004               	movlw	4
  1356     0094  318A  2249  3180   	fcall	init_ram
  1357                           
  1358                           ; Initialize objects allocated to BANK0
  1359     0097  304F               	movlw	low __pidataBANK0
  1360     0098  0084               	movwf	4
  1361     0099  308A               	movlw	(high __pidataBANK0)| (0+128)
  1362     009A  0085               	movwf	5
  1363     009B  3069               	movlw	low __pdataBANK0
  1364     009C  0086               	movwf	6
  1365     009D  3000               	movlw	high __pdataBANK0
  1366     009E  0087               	movwf	7
  1367     009F  3006               	movlw	6
  1368     00A0  318A  2249  3180   	fcall	init_ram
  1369                           
  1370                           ; Initialize objects allocated to BANK1
  1371     00A3  303B               	movlw	low __pidataBANK1
  1372     00A4  0084               	movwf	4
  1373     00A5  308C               	movlw	(high __pidataBANK1)| (0+128)
  1374     00A6  0085               	movwf	5
  1375     00A7  30A0               	movlw	low __pdataBANK1
  1376     00A8  0086               	movwf	6
  1377     00A9  3000               	movlw	high __pdataBANK1
  1378     00AA  0087               	movwf	7
  1379     00AB  302E               	movlw	46
  1380     00AC  318A  2249  3180   	fcall	init_ram
  1381                           
  1382                           ; Initialize objects allocated to BANK2
  1383     00AF  30D7               	movlw	low __pidataBANK2
  1384     00B0  0084               	movwf	4
  1385     00B1  3087               	movlw	(high __pidataBANK2)| (0+128)
  1386     00B2  0085               	movwf	5
  1387     00B3  3020               	movlw	low __pdataBANK2
  1388     00B4  0086               	movwf	6
  1389     00B5  3001               	movlw	high __pdataBANK2
  1390     00B6  0087               	movwf	7
  1391     00B7  3025               	movlw	37
  1392     00B8  318A  2249  3180   	fcall	init_ram
  1393                           
  1394                           ; Clear objects allocated to BANK0
  1395     00BB  3055               	movlw	low __pbssBANK0
  1396     00BC  0084               	movwf	4
  1397     00BD  3000               	movlw	high __pbssBANK0
  1398     00BE  0085               	movwf	5
  1399     00BF  3014               	movlw	20
  1400     00C0  318A  2243  3180   	fcall	clear_ram0
  1401                           
  1402                           ; Clear objects allocated to BANK1
  1403     00C3  30CE               	movlw	low __pbssBANK1
  1404     00C4  0084               	movwf	4
  1405     00C5  3000               	movlw	high __pbssBANK1
  1406     00C6  0085               	movwf	5
  1407     00C7  301C               	movlw	28
  1408     00C8  318A  2243  3180   	fcall	clear_ram0
  1409                           
  1410                           ; Clear objects allocated to BANK2
  1411     00CB  3045               	movlw	low __pbssBANK2
  1412     00CC  0084               	movwf	4
  1413     00CD  3001               	movlw	high __pbssBANK2
  1414     00CE  0085               	movwf	5
  1415     00CF  301B               	movlw	27
  1416     00D0  318A  2243  3180   	fcall	clear_ram0
  1417                           
  1418                           ; Clear objects allocated to BANK3
  1419     00D3  30A0               	movlw	low __pbssBANK3
  1420     00D4  0084               	movwf	4
  1421     00D5  3001               	movlw	high __pbssBANK3
  1422     00D6  0085               	movwf	5
  1423     00D7  3016               	movlw	22
  1424     00D8  318A  2243  3180   	fcall	clear_ram0
  1425     00DB                     end_of_initialization:	
  1426                           ;End of C runtime variable initialization code
  1427                           
  1428     00DB                     __end_of__initialization:
  1429     00DB  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1430     00DC  0020               	movlb	0
  1431     00DD  3186  2EAD         	ljmp	_main	;jump to C main() function
  1432                           
  1433                           	psect	dataCOMMON
  1434     0079                     __pdataCOMMON:
  1435     0079                     _cycle:
  1436     0079                     	ds	2
  1437     007B                     _frequency:
  1438     007B                     	ds	2
  1439                           
  1440                           	psect	bssBANK0
  1441     0055                     __pbssBANK0:
  1442     0055                     _currentCommand:
  1443     0055                     	ds	15
  1444     0064                     _currentInput:
  1445     0064                     	ds	2
  1446     0066                     _I2CStage:
  1447     0066                     	ds	2
  1448     0068                     _color:
  1449     0068                     	ds	1
  1450                           
  1451                           	psect	dataBANK0
  1452     0069                     __pdataBANK0:
  1453     0069                     _CONTROL_OUTPUT:
  1454     0069                     	ds	2
  1455     006B                     _GREEN:
  1456     006B                     	ds	1
  1457     006C                     _BLUE:
  1458     006C                     	ds	1
  1459     006D                     _RED:
  1460     006D                     	ds	1
  1461     006E                     _newI2CMessage:
  1462     006E                     	ds	1
  1463                           
  1464                           	psect	bssBANK1
  1465     00CE                     __pbssBANK1:
  1466     00CE                     _controls:
  1467     00CE                     	ds	22
  1468     00E4                     _counter:
  1469     00E4                     	ds	2
  1470     00E6                     _commandIt:
  1471     00E6                     	ds	2
  1472     00E8                     _inputStage:
  1473     00E8                     	ds	2
  1474                           
  1475                           	psect	dataBANK1
  1476     00A0                     __pdataBANK1:
  1477     00A0                     _SWITCH_MID:
  1478     00A0                     	ds	2
  1479     00A2                     _SWITCH_MIN:
  1480     00A2                     	ds	2
  1481     00A4                     _SWITCH_MAX:
  1482     00A4                     	ds	2
  1483     00A6                     _TurnRightCommand:
  1484     00A6                     	ds	10
  1485     00B0                     _TurnLeftCommand:
  1486     00B0                     	ds	10
  1487     00BA                     _ProcessOreCommand:
  1488     00BA                     	ds	7
  1489     00C1                     _FireLaserCommand:
  1490     00C1                     	ds	7
  1491     00C8                     _GetUserDataCommand:
  1492     00C8                     	ds	6
  1493                           
  1494                           	psect	bssBANK2
  1495     0145                     __pbssBANK2:
  1496     0145                     _Command:
  1497     0145                     	ds	15
  1498     0154                     _colors:
  1499     0154                     	ds	12
  1500                           
  1501                           	psect	dataBANK2
  1502     0120                     __pdataBANK2:
  1503     0120                     _EnableLaserScopeCommand:
  1504     0120                     	ds	7
  1505     0127                     _Break:
  1506     0127                     	ds	10
  1507     0131                     _MoveBackwardCommand:
  1508     0131                     	ds	10
  1509     013B                     _MoveForwardCommand:
  1510     013B                     	ds	10
  1511                           
  1512                           	psect	bssBANK3
  1513     01A0                     __pbssBANK3:
  1514     01A0                     _Controls:
  1515     01A0                     	ds	22
  1516                           
  1517                           	psect	inittext
  1518     0A49                     init_ram:
  1519     0A49  00FE               	movwf	btemp
  1520     0A4A                     initloop:
  1521     0A4A  0012               	moviw fsr0++
  1522     0A4B  001E               	movwi fsr1++
  1523     0A4C  0BFE               	decfsz	btemp,f
  1524     0A4D  2A4A               	goto	initloop
  1525     0A4E  3400               	retlw	0
  1526                           
  1527                           	psect	clrtext
  1528     0A43                     clear_ram0:	
  1529                           ;	Called with FSR0 containing the base address, and
  1530                           ;	WREG with the size to clear
  1531                           
  1532     0A43  0064               	clrwdt	;clear the watchdog before getting into this loop
  1533     0A44                     clrloop0:
  1534     0A44  0180               	clrf	0	;clear RAM location pointed to by FSR
  1535     0A45  3101               	addfsr 0,1
  1536     0A46  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1537     0A47  2A44               	goto	clrloop0	;have we reached the end yet?
  1538     0A48  3400               	retlw	0	;all done for this memory range, return
  1539                           
  1540                           	psect	cstackCOMMON
  1541     0070                     __pcstackCOMMON:
  1542     0070                     ?_StartIC2Transmission:
  1543     0070                     ?_StartWriteRequest:	
  1544                           ; 1 bytes @ 0x0
  1545                           
  1546     0070                     ?_RepeatedStart:	
  1547                           ; 1 bytes @ 0x0
  1548                           
  1549     0070                     ?_StartReadRequest:	
  1550                           ; 1 bytes @ 0x0
  1551                           
  1552     0070                     ?_EndIC2Transmission:	
  1553                           ; 1 bytes @ 0x0
  1554                           
  1555     0070                     ?_SetUpPumpArm:	
  1556                           ; 1 bytes @ 0x0
  1557                           
  1558     0070                     ?_SetUpPump:	
  1559                           ; 1 bytes @ 0x0
  1560                           
  1561     0070                     ?_CreateControlsCommand:	
  1562                           ; 1 bytes @ 0x0
  1563                           
  1564     0070                     ?_drive:	
  1565                           ; 1 bytes @ 0x0
  1566                           
  1567     0070                     ?_CreateLaserCommand:	
  1568                           ; 1 bytes @ 0x0
  1569                           
  1570     0070                     ?_CreateProcessCommand:	
  1571                           ; 1 bytes @ 0x0
  1572                           
  1573     0070                     ?_CreateBreak:	
  1574                           ; 1 bytes @ 0x0
  1575                           
  1576     0070                     ?_SetUpI2CPins:	
  1577                           ; 1 bytes @ 0x0
  1578                           
  1579     0070                     ?_SetUpIC2Clock:	
  1580                           ; 1 bytes @ 0x0
  1581                           
  1582     0070                     ?_SetUpI2C:	
  1583                           ; 1 bytes @ 0x0
  1584                           
  1585     0070                     ?_SetUpAnalog:	
  1586                           ; 1 bytes @ 0x0
  1587                           
  1588     0070                     ?_Reset:	
  1589                           ; 1 bytes @ 0x0
  1590                           
  1591     0070                     ?_StartI2C:	
  1592                           ; 1 bytes @ 0x0
  1593                           
  1594     0070                     ?_EndI2C:	
  1595                           ; 1 bytes @ 0x0
  1596                           
  1597     0070                     ?_WriteI2C:	
  1598                           ; 1 bytes @ 0x0
  1599                           
  1600     0070                     ?_ReadAddressI2C:	
  1601                           ; 1 bytes @ 0x0
  1602                           
  1603     0070                     ?_ReadI2C:	
  1604                           ; 1 bytes @ 0x0
  1605                           
  1606     0070                     ?_RepeatI2C:	
  1607                           ; 1 bytes @ 0x0
  1608                           
  1609     0070                     ?_IncrementColorStage:	
  1610                           ; 1 bytes @ 0x0
  1611                           
  1612     0070                     ?_GetValueAndEndI2C:	
  1613                           ; 1 bytes @ 0x0
  1614                           
  1615     0070                     ?_PlayTune:	
  1616                           ; 1 bytes @ 0x0
  1617                           
  1618     0070                     ?_SetUpColorSensor:	
  1619                           ; 1 bytes @ 0x0
  1620                           
  1621     0070                     ?_main:	
  1622                           ; 1 bytes @ 0x0
  1623                           
  1624     0070                     ?_GetControllerInput:	
  1625                           ; 1 bytes @ 0x0
  1626                           
  1627     0070                     ?_myFunction:	
  1628                           ; 1 bytes @ 0x0
  1629                           
  1630     0070                     GetControllerInput@input:	
  1631                           ; 1 bytes @ 0x0
  1632                           
  1633                           
  1634                           ; 2 bytes @ 0x0
  1635     0070                     	ds	2
  1636     0072                     ??_GetControllerInput:
  1637                           
  1638                           ; 1 bytes @ 0x2
  1639     0072                     	ds	3
  1640     0075                     ??_myFunction:
  1641                           
  1642                           ; 1 bytes @ 0x5
  1643     0075                     	ds	2
  1644     0077                     myFunction@input:
  1645                           
  1646                           ; 2 bytes @ 0x7
  1647     0077                     	ds	2
  1648                           
  1649                           	psect	cstackBANK0
  1650     0020                     __pcstackBANK0:
  1651     0020                     ??_StartIC2Transmission:
  1652     0020                     ??_StartWriteRequest:	
  1653                           ; 1 bytes @ 0x0
  1654                           
  1655     0020                     ??_RepeatedStart:	
  1656                           ; 1 bytes @ 0x0
  1657                           
  1658     0020                     ??_StartReadRequest:	
  1659                           ; 1 bytes @ 0x0
  1660                           
  1661     0020                     ??_EndIC2Transmission:	
  1662                           ; 1 bytes @ 0x0
  1663                           
  1664     0020                     ??_SetUpPumpArm:	
  1665                           ; 1 bytes @ 0x0
  1666                           
  1667     0020                     ??_SetUpPump:	
  1668                           ; 1 bytes @ 0x0
  1669                           
  1670     0020                     ??_CreateControlsCommand:	
  1671                           ; 1 bytes @ 0x0
  1672                           
  1673     0020                     ?_MovePumpArm:	
  1674                           ; 1 bytes @ 0x0
  1675                           
  1676     0020                     ?_ActivatePump:	
  1677                           ; 1 bytes @ 0x0
  1678                           
  1679     0020                     ??_CreateLaserCommand:	
  1680                           ; 1 bytes @ 0x0
  1681                           
  1682     0020                     ??_CreateProcessCommand:	
  1683                           ; 1 bytes @ 0x0
  1684                           
  1685     0020                     ?_CreateTurnRightCommmand:	
  1686                           ; 1 bytes @ 0x0
  1687                           
  1688     0020                     ?_CreateTurnLeftCommmand:	
  1689                           ; 1 bytes @ 0x0
  1690                           
  1691     0020                     ?_CreateMoveForwardCommmand:	
  1692                           ; 1 bytes @ 0x0
  1693                           
  1694     0020                     ?_CreateMoveBackwardCommmand:	
  1695                           ; 1 bytes @ 0x0
  1696                           
  1697     0020                     ??_CreateBreak:	
  1698                           ; 1 bytes @ 0x0
  1699                           
  1700     0020                     ??_SetUpI2CPins:	
  1701                           ; 1 bytes @ 0x0
  1702                           
  1703     0020                     ??_SetUpIC2Clock:	
  1704                           ; 1 bytes @ 0x0
  1705                           
  1706     0020                     ??_SetUpI2C:	
  1707                           ; 1 bytes @ 0x0
  1708                           
  1709     0020                     ??_SetUpAnalog:	
  1710                           ; 1 bytes @ 0x0
  1711                           
  1712     0020                     ?_SelectColourRegister:	
  1713                           ; 1 bytes @ 0x0
  1714                           
  1715     0020                     ??_Reset:	
  1716                           ; 1 bytes @ 0x0
  1717                           
  1718     0020                     ??_StartI2C:	
  1719                           ; 1 bytes @ 0x0
  1720                           
  1721     0020                     ??_EndI2C:	
  1722                           ; 1 bytes @ 0x0
  1723                           
  1724     0020                     ??_WriteI2C:	
  1725                           ; 1 bytes @ 0x0
  1726                           
  1727     0020                     ??_ReadAddressI2C:	
  1728                           ; 1 bytes @ 0x0
  1729                           
  1730     0020                     ??_ReadI2C:	
  1731                           ; 1 bytes @ 0x0
  1732                           
  1733     0020                     ??_RepeatI2C:	
  1734                           ; 1 bytes @ 0x0
  1735                           
  1736     0020                     ??_IncrementColorStage:	
  1737                           ; 1 bytes @ 0x0
  1738                           
  1739     0020                     ?_LoadTemp:	
  1740                           ; 1 bytes @ 0x0
  1741                           
  1742     0020                     ??_PlayTune:	
  1743                           ; 1 bytes @ 0x0
  1744                           
  1745     0020                     ?__Umul8_16:	
  1746                           ; 1 bytes @ 0x0
  1747                           
  1748     0020                     ?_SetUp:	
  1749                           ; 2 bytes @ 0x0
  1750                           
  1751     0020                     ?___awmod:	
  1752                           ; 2 bytes @ 0x0
  1753                           
  1754     0020                     ?___xxtofl:	
  1755                           ; 2 bytes @ 0x0
  1756                           
  1757     0020                     Reset@colors:	
  1758                           ; 4 bytes @ 0x0
  1759                           
  1760     0020                     IncrementColorStage@colors:	
  1761                           ; 1 bytes @ 0x0
  1762                           
  1763     0020                     LoadTemp@value:	
  1764                           ; 1 bytes @ 0x0
  1765                           
  1766     0020                     __Umul8_16@multiplicand:	
  1767                           ; 1 bytes @ 0x0
  1768                           
  1769     0020                     SelectColourRegister@colorStage:	
  1770                           ; 1 bytes @ 0x0
  1771                           
  1772     0020                     CreateTurnRightCommmand@pwm:	
  1773                           ; 2 bytes @ 0x0
  1774                           
  1775     0020                     CreateTurnLeftCommmand@pwm:	
  1776                           ; 2 bytes @ 0x0
  1777                           
  1778     0020                     CreateMoveForwardCommmand@pwm:	
  1779                           ; 2 bytes @ 0x0
  1780                           
  1781     0020                     CreateMoveBackwardCommmand@pwm:	
  1782                           ; 2 bytes @ 0x0
  1783                           
  1784     0020                     MovePumpArm@switchValue:	
  1785                           ; 2 bytes @ 0x0
  1786                           
  1787     0020                     ActivatePump@switchValue:	
  1788                           ; 2 bytes @ 0x0
  1789                           
  1790     0020                     ___awmod@divisor:	
  1791                           ; 2 bytes @ 0x0
  1792                           
  1793     0020                     ___xxtofl@val:	
  1794                           ; 2 bytes @ 0x0
  1795                           
  1796                           
  1797                           ; 4 bytes @ 0x0
  1798     0020                     	ds	1
  1799     0021                     ??_LoadTemp:
  1800     0021                     ?_ReadColorReady:	
  1801                           ; 1 bytes @ 0x1
  1802                           
  1803     0021                     LoadTemp@colors:	
  1804                           ; 1 bytes @ 0x1
  1805                           
  1806     0021                     ReadColorReady@buffer:	
  1807                           ; 1 bytes @ 0x1
  1808                           
  1809     0021                     PlayTune@color:	
  1810                           ; 1 bytes @ 0x1
  1811                           
  1812                           
  1813                           ; 1 bytes @ 0x1
  1814     0021                     	ds	1
  1815     0022                     ??_MovePumpArm:
  1816     0022                     ??_ActivatePump:	
  1817                           ; 1 bytes @ 0x2
  1818                           
  1819     0022                     ??_CreateTurnRightCommmand:	
  1820                           ; 1 bytes @ 0x2
  1821                           
  1822     0022                     ??_CreateTurnLeftCommmand:	
  1823                           ; 1 bytes @ 0x2
  1824                           
  1825     0022                     ??_CreateMoveForwardCommmand:	
  1826                           ; 1 bytes @ 0x2
  1827                           
  1828     0022                     ??_CreateMoveBackwardCommmand:	
  1829                           ; 1 bytes @ 0x2
  1830                           
  1831     0022                     ??__Umul8_16:	
  1832                           ; 1 bytes @ 0x2
  1833                           
  1834     0022                     ??_SetUp:	
  1835                           ; 1 bytes @ 0x2
  1836                           
  1837     0022                     ??_SelectColourRegister:	
  1838                           ; 1 bytes @ 0x2
  1839                           
  1840     0022                     ??_ReadColorReady:	
  1841                           ; 1 bytes @ 0x2
  1842                           
  1843     0022                     SelectColourRegister@writeValue:	
  1844                           ; 1 bytes @ 0x2
  1845                           
  1846     0022                     ReadColorReady@colors:	
  1847                           ; 1 bytes @ 0x2
  1848                           
  1849     0022                     ___awmod@dividend:	
  1850                           ; 1 bytes @ 0x2
  1851                           
  1852                           
  1853                           ; 2 bytes @ 0x2
  1854     0022                     	ds	1
  1855     0023                     ??_GetValueAndEndI2C:
  1856     0023                     GetValueAndEndI2C@value:	
  1857                           ; 1 bytes @ 0x3
  1858                           
  1859                           
  1860                           ; 1 bytes @ 0x3
  1861     0023                     	ds	1
  1862     0024                     ??___awmod:
  1863     0024                     ??___xxtofl:	
  1864                           ; 1 bytes @ 0x4
  1865                           
  1866     0024                     GetValueAndEndI2C@colors:	
  1867                           ; 1 bytes @ 0x4
  1868                           
  1869     0024                     SetUp@value:	
  1870                           ; 1 bytes @ 0x4
  1871                           
  1872     0024                     __Umul8_16@product:	
  1873                           ; 2 bytes @ 0x4
  1874                           
  1875                           
  1876                           ; 2 bytes @ 0x4
  1877     0024                     	ds	1
  1878     0025                     ___awmod@counter:
  1879                           
  1880                           ; 1 bytes @ 0x5
  1881     0025                     	ds	1
  1882     0026                     ??_SetUpColorSensor:
  1883     0026                     ___awmod@sign:	
  1884                           ; 1 bytes @ 0x6
  1885                           
  1886     0026                     __Umul8_16@word_mpld:	
  1887                           ; 1 bytes @ 0x6
  1888                           
  1889                           
  1890                           ; 2 bytes @ 0x6
  1891     0026                     	ds	1
  1892     0027                     ?_UpdateColors:
  1893     0027                     UpdateColors@stageValue:	
  1894                           ; 1 bytes @ 0x7
  1895                           
  1896                           
  1897                           ; 2 bytes @ 0x7
  1898     0027                     	ds	1
  1899     0028                     __Umul8_16@multiplier:
  1900     0028                     ___xxtofl@sign:	
  1901                           ; 1 bytes @ 0x8
  1902                           
  1903     0028                     SetUpColorSensor@result:	
  1904                           ; 1 bytes @ 0x8
  1905                           
  1906                           
  1907                           ; 2 bytes @ 0x8
  1908     0028                     	ds	1
  1909     0029                     ??_UpdateColors:
  1910     0029                     ___xxtofl@exp:	
  1911                           ; 1 bytes @ 0x9
  1912                           
  1913                           
  1914                           ; 1 bytes @ 0x9
  1915     0029                     	ds	1
  1916     002A                     ___xxtofl@arg:
  1917                           
  1918                           ; 4 bytes @ 0xA
  1919     002A                     	ds	1
  1920     002B                     UpdateColors@colors:
  1921                           
  1922                           ; 1 bytes @ 0xB
  1923     002B                     	ds	1
  1924     002C                     ?_ColorSensor:
  1925     002C                     ColorSensor@I2CStage:	
  1926                           ; 1 bytes @ 0xC
  1927                           
  1928                           
  1929                           ; 1 bytes @ 0xC
  1930     002C                     	ds	1
  1931     002D                     ColorSensor@colors:
  1932                           
  1933                           ; 1 bytes @ 0xD
  1934     002D                     	ds	1
  1935     002E                     ?___flmul:
  1936     002E                     ColorSensor@color:	
  1937                           ; 4 bytes @ 0xE
  1938                           
  1939     002E                     ___flmul@b:	
  1940                           ; 1 bytes @ 0xE
  1941                           
  1942                           
  1943                           ; 4 bytes @ 0xE
  1944     002E                     	ds	1
  1945     002F                     ??_ColorSensor:
  1946                           
  1947                           ; 1 bytes @ 0xF
  1948     002F                     	ds	3
  1949     0032                     ___flmul@a:
  1950                           
  1951                           ; 4 bytes @ 0x12
  1952     0032                     	ds	2
  1953     0034                     ColorSensor@newI2CMessage:
  1954                           
  1955                           ; 1 bytes @ 0x14
  1956     0034                     	ds	2
  1957     0036                     ??___flmul:
  1958                           
  1959                           ; 1 bytes @ 0x16
  1960     0036                     	ds	5
  1961     003B                     ___flmul@sign:
  1962                           
  1963                           ; 1 bytes @ 0x1B
  1964     003B                     	ds	1
  1965     003C                     ___flmul@grs:
  1966                           
  1967                           ; 4 bytes @ 0x1C
  1968     003C                     	ds	4
  1969     0040                     ___flmul@aexp:
  1970                           
  1971                           ; 1 bytes @ 0x20
  1972     0040                     	ds	1
  1973     0041                     ___flmul@bexp:
  1974                           
  1975                           ; 1 bytes @ 0x21
  1976     0041                     	ds	1
  1977     0042                     ___flmul@prod:
  1978                           
  1979                           ; 4 bytes @ 0x22
  1980     0042                     	ds	4
  1981     0046                     ___flmul@temp:
  1982                           
  1983                           ; 2 bytes @ 0x26
  1984     0046                     	ds	2
  1985     0048                     ?___fltol:
  1986     0048                     ___fltol@f1:	
  1987                           ; 4 bytes @ 0x28
  1988                           
  1989                           
  1990                           ; 4 bytes @ 0x28
  1991     0048                     	ds	4
  1992     004C                     ??___fltol:
  1993                           
  1994                           ; 1 bytes @ 0x2C
  1995     004C                     	ds	4
  1996     0050                     ___fltol@sign1:
  1997                           
  1998                           ; 1 bytes @ 0x30
  1999     0050                     	ds	1
  2000     0051                     ___fltol@exp1:
  2001                           
  2002                           ; 1 bytes @ 0x31
  2003     0051                     	ds	1
  2004     0052                     ??_drive:
  2005                           
  2006                           ; 1 bytes @ 0x32
  2007     0052                     	ds	1
  2008     0053                     drive@power:
  2009                           
  2010                           ; 2 bytes @ 0x33
  2011     0053                     	ds	2
  2012     0055                     ??_main:
  2013                           
  2014                           	psect	maintext
  2015     06AD                     __pmaintext:	
  2016                           ; 1 bytes @ 0x35
  2017 ;;
  2018 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2019 ;;
  2020 ;; *************** function _main *****************
  2021 ;; Defined at:
  2022 ;;		line 131 in file "motorMain.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;		None
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;		None
  2027 ;; Return value:  Size  Location     Type
  2028 ;;                  1    wreg      void 
  2029 ;; Registers used:
  2030 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2031 ;; Tracked objects:
  2032 ;;		On entry : B1F/0
  2033 ;;		On exit  : 0/0
  2034 ;;		Unchanged: 0/0
  2035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2040 ;;Total ram usage:        0 bytes
  2041 ;; Hardware stack levels required when called: 7
  2042 ;; This function calls:
  2043 ;;		_ActivatePump
  2044 ;;		_ColorSensor
  2045 ;;		_CreateControlsCommand
  2046 ;;		_CreateLaserCommand
  2047 ;;		_CreateProcessCommand
  2048 ;;		_MovePumpArm
  2049 ;;		_SetUpAnalog
  2050 ;;		_SetUpColorSensor
  2051 ;;		_SetUpPump
  2052 ;;		_SetUpPumpArm
  2053 ;;		_drive
  2054 ;; This function is called by:
  2055 ;;		Startup code after reset
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059     06AD                     _main:	
  2060                           ;psect for function _main
  2061                           
  2062     06AD                     l3181:	
  2063                           ;incstack = 0
  2064                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2065                           
  2066                           
  2067                           ;motorMain.c: 133:    TRISAbits.TRISA5 = 1;
  2068     06AD  0020               	movlb	0	; select bank0
  2069     06AE  1691               	bsf	17,5	;volatile
  2070                           
  2071                           ;motorMain.c: 134:     ANSELAbits.ANSA5 = 0;
  2072     06AF  003E               	movlb	30	; select bank30
  2073     06B0  12B8               	bcf	56,5	;volatile
  2074                           
  2075                           ;motorMain.c: 136:     TRISAbits.TRISA0 = 0;
  2076     06B1  0020               	movlb	0	; select bank0
  2077     06B2  1011               	bcf	17,0	;volatile
  2078                           
  2079                           ;motorMain.c: 137:     TRISAbits.TRISA1 = 0;
  2080     06B3  1091               	bcf	17,1	;volatile
  2081                           
  2082                           ;motorMain.c: 138:     TRISAbits.TRISA2 = 0;
  2083     06B4  1111               	bcf	17,2	;volatile
  2084                           
  2085                           ;motorMain.c: 139:     TRISAbits.TRISA3 = 0;
  2086     06B5  1191               	bcf	17,3	;volatile
  2087                           
  2088                           ;motorMain.c: 142:     LATAbits.LATA0 = 0;
  2089     06B6  1016               	bcf	22,0	;volatile
  2090                           
  2091                           ;motorMain.c: 143:     LATAbits.LATA1 = 0;
  2092     06B7  1096               	bcf	22,1	;volatile
  2093                           
  2094                           ;motorMain.c: 144:     LATAbits.LATA2 = 0;
  2095     06B8  1116               	bcf	22,2	;volatile
  2096                           
  2097                           ;motorMain.c: 145:     LATAbits.LATA3 = 0;
  2098     06B9  1196               	bcf	22,3	;volatile
  2099     06BA                     l3183:
  2100                           
  2101                           ;motorMain.c: 147:     SetUpPumpArm();
  2102     06BA  318A  2297  3186   	fcall	_SetUpPumpArm
  2103                           
  2104                           ;motorMain.c: 148:     SetUpPump();
  2105     06BD  318A  228D  3186   	fcall	_SetUpPump
  2106     06C0                     l3185:
  2107                           
  2108                           ;motorMain.c: 150:     BAUD1CONbits.BRG16=1;
  2109     06C0  0022               	movlb	2	; select bank2
  2110     06C1  159F               	bsf	31,3	;volatile
  2111     06C2                     l3187:
  2112                           
  2113                           ;motorMain.c: 152:     TX1STAbits.BRGH = 0x1;
  2114     06C2  151E               	bsf	30,2	;volatile
  2115     06C3                     l3189:
  2116                           
  2117                           ;motorMain.c: 156:     RC5PPS = 0x10;
  2118     06C3  3010               	movlw	16
  2119     06C4  003E               	movlb	30	; select bank30
  2120     06C5  00A5               	movwf	37	;volatile
  2121     06C6                     l3191:
  2122                           
  2123                           ;motorMain.c: 157:     TRISCbits.TRISC5 = 0;
  2124     06C6  0020               	movlb	0	; select bank0
  2125     06C7  1293               	bcf	19,5	;volatile
  2126     06C8                     l3193:
  2127                           
  2128                           ;motorMain.c: 159:     RXPPSbits.RXPPS = 0x16;
  2129     06C8  003D               	movlb	29	; select bank29
  2130     06C9  084B               	movf	75,w	;volatile
  2131     06CA  39E0               	andlw	-32
  2132     06CB  3816               	iorlw	22
  2133     06CC  00CB               	movwf	75	;volatile
  2134     06CD                     l3195:
  2135                           
  2136                           ;motorMain.c: 160:     TRISCbits.TRISC6 = 1;
  2137     06CD  0020               	movlb	0	; select bank0
  2138     06CE  1713               	bsf	19,6	;volatile
  2139     06CF                     l3197:
  2140                           
  2141                           ;motorMain.c: 161:     ANSELCbits.ANSC6 = 0;
  2142     06CF  003E               	movlb	30	; select bank30
  2143     06D0  134E               	bcf	78,6	;volatile
  2144     06D1                     l3199:
  2145                           
  2146                           ;motorMain.c: 164:     SP1BRGLbits.SP1BRGL = 68;
  2147     06D1  3044               	movlw	68
  2148     06D2  0022               	movlb	2	; select bank2
  2149     06D3  009B               	movwf	27	;volatile
  2150     06D4                     l3201:
  2151                           
  2152                           ;motorMain.c: 166:     CreateControlsCommand();
  2153     06D4  318B  237A  3186   	fcall	_CreateControlsCommand
  2154     06D7                     l3203:
  2155                           
  2156                           ;motorMain.c: 169:     RC1STAbits.SPEN = 1;
  2157     06D7  0022               	movlb	2	; select bank2
  2158     06D8  179D               	bsf	29,7	;volatile
  2159     06D9                     l3205:
  2160                           
  2161                           ;motorMain.c: 170:     TX1STAbits.TXEN =1;
  2162     06D9  169E               	bsf	30,5	;volatile
  2163     06DA                     l3207:
  2164                           
  2165                           ;motorMain.c: 171:     TX1STAbits.SYNC=0;
  2166     06DA  121E               	bcf	30,4	;volatile
  2167     06DB                     l3209:
  2168                           
  2169                           ;motorMain.c: 173:     RC1STAbits.CREN = 1;
  2170     06DB  161D               	bsf	29,4	;volatile
  2171     06DC                     l3211:
  2172                           
  2173                           ;motorMain.c: 177:     SetUpAnalog();
  2174     06DC  318A  2255  3186   	fcall	_SetUpAnalog
  2175     06DF                     l3213:
  2176                           
  2177                           ;motorMain.c: 179:     SetUpColorSensor();
  2178     06DF  318D  25E8  3186   	fcall	_SetUpColorSensor
  2179     06E2                     l3215:
  2180                           
  2181                           ;motorMain.c: 185:     INTCONbits.PEIE = 1;
  2182     06E2  170B               	bsf	11,6	;volatile
  2183     06E3                     l3217:
  2184                           
  2185                           ;motorMain.c: 186:     PIE3bits.RCIE = 1;
  2186     06E3  002E               	movlb	14	; select bank14
  2187     06E4  1699               	bsf	25,5	;volatile
  2188     06E5                     l3219:
  2189                           
  2190                           ;motorMain.c: 187:     PIE3bits.TXIE = 1;
  2191     06E5  1619               	bsf	25,4	;volatile
  2192     06E6                     l3221:
  2193                           
  2194                           ;motorMain.c: 188:     PIE3bits.SSP1IE = 1;
  2195     06E6  1419               	bsf	25,0	;volatile
  2196     06E7                     l3223:
  2197                           
  2198                           ;motorMain.c: 189:     INTCONbits.GIE = 1;
  2199     06E7  178B               	bsf	11,7	;volatile
  2200     06E8                     l3225:
  2201                           
  2202                           ;motorMain.c: 195:         if(controls.switchA <= SWITCH_MIN){
  2203     06E8  3003               	movlw	3
  2204     06E9  0021               	movlb	1	; select bank1
  2205     06EA  0257               	subwf	((_controls+1)^(0+128)+8),w
  2206     06EB  30E9               	movlw	233
  2207     06EC  1903               	skipnz
  2208     06ED  0256               	subwf	(_controls^(0+128)+8),w
  2209     06EE  1803               	skipnc
  2210     06EF  2EF1               	goto	u2401
  2211     06F0  2EF2               	goto	u2400
  2212     06F1                     u2401:
  2213     06F1  2F1D               	goto	l3233
  2214     06F2                     u2400:
  2215     06F2                     l3227:
  2216                           
  2217                           ;motorMain.c: 197:             MovePumpArm(controls.switchC);
  2218     06F2  085B               	movf	((_controls+1)^(0+128)+12),w
  2219     06F3  0020               	movlb	0	; select bank0
  2220     06F4  00A1               	movwf	MovePumpArm@switchValue+1
  2221     06F5  0021               	movlb	1	; select bank1
  2222     06F6  085A               	movf	(_controls^(0+128)+12),w
  2223     06F7  0020               	movlb	0	; select bank0
  2224     06F8  00A0               	movwf	MovePumpArm@switchValue
  2225     06F9  318B  235F  3186   	fcall	_MovePumpArm
  2226                           
  2227                           ;motorMain.c: 198:             ActivatePump(controls.switchD);
  2228     06FC  0021               	movlb	1	; select bank1
  2229     06FD  085D               	movf	((_controls+1)^(0+128)+14),w
  2230     06FE  0020               	movlb	0	; select bank0
  2231     06FF  00A1               	movwf	ActivatePump@switchValue+1
  2232     0700  0021               	movlb	1	; select bank1
  2233     0701  085C               	movf	(_controls^(0+128)+14),w
  2234     0702  0020               	movlb	0	; select bank0
  2235     0703  00A0               	movwf	ActivatePump@switchValue
  2236     0704  318A  22D1  3186   	fcall	_ActivatePump
  2237     0707                     l3229:
  2238                           
  2239                           ;motorMain.c: 200:             if(controls.switchB <= SWITCH_MIN){
  2240     0707  3003               	movlw	3
  2241     0708  0021               	movlb	1	; select bank1
  2242     0709  0259               	subwf	((_controls+1)^(0+128)+10),w
  2243     070A  30E9               	movlw	233
  2244     070B  1903               	skipnz
  2245     070C  0258               	subwf	(_controls^(0+128)+10),w
  2246     070D  1803               	skipnc
  2247     070E  2F10               	goto	u2411
  2248     070F  2F11               	goto	u2410
  2249     0710                     u2411:
  2250     0710  2F2E               	goto	l3235
  2251     0711                     u2410:
  2252     0711                     l3231:
  2253                           
  2254                           ;motorMain.c: 201:                 ColorSensor(&newI2CMessage,&I2CStage,&colors,&color);
  2255     0711  3066               	movlw	(low (_I2CStage| 0))& (0+255)
  2256     0712  0020               	movlb	0	; select bank0
  2257     0713  00AC               	movwf	ColorSensor@I2CStage
  2258     0714  3054               	movlw	(low (_colors| (0+256)))& (0+255)
  2259     0715  00AD               	movwf	ColorSensor@colors
  2260     0716  3068               	movlw	(low (_color| 0))& (0+255)
  2261     0717  00AE               	movwf	ColorSensor@color
  2262     0718  306E               	movlw	(low (_newI2CMessage| 0))& (0+255)
  2263     0719  3184  247E  3186   	fcall	_ColorSensor
  2264     071C  2F2E               	goto	l3247
  2265     071D                     l3233:
  2266                           
  2267                           ;motorMain.c: 206:             MovePumpArm(SWITCH_MID);
  2268     071D  30DC               	movlw	220
  2269     071E  0020               	movlb	0	; select bank0
  2270     071F  00A0               	movwf	MovePumpArm@switchValue
  2271     0720  3005               	movlw	5
  2272     0721  00A1               	movwf	MovePumpArm@switchValue+1
  2273     0722  318B  235F  3186   	fcall	_MovePumpArm
  2274                           
  2275                           ;motorMain.c: 207:             ActivatePump(SWITCH_MAX);
  2276     0725  30D0               	movlw	208
  2277     0726  0020               	movlb	0	; select bank0
  2278     0727  00A0               	movwf	ActivatePump@switchValue
  2279     0728  3007               	movlw	7
  2280     0729  00A1               	movwf	ActivatePump@switchValue+1
  2281     072A  318A  22D1  3186   	fcall	_ActivatePump
  2282     072D  2F2E               	goto	l3247
  2283     072E                     l3235:
  2284     072E                     l3247:
  2285                           
  2286                           ;motorMain.c: 229:         if(currentCommand.done){
  2287     072E  0020               	movlb	0	; select bank0
  2288     072F  0863               	movf	_currentCommand+14,w
  2289     0730  1903               	btfsc	3,2
  2290     0731  2F33               	goto	u2421
  2291     0732  2F34               	goto	u2420
  2292     0733                     u2421:
  2293     0733  2EE8               	goto	l3225
  2294     0734                     u2420:
  2295     0734                     l3249:
  2296                           
  2297                           ;motorMain.c: 230:             if(currentCommand.sendId == CONTROL_INPUT){
  2298     0734  0359               	decf	_currentCommand+4,w
  2299     0735  045A               	iorwf	_currentCommand+5,w
  2300     0736  1D03               	btfss	3,2
  2301     0737  2F39               	goto	u2431
  2302     0738  2F3A               	goto	u2430
  2303     0739                     u2431:
  2304     0739  2F3E               	goto	l3253
  2305     073A                     u2430:
  2306     073A                     l3251:
  2307                           
  2308                           ;motorMain.c: 231:                 drive();
  2309     073A  3183  231A  3186   	fcall	_drive
  2310                           
  2311                           ;motorMain.c: 232:             }
  2312     073D  2EE8               	goto	l3225
  2313     073E                     l3253:
  2314     073E  3002               	movlw	2
  2315     073F  0659               	xorwf	_currentCommand+4,w
  2316     0740  045A               	iorwf	_currentCommand+5,w
  2317     0741  1D03               	btfss	3,2
  2318     0742  2F44               	goto	u2441
  2319     0743  2F45               	goto	u2440
  2320     0744                     u2441:
  2321     0744  2F60               	goto	l3263
  2322     0745                     u2440:
  2323     0745                     l3255:
  2324     0745  3007               	movlw	7
  2325     0746  0021               	movlb	1	; select bank1
  2326     0747  0257               	subwf	((_controls+1)^(0+128)+8),w
  2327     0748  30D0               	movlw	208
  2328     0749  1903               	skipnz
  2329     074A  0256               	subwf	(_controls^(0+128)+8),w
  2330     074B  1C03               	skipc
  2331     074C  2F4E               	goto	u2451
  2332     074D  2F4F               	goto	u2450
  2333     074E                     u2451:
  2334     074E  2F60               	goto	l3263
  2335     074F                     u2450:
  2336     074F                     l3257:
  2337                           
  2338                           ;motorMain.c: 234:                 if(controls.switchB <= SWITCH_MIN){
  2339     074F  3003               	movlw	3
  2340     0750  0259               	subwf	((_controls+1)^(0+128)+10),w
  2341     0751  30E9               	movlw	233
  2342     0752  1903               	skipnz
  2343     0753  0258               	subwf	(_controls^(0+128)+10),w
  2344     0754  1803               	skipnc
  2345     0755  2F57               	goto	u2461
  2346     0756  2F58               	goto	u2460
  2347     0757                     u2461:
  2348     0757  2F5C               	goto	l3261
  2349     0758                     u2460:
  2350     0758                     l3259:
  2351                           
  2352                           ;motorMain.c: 235:                     CreateLaserCommand();
  2353     0758  318B  2344  3186   	fcall	_CreateLaserCommand
  2354                           
  2355                           ;motorMain.c: 236:                 }
  2356     075B  2EE8               	goto	l3225
  2357     075C                     l3261:
  2358                           
  2359                           ;motorMain.c: 238:                     CreateProcessCommand();
  2360     075C  318C  2469  3186   	fcall	_CreateProcessCommand
  2361     075F  2EE8               	goto	l3225
  2362     0760                     l3263:
  2363                           
  2364                           ;motorMain.c: 242:                 CreateControlsCommand();
  2365     0760  318B  237A  3186   	fcall	_CreateControlsCommand
  2366     0763  2EE8               	goto	l3225
  2367     0764  3180  2889         	ljmp	start
  2368     0766                     __end_of_main:
  2369                           
  2370                           	psect	text1
  2371     031A                     __ptext1:	
  2372 ;; *************** function _drive *****************
  2373 ;; Defined at:
  2374 ;;		line 278 in file "motorMain.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;		None
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;  power           2   51[BANK0 ] unsigned int 
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  1    wreg      void 
  2381 ;; Registers used:
  2382 ;;		wreg, status,2, status,0, pclath, cstack
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2389 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2390 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2391 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2392 ;;Total ram usage:        3 bytes
  2393 ;; Hardware stack levels used: 1
  2394 ;; Hardware stack levels required when called: 4
  2395 ;; This function calls:
  2396 ;;		_CreateBreak
  2397 ;;		_CreateControlsCommand
  2398 ;;		_CreateMoveBackwardCommmand
  2399 ;;		_CreateMoveForwardCommmand
  2400 ;;		_CreateTurnLeftCommmand
  2401 ;;		_CreateTurnRightCommmand
  2402 ;;		___flmul
  2403 ;;		___fltol
  2404 ;;		___xxtofl
  2405 ;; This function is called by:
  2406 ;;		_main
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410     031A                     _drive:	
  2411                           ;psect for function _drive
  2412                           
  2413     031A                     l2901:	
  2414                           ;incstack = 0
  2415                           ; Regs used in _drive: [wreg+status,2+status,0+pclath+cstack]
  2416                           
  2417                           
  2418                           ;motorMain.c: 280:     unsigned int power = (controls.potentionmeterB - 0x3E8) * (100.0/
      +                          1000.00);
  2419     031A  0021               	movlb	1	; select bank1
  2420     031B  0860               	movf	(_controls^(0+128)+18),w
  2421     031C  3E18               	addlw	24
  2422     031D  0020               	movlb	0	; select bank0
  2423     031E  00A0               	movwf	___xxtofl@val
  2424     031F  30FC               	movlw	252
  2425     0320  0021               	movlb	1	; select bank1
  2426     0321  3D61               	addwfc	((_controls+1)^(0+128)+18),w
  2427     0322  0020               	movlb	0	; select bank0
  2428     0323  00A1               	movwf	___xxtofl@val+1
  2429     0324  01A2               	clrf	___xxtofl@val+2
  2430     0325  1BA1               	btfsc	___xxtofl@val+1,7
  2431     0326  03A2               	decf	___xxtofl@val+2,f
  2432     0327  0822               	movf	___xxtofl@val+2,w
  2433     0328  00A3               	movwf	___xxtofl@val+3
  2434     0329  3001               	movlw	1
  2435     032A  318E  26A6  3183   	fcall	___xxtofl
  2436     032D  0020               	movlb	0	; select bank0
  2437     032E  0823               	movf	?___xxtofl+3,w
  2438     032F  00B5               	movwf	___flmul@a+3
  2439     0330  0822               	movf	?___xxtofl+2,w
  2440     0331  00B4               	movwf	___flmul@a+2
  2441     0332  0821               	movf	?___xxtofl+1,w
  2442     0333  00B3               	movwf	___flmul@a+1
  2443     0334  0820               	movf	?___xxtofl,w
  2444     0335  00B2               	movwf	___flmul@a
  2445     0336  303D               	movlw	61
  2446     0337  00B1               	movwf	___flmul@b+3
  2447     0338  30CC               	movlw	204
  2448     0339  00B0               	movwf	___flmul@b+2
  2449     033A  30CC               	movlw	204
  2450     033B  00AF               	movwf	___flmul@b+1
  2451     033C  30CD               	movlw	205
  2452     033D  00AE               	movwf	___flmul@b
  2453     033E  3180  20DF  3183   	fcall	___flmul
  2454     0341  0020               	movlb	0	; select bank0
  2455     0342  0831               	movf	?___flmul+3,w
  2456     0343  00CB               	movwf	___fltol@f1+3
  2457     0344  0830               	movf	?___flmul+2,w
  2458     0345  00CA               	movwf	___fltol@f1+2
  2459     0346  082F               	movf	?___flmul+1,w
  2460     0347  00C9               	movwf	___fltol@f1+1
  2461     0348  082E               	movf	?___flmul,w
  2462     0349  00C8               	movwf	___fltol@f1
  2463     034A  3187  2766  3183   	fcall	___fltol
  2464     034D  0020               	movlb	0	; select bank0
  2465     034E  0849               	movf	?___fltol+1,w
  2466     034F  00D4               	movwf	drive@power+1
  2467     0350  0848               	movf	?___fltol,w
  2468     0351  00D3               	movwf	drive@power
  2469     0352                     l2903:
  2470                           
  2471                           ;motorMain.c: 282:     if((controls.rightX >= 0x6A4) && (controls.rightY >= 0x546 && con
      +                          trols.rightY <= 0x672)){
  2472     0352  0021               	movlb	1	; select bank1
  2473     0353  084F               	movf	(_controls+1)^(0+128),w
  2474     0354  3A80               	xorlw	128
  2475     0355  0020               	movlb	0	; select bank0
  2476     0356  00D2               	movwf	??_drive
  2477     0357  3086               	movlw	134
  2478     0358  0252               	subwf	??_drive,w
  2479     0359  1D03               	skipz
  2480     035A  2B5E               	goto	u2215
  2481     035B  30A4               	movlw	164
  2482     035C  0021               	movlb	1	; select bank1
  2483     035D  024E               	subwf	_controls^(0+128),w
  2484     035E                     u2215:
  2485     035E  1C03               	skipc
  2486     035F  2B61               	goto	u2211
  2487     0360  2B62               	goto	u2210
  2488     0361                     u2211:
  2489     0361  2B8B               	goto	l2911
  2490     0362                     u2210:
  2491     0362                     l2905:
  2492     0362  0021               	movlb	1	; select bank1
  2493     0363  0851               	movf	((_controls+1)^(0+128)+2),w
  2494     0364  3A80               	xorlw	128
  2495     0365  0020               	movlb	0	; select bank0
  2496     0366  00D2               	movwf	??_drive
  2497     0367  3085               	movlw	133
  2498     0368  0252               	subwf	??_drive,w
  2499     0369  1D03               	skipz
  2500     036A  2B6E               	goto	u2225
  2501     036B  3046               	movlw	70
  2502     036C  0021               	movlb	1	; select bank1
  2503     036D  0250               	subwf	(_controls^(0+128)+2),w
  2504     036E                     u2225:
  2505     036E  1C03               	skipc
  2506     036F  2B71               	goto	u2221
  2507     0370  2B72               	goto	u2220
  2508     0371                     u2221:
  2509     0371  2B8B               	goto	l2911
  2510     0372                     u2220:
  2511     0372                     l2907:
  2512     0372  0021               	movlb	1	; select bank1
  2513     0373  0851               	movf	((_controls+1)^(0+128)+2),w
  2514     0374  3A80               	xorlw	128
  2515     0375  0020               	movlb	0	; select bank0
  2516     0376  00D2               	movwf	??_drive
  2517     0377  3086               	movlw	134
  2518     0378  0252               	subwf	??_drive,w
  2519     0379  1D03               	skipz
  2520     037A  2B7E               	goto	u2235
  2521     037B  3073               	movlw	115
  2522     037C  0021               	movlb	1	; select bank1
  2523     037D  0250               	subwf	(_controls^(0+128)+2),w
  2524     037E                     u2235:
  2525     037E  1803               	skipnc
  2526     037F  2B81               	goto	u2231
  2527     0380  2B82               	goto	u2230
  2528     0381                     u2231:
  2529     0381  2B8B               	goto	l2911
  2530     0382                     u2230:
  2531     0382                     l2909:
  2532                           
  2533                           ;motorMain.c: 283:         CreateTurnRightCommmand(power);
  2534     0382  0020               	movlb	0	; select bank0
  2535     0383  0854               	movf	drive@power+1,w
  2536     0384  00A1               	movwf	CreateTurnRightCommmand@pwm+1
  2537     0385  0853               	movf	drive@power,w
  2538     0386  00A0               	movwf	CreateTurnRightCommmand@pwm
  2539     0387  318B  23B6  3183   	fcall	_CreateTurnRightCommmand
  2540                           
  2541                           ;motorMain.c: 284:     }else if((controls.rightX <= 0x514) && (controls.rightY >= 0x546 
      +                          && controls.rightY <= 0x672)){
  2542     038A  2C7D               	goto	l431
  2543     038B                     l2911:
  2544     038B  0021               	movlb	1	; select bank1
  2545     038C  084F               	movf	(_controls+1)^(0+128),w
  2546     038D  3A80               	xorlw	128
  2547     038E  0020               	movlb	0	; select bank0
  2548     038F  00D2               	movwf	??_drive
  2549     0390  3085               	movlw	133
  2550     0391  0252               	subwf	??_drive,w
  2551     0392  1D03               	skipz
  2552     0393  2B97               	goto	u2245
  2553     0394  3015               	movlw	21
  2554     0395  0021               	movlb	1	; select bank1
  2555     0396  024E               	subwf	_controls^(0+128),w
  2556     0397                     u2245:
  2557     0397  1803               	skipnc
  2558     0398  2B9A               	goto	u2241
  2559     0399  2B9B               	goto	u2240
  2560     039A                     u2241:
  2561     039A  2BC4               	goto	l2919
  2562     039B                     u2240:
  2563     039B                     l2913:
  2564     039B  0021               	movlb	1	; select bank1
  2565     039C  0851               	movf	((_controls+1)^(0+128)+2),w
  2566     039D  3A80               	xorlw	128
  2567     039E  0020               	movlb	0	; select bank0
  2568     039F  00D2               	movwf	??_drive
  2569     03A0  3085               	movlw	133
  2570     03A1  0252               	subwf	??_drive,w
  2571     03A2  1D03               	skipz
  2572     03A3  2BA7               	goto	u2255
  2573     03A4  3046               	movlw	70
  2574     03A5  0021               	movlb	1	; select bank1
  2575     03A6  0250               	subwf	(_controls^(0+128)+2),w
  2576     03A7                     u2255:
  2577     03A7  1C03               	skipc
  2578     03A8  2BAA               	goto	u2251
  2579     03A9  2BAB               	goto	u2250
  2580     03AA                     u2251:
  2581     03AA  2BC4               	goto	l2919
  2582     03AB                     u2250:
  2583     03AB                     l2915:
  2584     03AB  0021               	movlb	1	; select bank1
  2585     03AC  0851               	movf	((_controls+1)^(0+128)+2),w
  2586     03AD  3A80               	xorlw	128
  2587     03AE  0020               	movlb	0	; select bank0
  2588     03AF  00D2               	movwf	??_drive
  2589     03B0  3086               	movlw	134
  2590     03B1  0252               	subwf	??_drive,w
  2591     03B2  1D03               	skipz
  2592     03B3  2BB7               	goto	u2265
  2593     03B4  3073               	movlw	115
  2594     03B5  0021               	movlb	1	; select bank1
  2595     03B6  0250               	subwf	(_controls^(0+128)+2),w
  2596     03B7                     u2265:
  2597     03B7  1803               	skipnc
  2598     03B8  2BBA               	goto	u2261
  2599     03B9  2BBB               	goto	u2260
  2600     03BA                     u2261:
  2601     03BA  2BC4               	goto	l2919
  2602     03BB                     u2260:
  2603     03BB                     l2917:
  2604                           
  2605                           ;motorMain.c: 285:         CreateTurnLeftCommmand(power);
  2606     03BB  0020               	movlb	0	; select bank0
  2607     03BC  0854               	movf	drive@power+1,w
  2608     03BD  00A1               	movwf	CreateTurnLeftCommmand@pwm+1
  2609     03BE  0853               	movf	drive@power,w
  2610     03BF  00A0               	movwf	CreateTurnLeftCommmand@pwm
  2611     03C0  318B  2397  3183   	fcall	_CreateTurnLeftCommmand
  2612                           
  2613                           ;motorMain.c: 286:     }else if((controls.rightY >= 0x6A4) && (controls.rightX >= 0x546 
      +                          && controls.rightX <= 0x672)){
  2614     03C3  2C7D               	goto	l431
  2615     03C4                     l2919:
  2616     03C4  0021               	movlb	1	; select bank1
  2617     03C5  0851               	movf	((_controls+1)^(0+128)+2),w
  2618     03C6  3A80               	xorlw	128
  2619     03C7  0020               	movlb	0	; select bank0
  2620     03C8  00D2               	movwf	??_drive
  2621     03C9  3086               	movlw	134
  2622     03CA  0252               	subwf	??_drive,w
  2623     03CB  1D03               	skipz
  2624     03CC  2BD0               	goto	u2275
  2625     03CD  30A4               	movlw	164
  2626     03CE  0021               	movlb	1	; select bank1
  2627     03CF  0250               	subwf	(_controls^(0+128)+2),w
  2628     03D0                     u2275:
  2629     03D0  1C03               	skipc
  2630     03D1  2BD3               	goto	u2271
  2631     03D2  2BD4               	goto	u2270
  2632     03D3                     u2271:
  2633     03D3  2BFD               	goto	l2927
  2634     03D4                     u2270:
  2635     03D4                     l2921:
  2636     03D4  0021               	movlb	1	; select bank1
  2637     03D5  084F               	movf	(_controls+1)^(0+128),w
  2638     03D6  3A80               	xorlw	128
  2639     03D7  0020               	movlb	0	; select bank0
  2640     03D8  00D2               	movwf	??_drive
  2641     03D9  3085               	movlw	133
  2642     03DA  0252               	subwf	??_drive,w
  2643     03DB  1D03               	skipz
  2644     03DC  2BE0               	goto	u2285
  2645     03DD  3046               	movlw	70
  2646     03DE  0021               	movlb	1	; select bank1
  2647     03DF  024E               	subwf	_controls^(0+128),w
  2648     03E0                     u2285:
  2649     03E0  1C03               	skipc
  2650     03E1  2BE3               	goto	u2281
  2651     03E2  2BE4               	goto	u2280
  2652     03E3                     u2281:
  2653     03E3  2BFD               	goto	l2927
  2654     03E4                     u2280:
  2655     03E4                     l2923:
  2656     03E4  0021               	movlb	1	; select bank1
  2657     03E5  084F               	movf	(_controls+1)^(0+128),w
  2658     03E6  3A80               	xorlw	128
  2659     03E7  0020               	movlb	0	; select bank0
  2660     03E8  00D2               	movwf	??_drive
  2661     03E9  3086               	movlw	134
  2662     03EA  0252               	subwf	??_drive,w
  2663     03EB  1D03               	skipz
  2664     03EC  2BF0               	goto	u2295
  2665     03ED  3073               	movlw	115
  2666     03EE  0021               	movlb	1	; select bank1
  2667     03EF  024E               	subwf	_controls^(0+128),w
  2668     03F0                     u2295:
  2669     03F0  1803               	skipnc
  2670     03F1  2BF3               	goto	u2291
  2671     03F2  2BF4               	goto	u2290
  2672     03F3                     u2291:
  2673     03F3  2BFD               	goto	l2927
  2674     03F4                     u2290:
  2675     03F4                     l2925:
  2676                           
  2677                           ;motorMain.c: 287:         CreateMoveForwardCommmand(power);
  2678     03F4  0020               	movlb	0	; select bank0
  2679     03F5  0854               	movf	drive@power+1,w
  2680     03F6  00A1               	movwf	CreateMoveForwardCommmand@pwm+1
  2681     03F7  0853               	movf	drive@power,w
  2682     03F8  00A0               	movwf	CreateMoveForwardCommmand@pwm
  2683     03F9  318B  23F6  3183   	fcall	_CreateMoveForwardCommmand
  2684                           
  2685                           ;motorMain.c: 288:     }else if((controls.rightY <= 0x514) && (controls.rightX >= 0x546 
      +                          && controls.rightX <= 0x672)){
  2686     03FC  2C7D               	goto	l431
  2687     03FD                     l2927:
  2688     03FD  0021               	movlb	1	; select bank1
  2689     03FE  0851               	movf	((_controls+1)^(0+128)+2),w
  2690     03FF  3A80               	xorlw	128
  2691     0400  0020               	movlb	0	; select bank0
  2692     0401  00D2               	movwf	??_drive
  2693     0402  3085               	movlw	133
  2694     0403  0252               	subwf	??_drive,w
  2695     0404  1D03               	skipz
  2696     0405  2C09               	goto	u2305
  2697     0406  3015               	movlw	21
  2698     0407  0021               	movlb	1	; select bank1
  2699     0408  0250               	subwf	(_controls^(0+128)+2),w
  2700     0409                     u2305:
  2701     0409  1803               	skipnc
  2702     040A  2C0C               	goto	u2301
  2703     040B  2C0D               	goto	u2300
  2704     040C                     u2301:
  2705     040C  2C36               	goto	l2935
  2706     040D                     u2300:
  2707     040D                     l2929:
  2708     040D  0021               	movlb	1	; select bank1
  2709     040E  084F               	movf	(_controls+1)^(0+128),w
  2710     040F  3A80               	xorlw	128
  2711     0410  0020               	movlb	0	; select bank0
  2712     0411  00D2               	movwf	??_drive
  2713     0412  3085               	movlw	133
  2714     0413  0252               	subwf	??_drive,w
  2715     0414  1D03               	skipz
  2716     0415  2C19               	goto	u2315
  2717     0416  3046               	movlw	70
  2718     0417  0021               	movlb	1	; select bank1
  2719     0418  024E               	subwf	_controls^(0+128),w
  2720     0419                     u2315:
  2721     0419  1C03               	skipc
  2722     041A  2C1C               	goto	u2311
  2723     041B  2C1D               	goto	u2310
  2724     041C                     u2311:
  2725     041C  2C36               	goto	l2935
  2726     041D                     u2310:
  2727     041D                     l2931:
  2728     041D  0021               	movlb	1	; select bank1
  2729     041E  084F               	movf	(_controls+1)^(0+128),w
  2730     041F  3A80               	xorlw	128
  2731     0420  0020               	movlb	0	; select bank0
  2732     0421  00D2               	movwf	??_drive
  2733     0422  3086               	movlw	134
  2734     0423  0252               	subwf	??_drive,w
  2735     0424  1D03               	skipz
  2736     0425  2C29               	goto	u2325
  2737     0426  3073               	movlw	115
  2738     0427  0021               	movlb	1	; select bank1
  2739     0428  024E               	subwf	_controls^(0+128),w
  2740     0429                     u2325:
  2741     0429  1803               	skipnc
  2742     042A  2C2C               	goto	u2321
  2743     042B  2C2D               	goto	u2320
  2744     042C                     u2321:
  2745     042C  2C36               	goto	l2935
  2746     042D                     u2320:
  2747     042D                     l2933:
  2748                           
  2749                           ;motorMain.c: 289:         CreateMoveBackwardCommmand(power);
  2750     042D  0020               	movlb	0	; select bank0
  2751     042E  0854               	movf	drive@power+1,w
  2752     042F  00A1               	movwf	CreateMoveBackwardCommmand@pwm+1
  2753     0430  0853               	movf	drive@power,w
  2754     0431  00A0               	movwf	CreateMoveBackwardCommmand@pwm
  2755     0432  318B  23D5  3183   	fcall	_CreateMoveBackwardCommmand
  2756                           
  2757                           ;motorMain.c: 290:     }else if((controls.rightY >= 0x546 && controls.rightY <= 0x672) &
      +                          & (controls.rightX >= 0x546 && controls.rightX <= 0x672)){
  2758     0435  2C7D               	goto	l431
  2759     0436                     l2935:
  2760     0436  0021               	movlb	1	; select bank1
  2761     0437  0851               	movf	((_controls+1)^(0+128)+2),w
  2762     0438  3A80               	xorlw	128
  2763     0439  0020               	movlb	0	; select bank0
  2764     043A  00D2               	movwf	??_drive
  2765     043B  3085               	movlw	133
  2766     043C  0252               	subwf	??_drive,w
  2767     043D  1D03               	skipz
  2768     043E  2C42               	goto	u2335
  2769     043F  3046               	movlw	70
  2770     0440  0021               	movlb	1	; select bank1
  2771     0441  0250               	subwf	(_controls^(0+128)+2),w
  2772     0442                     u2335:
  2773     0442  1C03               	skipc
  2774     0443  2C45               	goto	u2331
  2775     0444  2C46               	goto	u2330
  2776     0445                     u2331:
  2777     0445  2C7A               	goto	l2945
  2778     0446                     u2330:
  2779     0446                     l2937:
  2780     0446  0021               	movlb	1	; select bank1
  2781     0447  0851               	movf	((_controls+1)^(0+128)+2),w
  2782     0448  3A80               	xorlw	128
  2783     0449  0020               	movlb	0	; select bank0
  2784     044A  00D2               	movwf	??_drive
  2785     044B  3086               	movlw	134
  2786     044C  0252               	subwf	??_drive,w
  2787     044D  1D03               	skipz
  2788     044E  2C52               	goto	u2345
  2789     044F  3073               	movlw	115
  2790     0450  0021               	movlb	1	; select bank1
  2791     0451  0250               	subwf	(_controls^(0+128)+2),w
  2792     0452                     u2345:
  2793     0452  1803               	skipnc
  2794     0453  2C55               	goto	u2341
  2795     0454  2C56               	goto	u2340
  2796     0455                     u2341:
  2797     0455  2C7A               	goto	l2945
  2798     0456                     u2340:
  2799     0456                     l2939:
  2800     0456  0021               	movlb	1	; select bank1
  2801     0457  084F               	movf	(_controls+1)^(0+128),w
  2802     0458  3A80               	xorlw	128
  2803     0459  0020               	movlb	0	; select bank0
  2804     045A  00D2               	movwf	??_drive
  2805     045B  3085               	movlw	133
  2806     045C  0252               	subwf	??_drive,w
  2807     045D  1D03               	skipz
  2808     045E  2C62               	goto	u2355
  2809     045F  3046               	movlw	70
  2810     0460  0021               	movlb	1	; select bank1
  2811     0461  024E               	subwf	_controls^(0+128),w
  2812     0462                     u2355:
  2813     0462  1C03               	skipc
  2814     0463  2C65               	goto	u2351
  2815     0464  2C66               	goto	u2350
  2816     0465                     u2351:
  2817     0465  2C7A               	goto	l2945
  2818     0466                     u2350:
  2819     0466                     l2941:
  2820     0466  0021               	movlb	1	; select bank1
  2821     0467  084F               	movf	(_controls+1)^(0+128),w
  2822     0468  3A80               	xorlw	128
  2823     0469  0020               	movlb	0	; select bank0
  2824     046A  00D2               	movwf	??_drive
  2825     046B  3086               	movlw	134
  2826     046C  0252               	subwf	??_drive,w
  2827     046D  1D03               	skipz
  2828     046E  2C72               	goto	u2365
  2829     046F  3073               	movlw	115
  2830     0470  0021               	movlb	1	; select bank1
  2831     0471  024E               	subwf	_controls^(0+128),w
  2832     0472                     u2365:
  2833     0472  1803               	skipnc
  2834     0473  2C75               	goto	u2361
  2835     0474  2C76               	goto	u2360
  2836     0475                     u2361:
  2837     0475  2C7A               	goto	l2945
  2838     0476                     u2360:
  2839     0476                     l2943:
  2840                           
  2841                           ;motorMain.c: 291:         CreateBreak();
  2842     0476  318B  2310  3183   	fcall	_CreateBreak
  2843                           
  2844                           ;motorMain.c: 292:     }
  2845     0479  2C7D               	goto	l431
  2846     047A                     l2945:
  2847                           
  2848                           ;motorMain.c: 294:         CreateControlsCommand();
  2849     047A  318B  237A  3183   	fcall	_CreateControlsCommand
  2850     047D                     l431:
  2851     047D  0008               	return
  2852     047E                     __end_of_drive:
  2853                           
  2854                           	psect	text2
  2855     0EA6                     __ptext2:	
  2856 ;; *************** function ___xxtofl *****************
  2857 ;; Defined at:
  2858 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  2859 ;; Parameters:    Size  Location     Type
  2860 ;;  sign            1    wreg     unsigned char 
  2861 ;;  val             4    0[BANK0 ] long 
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;  sign            1    8[BANK0 ] unsigned char 
  2864 ;;  arg             4   10[BANK0 ] unsigned long 
  2865 ;;  exp             1    9[BANK0 ] unsigned char 
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  4    0[BANK0 ] unsigned char 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2875 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2876 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2877 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2878 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2879 ;;Total ram usage:       14 bytes
  2880 ;; Hardware stack levels used: 1
  2881 ;; Hardware stack levels required when called: 2
  2882 ;; This function calls:
  2883 ;;		Nothing
  2884 ;; This function is called by:
  2885 ;;		_drive
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889     0EA6                     ___xxtofl:	
  2890                           ;psect for function ___xxtofl
  2891                           
  2892                           
  2893                           ;incstack = 0
  2894                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2895                           ;___xxtofl@sign stored from wreg
  2896     0EA6  0020               	movlb	0	; select bank0
  2897     0EA7  00A8               	movwf	___xxtofl@sign
  2898     0EA8                     l2769:
  2899     0EA8  0828               	movf	___xxtofl@sign,w
  2900     0EA9  1903               	btfsc	3,2
  2901     0EAA  2EAC               	goto	u1951
  2902     0EAB  2EAD               	goto	u1950
  2903     0EAC                     u1951:
  2904     0EAC  2EC1               	goto	l2775
  2905     0EAD                     u1950:
  2906     0EAD                     l2771:
  2907     0EAD  1FA3               	btfss	___xxtofl@val+3,7
  2908     0EAE  2EB0               	goto	u1961
  2909     0EAF  2EB1               	goto	u1960
  2910     0EB0                     u1961:
  2911     0EB0  2EC1               	goto	l2775
  2912     0EB1                     u1960:
  2913     0EB1                     l2773:
  2914     0EB1  0920               	comf	___xxtofl@val,w
  2915     0EB2  00AA               	movwf	___xxtofl@arg
  2916     0EB3  0921               	comf	___xxtofl@val+1,w
  2917     0EB4  00AB               	movwf	___xxtofl@arg+1
  2918     0EB5  0922               	comf	___xxtofl@val+2,w
  2919     0EB6  00AC               	movwf	___xxtofl@arg+2
  2920     0EB7  0923               	comf	___xxtofl@val+3,w
  2921     0EB8  00AD               	movwf	___xxtofl@arg+3
  2922     0EB9  0AAA               	incf	___xxtofl@arg,f
  2923     0EBA  1903               	skipnz
  2924     0EBB  0AAB               	incf	___xxtofl@arg+1,f
  2925     0EBC  1903               	skipnz
  2926     0EBD  0AAC               	incf	___xxtofl@arg+2,f
  2927     0EBE  1903               	skipnz
  2928     0EBF  0AAD               	incf	___xxtofl@arg+3,f
  2929     0EC0  2EC9               	goto	l1082
  2930     0EC1                     l2775:
  2931     0EC1  0823               	movf	___xxtofl@val+3,w
  2932     0EC2  00AD               	movwf	___xxtofl@arg+3
  2933     0EC3  0822               	movf	___xxtofl@val+2,w
  2934     0EC4  00AC               	movwf	___xxtofl@arg+2
  2935     0EC5  0821               	movf	___xxtofl@val+1,w
  2936     0EC6  00AB               	movwf	___xxtofl@arg+1
  2937     0EC7  0820               	movf	___xxtofl@val,w
  2938     0EC8  00AA               	movwf	___xxtofl@arg
  2939     0EC9                     l1082:
  2940     0EC9  0823               	movf	___xxtofl@val+3,w
  2941     0ECA  0422               	iorwf	___xxtofl@val+2,w
  2942     0ECB  0421               	iorwf	___xxtofl@val+1,w
  2943     0ECC  0420               	iorwf	___xxtofl@val,w
  2944     0ECD  1D03               	skipz
  2945     0ECE  2ED0               	goto	u1971
  2946     0ECF  2ED1               	goto	u1970
  2947     0ED0                     u1971:
  2948     0ED0  2EDA               	goto	l2781
  2949     0ED1                     u1970:
  2950     0ED1                     l2777:
  2951     0ED1  3000               	movlw	0
  2952     0ED2  00A3               	movwf	?___xxtofl+3
  2953     0ED3  3000               	movlw	0
  2954     0ED4  00A2               	movwf	?___xxtofl+2
  2955     0ED5  3000               	movlw	0
  2956     0ED6  00A1               	movwf	?___xxtofl+1
  2957     0ED7  3000               	movlw	0
  2958     0ED8  00A0               	movwf	?___xxtofl
  2959     0ED9  2F50               	goto	l1084
  2960     0EDA                     l2781:
  2961     0EDA  3096               	movlw	150
  2962     0EDB  00A9               	movwf	___xxtofl@exp
  2963     0EDC  2EE8               	goto	l2785
  2964     0EDD                     l2783:
  2965     0EDD  3001               	movlw	1
  2966     0EDE  00A4               	movwf	??___xxtofl
  2967     0EDF  0824               	movf	??___xxtofl,w
  2968     0EE0  07A9               	addwf	___xxtofl@exp,f
  2969     0EE1  3001               	movlw	1
  2970     0EE2                     u1985:
  2971     0EE2  36AD               	lsrf	___xxtofl@arg+3,f
  2972     0EE3  0CAC               	rrf	___xxtofl@arg+2,f
  2973     0EE4  0CAB               	rrf	___xxtofl@arg+1,f
  2974     0EE5  0CAA               	rrf	___xxtofl@arg,f
  2975     0EE6  0B89               	decfsz	9,f
  2976     0EE7  2EE2               	goto	u1985
  2977     0EE8                     l2785:
  2978     0EE8  30FE               	movlw	254
  2979     0EE9  052D               	andwf	___xxtofl@arg+3,w
  2980     0EEA  1D03               	btfss	3,2
  2981     0EEB  2EED               	goto	u1991
  2982     0EEC  2EEE               	goto	u1990
  2983     0EED                     u1991:
  2984     0EED  2EDD               	goto	l2783
  2985     0EEE                     u1990:
  2986     0EEE  2F02               	goto	l1088
  2987     0EEF                     l2787:
  2988     0EEF  3001               	movlw	1
  2989     0EF0  00A4               	movwf	??___xxtofl
  2990     0EF1  0824               	movf	??___xxtofl,w
  2991     0EF2  07A9               	addwf	___xxtofl@exp,f
  2992     0EF3                     l2789:
  2993     0EF3  3001               	movlw	1
  2994     0EF4  07AA               	addwf	___xxtofl@arg,f
  2995     0EF5  3000               	movlw	0
  2996     0EF6  3DAB               	addwfc	___xxtofl@arg+1,f
  2997     0EF7  3000               	movlw	0
  2998     0EF8  3DAC               	addwfc	___xxtofl@arg+2,f
  2999     0EF9  3000               	movlw	0
  3000     0EFA  3DAD               	addwfc	___xxtofl@arg+3,f
  3001     0EFB                     l2791:
  3002     0EFB  3001               	movlw	1
  3003     0EFC                     u2005:
  3004     0EFC  36AD               	lsrf	___xxtofl@arg+3,f
  3005     0EFD  0CAC               	rrf	___xxtofl@arg+2,f
  3006     0EFE  0CAB               	rrf	___xxtofl@arg+1,f
  3007     0EFF  0CAA               	rrf	___xxtofl@arg,f
  3008     0F00  0B89               	decfsz	9,f
  3009     0F01  2EFC               	goto	u2005
  3010     0F02                     l1088:
  3011     0F02  30FF               	movlw	255
  3012     0F03  052D               	andwf	___xxtofl@arg+3,w
  3013     0F04  1D03               	btfss	3,2
  3014     0F05  2F07               	goto	u2011
  3015     0F06  2F08               	goto	u2010
  3016     0F07                     u2011:
  3017     0F07  2EEF               	goto	l2787
  3018     0F08                     u2010:
  3019     0F08  2F12               	goto	l2795
  3020     0F09                     l2793:
  3021     0F09  3001               	movlw	1
  3022     0F0A  02A9               	subwf	___xxtofl@exp,f
  3023     0F0B  3001               	movlw	1
  3024     0F0C                     u2025:
  3025     0F0C  35AA               	lslf	___xxtofl@arg,f
  3026     0F0D  0DAB               	rlf	___xxtofl@arg+1,f
  3027     0F0E  0DAC               	rlf	___xxtofl@arg+2,f
  3028     0F0F  0DAD               	rlf	___xxtofl@arg+3,f
  3029     0F10  0B89               	decfsz	9,f
  3030     0F11  2F0C               	goto	u2025
  3031     0F12                     l2795:
  3032     0F12  1BAC               	btfsc	___xxtofl@arg+2,7
  3033     0F13  2F15               	goto	u2031
  3034     0F14  2F16               	goto	u2030
  3035     0F15                     u2031:
  3036     0F15  2F1C               	goto	l1095
  3037     0F16                     u2030:
  3038     0F16                     l2797:
  3039     0F16  3002               	movlw	2
  3040     0F17  0229               	subwf	___xxtofl@exp,w
  3041     0F18  1803               	skipnc
  3042     0F19  2F1B               	goto	u2041
  3043     0F1A  2F1C               	goto	u2040
  3044     0F1B                     u2041:
  3045     0F1B  2F09               	goto	l2793
  3046     0F1C                     u2040:
  3047     0F1C                     l1095:
  3048     0F1C  1829               	btfsc	___xxtofl@exp,0
  3049     0F1D  2F1F               	goto	u2051
  3050     0F1E  2F20               	goto	u2050
  3051     0F1F                     u2051:
  3052     0F1F  2F28               	goto	l1096
  3053     0F20                     u2050:
  3054     0F20                     l2799:
  3055     0F20  30FF               	movlw	255
  3056     0F21  05AA               	andwf	___xxtofl@arg,f
  3057     0F22  30FF               	movlw	255
  3058     0F23  05AB               	andwf	___xxtofl@arg+1,f
  3059     0F24  307F               	movlw	127
  3060     0F25  05AC               	andwf	___xxtofl@arg+2,f
  3061     0F26  30FF               	movlw	255
  3062     0F27  05AD               	andwf	___xxtofl@arg+3,f
  3063     0F28                     l1096:
  3064     0F28  1003               	clrc
  3065     0F29  0CA9               	rrf	___xxtofl@exp,f
  3066     0F2A                     l2801:
  3067     0F2A  0829               	movf	___xxtofl@exp,w
  3068     0F2B  00A4               	movwf	??___xxtofl
  3069     0F2C  01A5               	clrf	??___xxtofl+1
  3070     0F2D  01A6               	clrf	??___xxtofl+2
  3071     0F2E  01A7               	clrf	??___xxtofl+3
  3072     0F2F  3018               	movlw	24
  3073     0F30                     u2065:
  3074     0F30  35A4               	lslf	??___xxtofl,f
  3075     0F31  0DA5               	rlf	??___xxtofl+1,f
  3076     0F32  0DA6               	rlf	??___xxtofl+2,f
  3077     0F33  0DA7               	rlf	??___xxtofl+3,f
  3078     0F34                     u2060:
  3079     0F34  0B89               	decfsz	9,f
  3080     0F35  2F30               	goto	u2065
  3081     0F36  0824               	movf	??___xxtofl,w
  3082     0F37  04AA               	iorwf	___xxtofl@arg,f
  3083     0F38  0825               	movf	??___xxtofl+1,w
  3084     0F39  04AB               	iorwf	___xxtofl@arg+1,f
  3085     0F3A  0826               	movf	??___xxtofl+2,w
  3086     0F3B  04AC               	iorwf	___xxtofl@arg+2,f
  3087     0F3C  0827               	movf	??___xxtofl+3,w
  3088     0F3D  04AD               	iorwf	___xxtofl@arg+3,f
  3089     0F3E                     l2803:
  3090     0F3E  0828               	movf	___xxtofl@sign,w
  3091     0F3F  1903               	btfsc	3,2
  3092     0F40  2F42               	goto	u2071
  3093     0F41  2F43               	goto	u2070
  3094     0F42                     u2071:
  3095     0F42  2F48               	goto	l2809
  3096     0F43                     u2070:
  3097     0F43                     l2805:
  3098     0F43  1FA3               	btfss	___xxtofl@val+3,7
  3099     0F44  2F46               	goto	u2081
  3100     0F45  2F47               	goto	u2080
  3101     0F46                     u2081:
  3102     0F46  2F48               	goto	l2809
  3103     0F47                     u2080:
  3104     0F47                     l2807:
  3105     0F47  17AD               	bsf	___xxtofl@arg+3,7
  3106     0F48                     l2809:
  3107     0F48  082D               	movf	___xxtofl@arg+3,w
  3108     0F49  00A3               	movwf	?___xxtofl+3
  3109     0F4A  082C               	movf	___xxtofl@arg+2,w
  3110     0F4B  00A2               	movwf	?___xxtofl+2
  3111     0F4C  082B               	movf	___xxtofl@arg+1,w
  3112     0F4D  00A1               	movwf	?___xxtofl+1
  3113     0F4E  082A               	movf	___xxtofl@arg,w
  3114     0F4F  00A0               	movwf	?___xxtofl
  3115     0F50                     l1084:
  3116     0F50  0008               	return
  3117     0F51                     __end_of___xxtofl:
  3118                           
  3119                           	psect	text3
  3120     0766                     __ptext3:	
  3121 ;; *************** function ___fltol *****************
  3122 ;; Defined at:
  3123 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;  f1              4   40[BANK0 ] unsigned char 
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;  exp1            1   49[BANK0 ] unsigned char 
  3128 ;;  sign1           1   48[BANK0 ] unsigned char 
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  4   40[BANK0 ] long 
  3131 ;; Registers used:
  3132 ;;		wreg, status,2, status,0
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3138 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3139 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3140 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3141 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3142 ;;Total ram usage:       10 bytes
  3143 ;; Hardware stack levels used: 1
  3144 ;; Hardware stack levels required when called: 2
  3145 ;; This function calls:
  3146 ;;		Nothing
  3147 ;; This function is called by:
  3148 ;;		_drive
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152     0766                     ___fltol:	
  3153                           ;psect for function ___fltol
  3154                           
  3155     0766                     l2593:	
  3156                           ;incstack = 0
  3157                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3158                           
  3159     0766  1003               	clrc
  3160     0767  0020               	movlb	0	; select bank0
  3161     0768  0D4A               	rlf	___fltol@f1+2,w
  3162     0769  0D4B               	rlf	___fltol@f1+3,w
  3163     076A  00D1               	movwf	___fltol@exp1
  3164     076B  0851               	movf	___fltol@exp1,w
  3165     076C  1D03               	btfss	3,2
  3166     076D  2F6F               	goto	u1591
  3167     076E  2F70               	goto	u1590
  3168     076F                     u1591:
  3169     076F  2F79               	goto	l2599
  3170     0770                     u1590:
  3171     0770                     l2595:
  3172     0770  3000               	movlw	0
  3173     0771  00CB               	movwf	?___fltol+3
  3174     0772  3000               	movlw	0
  3175     0773  00CA               	movwf	?___fltol+2
  3176     0774  3000               	movlw	0
  3177     0775  00C9               	movwf	?___fltol+1
  3178     0776  3000               	movlw	0
  3179     0777  00C8               	movwf	?___fltol
  3180     0778  2FD6               	goto	l835
  3181     0779                     l2599:
  3182     0779  0848               	movf	___fltol@f1,w
  3183     077A  00CC               	movwf	??___fltol
  3184     077B  0849               	movf	___fltol@f1+1,w
  3185     077C  00CD               	movwf	??___fltol+1
  3186     077D  084A               	movf	___fltol@f1+2,w
  3187     077E  00CE               	movwf	??___fltol+2
  3188     077F  084B               	movf	___fltol@f1+3,w
  3189     0780  00CF               	movwf	??___fltol+3
  3190     0781  301F               	movlw	31
  3191     0782                     u1605:
  3192     0782  36CF               	lsrf	??___fltol+3,f
  3193     0783  0CCE               	rrf	??___fltol+2,f
  3194     0784  0CCD               	rrf	??___fltol+1,f
  3195     0785  0CCC               	rrf	??___fltol,f
  3196     0786                     u1600:
  3197     0786  0B89               	decfsz	9,f
  3198     0787  2F82               	goto	u1605
  3199     0788  084C               	movf	??___fltol,w
  3200     0789  00D0               	movwf	___fltol@sign1
  3201     078A                     l2601:
  3202     078A  17CA               	bsf	___fltol@f1+2,7
  3203     078B                     l2603:
  3204     078B  30FF               	movlw	255
  3205     078C  05C8               	andwf	___fltol@f1,f
  3206     078D  30FF               	movlw	255
  3207     078E  05C9               	andwf	___fltol@f1+1,f
  3208     078F  30FF               	movlw	255
  3209     0790  05CA               	andwf	___fltol@f1+2,f
  3210     0791  3000               	movlw	0
  3211     0792  05CB               	andwf	___fltol@f1+3,f
  3212     0793                     l2605:
  3213     0793  3096               	movlw	150
  3214     0794  02D1               	subwf	___fltol@exp1,f
  3215     0795                     l2607:
  3216     0795  1FD1               	btfss	___fltol@exp1,7
  3217     0796  2F98               	goto	u1611
  3218     0797  2F99               	goto	u1610
  3219     0798                     u1611:
  3220     0798  2FB1               	goto	l2617
  3221     0799                     u1610:
  3222     0799                     l2609:
  3223     0799  0851               	movf	___fltol@exp1,w
  3224     079A  3A80               	xorlw	128
  3225     079B  3E97               	addlw	151
  3226     079C  1803               	skipnc
  3227     079D  2F9F               	goto	u1621
  3228     079E  2FA0               	goto	u1620
  3229     079F                     u1621:
  3230     079F  2FA1               	goto	l2615
  3231     07A0                     u1620:
  3232     07A0  2F70               	goto	l2595
  3233     07A1                     l2615:
  3234     07A1  3001               	movlw	1
  3235     07A2                     u1635:
  3236     07A2  36CB               	lsrf	___fltol@f1+3,f
  3237     07A3  0CCA               	rrf	___fltol@f1+2,f
  3238     07A4  0CC9               	rrf	___fltol@f1+1,f
  3239     07A5  0CC8               	rrf	___fltol@f1,f
  3240     07A6  0B89               	decfsz	9,f
  3241     07A7  2FA2               	goto	u1635
  3242     07A8  3001               	movlw	1
  3243     07A9  00CC               	movwf	??___fltol
  3244     07AA  084C               	movf	??___fltol,w
  3245     07AB  07D1               	addwf	___fltol@exp1,f
  3246     07AC  1D03               	btfss	3,2
  3247     07AD  2FAF               	goto	u1641
  3248     07AE  2FB0               	goto	u1640
  3249     07AF                     u1641:
  3250     07AF  2FA1               	goto	l2615
  3251     07B0                     u1640:
  3252     07B0  2FC6               	goto	l2625
  3253     07B1                     l2617:
  3254     07B1  3020               	movlw	32
  3255     07B2  0251               	subwf	___fltol@exp1,w
  3256     07B3  1C03               	skipc
  3257     07B4  2FB6               	goto	u1651
  3258     07B5  2FB7               	goto	u1650
  3259     07B6                     u1651:
  3260     07B6  2FC1               	goto	l842
  3261     07B7                     u1650:
  3262     07B7  2F70               	goto	l2595
  3263     07B8                     l2623:
  3264     07B8  3001               	movlw	1
  3265     07B9                     u1665:
  3266     07B9  35C8               	lslf	___fltol@f1,f
  3267     07BA  0DC9               	rlf	___fltol@f1+1,f
  3268     07BB  0DCA               	rlf	___fltol@f1+2,f
  3269     07BC  0DCB               	rlf	___fltol@f1+3,f
  3270     07BD  0B89               	decfsz	9,f
  3271     07BE  2FB9               	goto	u1665
  3272     07BF  3001               	movlw	1
  3273     07C0  02D1               	subwf	___fltol@exp1,f
  3274     07C1                     l842:
  3275     07C1  0851               	movf	___fltol@exp1,w
  3276     07C2  1D03               	btfss	3,2
  3277     07C3  2FC5               	goto	u1671
  3278     07C4  2FC6               	goto	u1670
  3279     07C5                     u1671:
  3280     07C5  2FB8               	goto	l2623
  3281     07C6                     u1670:
  3282     07C6                     l2625:
  3283     07C6  0850               	movf	___fltol@sign1,w
  3284     07C7  1903               	btfsc	3,2
  3285     07C8  2FCA               	goto	u1681
  3286     07C9  2FCB               	goto	u1680
  3287     07CA                     u1681:
  3288     07CA  2FD6               	goto	l845
  3289     07CB                     u1680:
  3290     07CB                     l2627:
  3291     07CB  09C8               	comf	___fltol@f1,f
  3292     07CC  09C9               	comf	___fltol@f1+1,f
  3293     07CD  09CA               	comf	___fltol@f1+2,f
  3294     07CE  09CB               	comf	___fltol@f1+3,f
  3295     07CF  0AC8               	incf	___fltol@f1,f
  3296     07D0  1903               	skipnz
  3297     07D1  0AC9               	incf	___fltol@f1+1,f
  3298     07D2  1903               	skipnz
  3299     07D3  0ACA               	incf	___fltol@f1+2,f
  3300     07D4  1903               	skipnz
  3301     07D5  0ACB               	incf	___fltol@f1+3,f
  3302     07D6                     l845:
  3303     07D6                     l835:
  3304     07D6  0008               	return
  3305     07D7                     __end_of___fltol:
  3306                           
  3307                           	psect	text4
  3308     00DF                     __ptext4:	
  3309 ;; *************** function ___flmul *****************
  3310 ;; Defined at:
  3311 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;  b               4   14[BANK0 ] long 
  3314 ;;  a               4   18[BANK0 ] long 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  prod            4   34[BANK0 ] struct .
  3317 ;;  grs             4   28[BANK0 ] unsigned long 
  3318 ;;  temp            2   38[BANK0 ] struct .
  3319 ;;  bexp            1   33[BANK0 ] unsigned char 
  3320 ;;  aexp            1   32[BANK0 ] unsigned char 
  3321 ;;  sign            1   27[BANK0 ] unsigned char 
  3322 ;; Return value:  Size  Location     Type
  3323 ;;                  4   14[BANK0 ] unsigned char 
  3324 ;; Registers used:
  3325 ;;		wreg, status,2, status,0, pclath, cstack
  3326 ;; Tracked objects:
  3327 ;;		On entry : 0/0
  3328 ;;		On exit  : 0/0
  3329 ;;		Unchanged: 0/0
  3330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3331 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3332 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3333 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3334 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3335 ;;Total ram usage:       26 bytes
  3336 ;; Hardware stack levels used: 1
  3337 ;; Hardware stack levels required when called: 3
  3338 ;; This function calls:
  3339 ;;		__Umul8_16
  3340 ;; This function is called by:
  3341 ;;		_drive
  3342 ;; This function uses a non-reentrant model
  3343 ;;
  3344                           
  3345     00DF                     ___flmul:	
  3346                           ;psect for function ___flmul
  3347                           
  3348     00DF                     l2629:	
  3349                           ;incstack = 0
  3350                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  3351                           
  3352     00DF  0020               	movlb	0	; select bank0
  3353     00E0  0831               	movf	___flmul@b+3,w
  3354     00E1  3980               	andlw	128
  3355     00E2  00BB               	movwf	___flmul@sign
  3356     00E3                     l2631:
  3357     00E3  3531               	lslf	___flmul@b+3,w
  3358     00E4  00C1               	movwf	___flmul@bexp
  3359     00E5                     l2633:
  3360     00E5  1FB0               	btfss	___flmul@b+2,7
  3361     00E6  28E8               	goto	u1691
  3362     00E7  28E9               	goto	u1690
  3363     00E8                     u1691:
  3364     00E8  28EA               	goto	l2637
  3365     00E9                     u1690:
  3366     00E9                     l2635:
  3367     00E9  1441               	bsf	___flmul@bexp,0
  3368     00EA                     l2637:
  3369     00EA  0841               	movf	___flmul@bexp,w
  3370     00EB  1903               	btfsc	3,2
  3371     00EC  28EE               	goto	u1701
  3372     00ED  28EF               	goto	u1700
  3373     00EE                     u1701:
  3374     00EE  28FE               	goto	l2645
  3375     00EF                     u1700:
  3376     00EF                     l2639:
  3377     00EF  0A41               	incf	___flmul@bexp,w
  3378     00F0  1D03               	btfss	3,2
  3379     00F1  28F3               	goto	u1711
  3380     00F2  28F4               	goto	u1710
  3381     00F3                     u1711:
  3382     00F3  28FC               	goto	l2643
  3383     00F4                     u1710:
  3384     00F4                     l2641:
  3385     00F4  3000               	movlw	0
  3386     00F5  00B1               	movwf	___flmul@b+3
  3387     00F6  3000               	movlw	0
  3388     00F7  00B0               	movwf	___flmul@b+2
  3389     00F8  3000               	movlw	0
  3390     00F9  00AF               	movwf	___flmul@b+1
  3391     00FA  3000               	movlw	0
  3392     00FB  00AE               	movwf	___flmul@b
  3393     00FC                     l2643:
  3394     00FC  17B0               	bsf	___flmul@b+2,7
  3395     00FD  2906               	goto	l2647
  3396     00FE                     l2645:
  3397     00FE  3000               	movlw	0
  3398     00FF  00B1               	movwf	___flmul@b+3
  3399     0100  3000               	movlw	0
  3400     0101  00B0               	movwf	___flmul@b+2
  3401     0102  3000               	movlw	0
  3402     0103  00AF               	movwf	___flmul@b+1
  3403     0104  3000               	movlw	0
  3404     0105  00AE               	movwf	___flmul@b
  3405     0106                     l2647:
  3406     0106  0835               	movf	___flmul@a+3,w
  3407     0107  3980               	andlw	128
  3408     0108  00B6               	movwf	??___flmul
  3409     0109  0836               	movf	??___flmul,w
  3410     010A  06BB               	xorwf	___flmul@sign,f
  3411     010B                     l2649:
  3412     010B  3535               	lslf	___flmul@a+3,w
  3413     010C  00C0               	movwf	___flmul@aexp
  3414     010D                     l2651:
  3415     010D  1FB4               	btfss	___flmul@a+2,7
  3416     010E  2910               	goto	u1721
  3417     010F  2911               	goto	u1720
  3418     0110                     u1721:
  3419     0110  2912               	goto	l2655
  3420     0111                     u1720:
  3421     0111                     l2653:
  3422     0111  1440               	bsf	___flmul@aexp,0
  3423     0112                     l2655:
  3424     0112  0840               	movf	___flmul@aexp,w
  3425     0113  1903               	btfsc	3,2
  3426     0114  2916               	goto	u1731
  3427     0115  2917               	goto	u1730
  3428     0116                     u1731:
  3429     0116  2926               	goto	l2663
  3430     0117                     u1730:
  3431     0117                     l2657:
  3432     0117  0A40               	incf	___flmul@aexp,w
  3433     0118  1D03               	btfss	3,2
  3434     0119  291B               	goto	u1741
  3435     011A  291C               	goto	u1740
  3436     011B                     u1741:
  3437     011B  2924               	goto	l2661
  3438     011C                     u1740:
  3439     011C                     l2659:
  3440     011C  3000               	movlw	0
  3441     011D  00B5               	movwf	___flmul@a+3
  3442     011E  3000               	movlw	0
  3443     011F  00B4               	movwf	___flmul@a+2
  3444     0120  3000               	movlw	0
  3445     0121  00B3               	movwf	___flmul@a+1
  3446     0122  3000               	movlw	0
  3447     0123  00B2               	movwf	___flmul@a
  3448     0124                     l2661:
  3449     0124  17B4               	bsf	___flmul@a+2,7
  3450     0125  292E               	goto	l2665
  3451     0126                     l2663:
  3452     0126  3000               	movlw	0
  3453     0127  00B5               	movwf	___flmul@a+3
  3454     0128  3000               	movlw	0
  3455     0129  00B4               	movwf	___flmul@a+2
  3456     012A  3000               	movlw	0
  3457     012B  00B3               	movwf	___flmul@a+1
  3458     012C  3000               	movlw	0
  3459     012D  00B2               	movwf	___flmul@a
  3460     012E                     l2665:
  3461     012E  0840               	movf	___flmul@aexp,w
  3462     012F  1903               	btfsc	3,2
  3463     0130  2932               	goto	u1751
  3464     0131  2933               	goto	u1750
  3465     0132                     u1751:
  3466     0132  2938               	goto	l2669
  3467     0133                     u1750:
  3468     0133                     l2667:
  3469     0133  0841               	movf	___flmul@bexp,w
  3470     0134  1D03               	btfss	3,2
  3471     0135  2937               	goto	u1761
  3472     0136  2938               	goto	u1760
  3473     0137                     u1761:
  3474     0137  2941               	goto	l2673
  3475     0138                     u1760:
  3476     0138                     l2669:
  3477     0138  3000               	movlw	0
  3478     0139  00B1               	movwf	?___flmul+3
  3479     013A  3000               	movlw	0
  3480     013B  00B0               	movwf	?___flmul+2
  3481     013C  3000               	movlw	0
  3482     013D  00AF               	movwf	?___flmul+1
  3483     013E  3000               	movlw	0
  3484     013F  00AE               	movwf	?___flmul
  3485     0140  2B19               	goto	l1038
  3486     0141                     l2673:
  3487     0141  082E               	movf	___flmul@b,w
  3488     0142  00A0               	movwf	__Umul8_16@multiplicand
  3489     0143  0834               	movf	___flmul@a+2,w
  3490     0144  318C  2417  3180   	fcall	__Umul8_16
  3491     0147  0020               	movlb	0	; select bank0
  3492     0148  0821               	movf	?__Umul8_16+1,w
  3493     0149  00C7               	movwf	___flmul@temp+1
  3494     014A  0820               	movf	?__Umul8_16,w
  3495     014B  00C6               	movwf	___flmul@temp
  3496     014C                     l2675:
  3497     014C  0846               	movf	___flmul@temp,w
  3498     014D  00B6               	movwf	??___flmul
  3499     014E  01B7               	clrf	??___flmul+1
  3500     014F  01B8               	clrf	??___flmul+2
  3501     0150  01B9               	clrf	??___flmul+3
  3502     0151  0839               	movf	??___flmul+3,w
  3503     0152  00BF               	movwf	___flmul@grs+3
  3504     0153  0838               	movf	??___flmul+2,w
  3505     0154  00BE               	movwf	___flmul@grs+2
  3506     0155  0837               	movf	??___flmul+1,w
  3507     0156  00BD               	movwf	___flmul@grs+1
  3508     0157  0836               	movf	??___flmul,w
  3509     0158  00BC               	movwf	___flmul@grs
  3510     0159                     l2677:
  3511     0159  0847               	movf	___flmul@temp+1,w
  3512     015A  00B6               	movwf	??___flmul
  3513     015B  01B7               	clrf	??___flmul+1
  3514     015C  01B8               	clrf	??___flmul+2
  3515     015D  01B9               	clrf	??___flmul+3
  3516     015E  0839               	movf	??___flmul+3,w
  3517     015F  00C5               	movwf	___flmul@prod+3
  3518     0160  0838               	movf	??___flmul+2,w
  3519     0161  00C4               	movwf	___flmul@prod+2
  3520     0162  0837               	movf	??___flmul+1,w
  3521     0163  00C3               	movwf	___flmul@prod+1
  3522     0164  0836               	movf	??___flmul,w
  3523     0165  00C2               	movwf	___flmul@prod
  3524     0166  082F               	movf	___flmul@b+1,w
  3525     0167  00A0               	movwf	__Umul8_16@multiplicand
  3526     0168  0833               	movf	___flmul@a+1,w
  3527     0169  318C  2417  3180   	fcall	__Umul8_16
  3528     016C  0020               	movlb	0	; select bank0
  3529     016D  0821               	movf	?__Umul8_16+1,w
  3530     016E  00C7               	movwf	___flmul@temp+1
  3531     016F  0820               	movf	?__Umul8_16,w
  3532     0170  00C6               	movwf	___flmul@temp
  3533     0171                     l2679:
  3534     0171  0846               	movf	___flmul@temp,w
  3535     0172  00B6               	movwf	??___flmul
  3536     0173  01B7               	clrf	??___flmul+1
  3537     0174  01B8               	clrf	??___flmul+2
  3538     0175  01B9               	clrf	??___flmul+3
  3539     0176  0836               	movf	??___flmul,w
  3540     0177  07BC               	addwf	___flmul@grs,f
  3541     0178  0837               	movf	??___flmul+1,w
  3542     0179  3DBD               	addwfc	___flmul@grs+1,f
  3543     017A  0838               	movf	??___flmul+2,w
  3544     017B  3DBE               	addwfc	___flmul@grs+2,f
  3545     017C  0839               	movf	??___flmul+3,w
  3546     017D  3DBF               	addwfc	___flmul@grs+3,f
  3547     017E                     l2681:
  3548     017E  0847               	movf	___flmul@temp+1,w
  3549     017F  00B6               	movwf	??___flmul
  3550     0180  01B7               	clrf	??___flmul+1
  3551     0181  01B8               	clrf	??___flmul+2
  3552     0182  01B9               	clrf	??___flmul+3
  3553     0183  0836               	movf	??___flmul,w
  3554     0184  07C2               	addwf	___flmul@prod,f
  3555     0185  0837               	movf	??___flmul+1,w
  3556     0186  3DC3               	addwfc	___flmul@prod+1,f
  3557     0187  0838               	movf	??___flmul+2,w
  3558     0188  3DC4               	addwfc	___flmul@prod+2,f
  3559     0189  0839               	movf	??___flmul+3,w
  3560     018A  3DC5               	addwfc	___flmul@prod+3,f
  3561     018B  0830               	movf	___flmul@b+2,w
  3562     018C  00A0               	movwf	__Umul8_16@multiplicand
  3563     018D  0832               	movf	___flmul@a,w
  3564     018E  318C  2417  3180   	fcall	__Umul8_16
  3565     0191  0020               	movlb	0	; select bank0
  3566     0192  0821               	movf	?__Umul8_16+1,w
  3567     0193  00C7               	movwf	___flmul@temp+1
  3568     0194  0820               	movf	?__Umul8_16,w
  3569     0195  00C6               	movwf	___flmul@temp
  3570     0196                     l2683:
  3571     0196  0846               	movf	___flmul@temp,w
  3572     0197  00B6               	movwf	??___flmul
  3573     0198  01B7               	clrf	??___flmul+1
  3574     0199  01B8               	clrf	??___flmul+2
  3575     019A  01B9               	clrf	??___flmul+3
  3576     019B  0836               	movf	??___flmul,w
  3577     019C  07BC               	addwf	___flmul@grs,f
  3578     019D  0837               	movf	??___flmul+1,w
  3579     019E  3DBD               	addwfc	___flmul@grs+1,f
  3580     019F  0838               	movf	??___flmul+2,w
  3581     01A0  3DBE               	addwfc	___flmul@grs+2,f
  3582     01A1  0839               	movf	??___flmul+3,w
  3583     01A2  3DBF               	addwfc	___flmul@grs+3,f
  3584     01A3                     l2685:
  3585     01A3  0847               	movf	___flmul@temp+1,w
  3586     01A4  00B6               	movwf	??___flmul
  3587     01A5  01B7               	clrf	??___flmul+1
  3588     01A6  01B8               	clrf	??___flmul+2
  3589     01A7  01B9               	clrf	??___flmul+3
  3590     01A8  0836               	movf	??___flmul,w
  3591     01A9  07C2               	addwf	___flmul@prod,f
  3592     01AA  0837               	movf	??___flmul+1,w
  3593     01AB  3DC3               	addwfc	___flmul@prod+1,f
  3594     01AC  0838               	movf	??___flmul+2,w
  3595     01AD  3DC4               	addwfc	___flmul@prod+2,f
  3596     01AE  0839               	movf	??___flmul+3,w
  3597     01AF  3DC5               	addwfc	___flmul@prod+3,f
  3598     01B0                     l2687:
  3599     01B0  3008               	movlw	8
  3600     01B1                     u1775:
  3601     01B1  35BC               	lslf	___flmul@grs,f
  3602     01B2  0DBD               	rlf	___flmul@grs+1,f
  3603     01B3  0DBE               	rlf	___flmul@grs+2,f
  3604     01B4  0DBF               	rlf	___flmul@grs+3,f
  3605     01B5  0B89               	decfsz	9,f
  3606     01B6  29B1               	goto	u1775
  3607     01B7                     l2689:
  3608     01B7  082F               	movf	___flmul@b+1,w
  3609     01B8  00A0               	movwf	__Umul8_16@multiplicand
  3610     01B9  0832               	movf	___flmul@a,w
  3611     01BA  318C  2417  3180   	fcall	__Umul8_16
  3612     01BD  0020               	movlb	0	; select bank0
  3613     01BE  0821               	movf	?__Umul8_16+1,w
  3614     01BF  00C7               	movwf	___flmul@temp+1
  3615     01C0  0820               	movf	?__Umul8_16,w
  3616     01C1  00C6               	movwf	___flmul@temp
  3617     01C2                     l2691:
  3618     01C2  0846               	movf	___flmul@temp,w
  3619     01C3  07BC               	addwf	___flmul@grs,f
  3620     01C4  0847               	movf	___flmul@temp+1,w
  3621     01C5  3DBD               	addwfc	___flmul@grs+1,f
  3622     01C6  3000               	movlw	0
  3623     01C7  3DBE               	addwfc	___flmul@grs+2,f
  3624     01C8  3DBF               	addwfc	___flmul@grs+3,f
  3625     01C9                     l2693:
  3626     01C9  082E               	movf	___flmul@b,w
  3627     01CA  00A0               	movwf	__Umul8_16@multiplicand
  3628     01CB  0833               	movf	___flmul@a+1,w
  3629     01CC  318C  2417  3180   	fcall	__Umul8_16
  3630     01CF  0020               	movlb	0	; select bank0
  3631     01D0  0821               	movf	?__Umul8_16+1,w
  3632     01D1  00C7               	movwf	___flmul@temp+1
  3633     01D2  0820               	movf	?__Umul8_16,w
  3634     01D3  00C6               	movwf	___flmul@temp
  3635     01D4                     l2695:
  3636     01D4  0846               	movf	___flmul@temp,w
  3637     01D5  07BC               	addwf	___flmul@grs,f
  3638     01D6  0847               	movf	___flmul@temp+1,w
  3639     01D7  3DBD               	addwfc	___flmul@grs+1,f
  3640     01D8  3000               	movlw	0
  3641     01D9  3DBE               	addwfc	___flmul@grs+2,f
  3642     01DA  3DBF               	addwfc	___flmul@grs+3,f
  3643     01DB                     l2697:
  3644     01DB  3008               	movlw	8
  3645     01DC                     u1785:
  3646     01DC  35BC               	lslf	___flmul@grs,f
  3647     01DD  0DBD               	rlf	___flmul@grs+1,f
  3648     01DE  0DBE               	rlf	___flmul@grs+2,f
  3649     01DF  0DBF               	rlf	___flmul@grs+3,f
  3650     01E0  0B89               	decfsz	9,f
  3651     01E1  29DC               	goto	u1785
  3652     01E2  082E               	movf	___flmul@b,w
  3653     01E3  00A0               	movwf	__Umul8_16@multiplicand
  3654     01E4  0832               	movf	___flmul@a,w
  3655     01E5  318C  2417  3180   	fcall	__Umul8_16
  3656     01E8  0020               	movlb	0	; select bank0
  3657     01E9  0821               	movf	?__Umul8_16+1,w
  3658     01EA  00C7               	movwf	___flmul@temp+1
  3659     01EB  0820               	movf	?__Umul8_16,w
  3660     01EC  00C6               	movwf	___flmul@temp
  3661     01ED                     l2699:
  3662     01ED  0846               	movf	___flmul@temp,w
  3663     01EE  07BC               	addwf	___flmul@grs,f
  3664     01EF  0847               	movf	___flmul@temp+1,w
  3665     01F0  3DBD               	addwfc	___flmul@grs+1,f
  3666     01F1  3000               	movlw	0
  3667     01F2  3DBE               	addwfc	___flmul@grs+2,f
  3668     01F3  3DBF               	addwfc	___flmul@grs+3,f
  3669     01F4                     l2701:
  3670     01F4  082F               	movf	___flmul@b+1,w
  3671     01F5  00A0               	movwf	__Umul8_16@multiplicand
  3672     01F6  0834               	movf	___flmul@a+2,w
  3673     01F7  318C  2417  3180   	fcall	__Umul8_16
  3674     01FA  0020               	movlb	0	; select bank0
  3675     01FB  0821               	movf	?__Umul8_16+1,w
  3676     01FC  00C7               	movwf	___flmul@temp+1
  3677     01FD  0820               	movf	?__Umul8_16,w
  3678     01FE  00C6               	movwf	___flmul@temp
  3679     01FF  0846               	movf	___flmul@temp,w
  3680     0200  07C2               	addwf	___flmul@prod,f
  3681     0201  0847               	movf	___flmul@temp+1,w
  3682     0202  3DC3               	addwfc	___flmul@prod+1,f
  3683     0203  3000               	movlw	0
  3684     0204  3DC4               	addwfc	___flmul@prod+2,f
  3685     0205  3DC5               	addwfc	___flmul@prod+3,f
  3686     0206                     l2703:
  3687     0206  0830               	movf	___flmul@b+2,w
  3688     0207  00A0               	movwf	__Umul8_16@multiplicand
  3689     0208  0833               	movf	___flmul@a+1,w
  3690     0209  318C  2417  3180   	fcall	__Umul8_16
  3691     020C  0020               	movlb	0	; select bank0
  3692     020D  0821               	movf	?__Umul8_16+1,w
  3693     020E  00C7               	movwf	___flmul@temp+1
  3694     020F  0820               	movf	?__Umul8_16,w
  3695     0210  00C6               	movwf	___flmul@temp
  3696     0211                     l2705:
  3697     0211  0846               	movf	___flmul@temp,w
  3698     0212  07C2               	addwf	___flmul@prod,f
  3699     0213  0847               	movf	___flmul@temp+1,w
  3700     0214  3DC3               	addwfc	___flmul@prod+1,f
  3701     0215  3000               	movlw	0
  3702     0216  3DC4               	addwfc	___flmul@prod+2,f
  3703     0217  3DC5               	addwfc	___flmul@prod+3,f
  3704     0218  0830               	movf	___flmul@b+2,w
  3705     0219  00A0               	movwf	__Umul8_16@multiplicand
  3706     021A  0834               	movf	___flmul@a+2,w
  3707     021B  318C  2417  3180   	fcall	__Umul8_16
  3708     021E  0020               	movlb	0	; select bank0
  3709     021F  0821               	movf	?__Umul8_16+1,w
  3710     0220  00C7               	movwf	___flmul@temp+1
  3711     0221  0820               	movf	?__Umul8_16,w
  3712     0222  00C6               	movwf	___flmul@temp
  3713     0223                     l2707:
  3714     0223  0846               	movf	___flmul@temp,w
  3715     0224  00B6               	movwf	??___flmul
  3716     0225  0847               	movf	___flmul@temp+1,w
  3717     0226  00B7               	movwf	??___flmul+1
  3718     0227  01B8               	clrf	??___flmul+2
  3719     0228  01B9               	clrf	??___flmul+3
  3720     0229  3008               	movlw	8
  3721     022A                     u1795:
  3722     022A  35B6               	lslf	??___flmul,f
  3723     022B  0DB7               	rlf	??___flmul+1,f
  3724     022C  0DB8               	rlf	??___flmul+2,f
  3725     022D  0DB9               	rlf	??___flmul+3,f
  3726     022E                     u1790:
  3727     022E  0B89               	decfsz	9,f
  3728     022F  2A2A               	goto	u1795
  3729     0230  0836               	movf	??___flmul,w
  3730     0231  07C2               	addwf	___flmul@prod,f
  3731     0232  0837               	movf	??___flmul+1,w
  3732     0233  3DC3               	addwfc	___flmul@prod+1,f
  3733     0234  0838               	movf	??___flmul+2,w
  3734     0235  3DC4               	addwfc	___flmul@prod+2,f
  3735     0236  0839               	movf	??___flmul+3,w
  3736     0237  3DC5               	addwfc	___flmul@prod+3,f
  3737     0238                     l2709:
  3738     0238  083C               	movf	___flmul@grs,w
  3739     0239  00B6               	movwf	??___flmul
  3740     023A  083D               	movf	___flmul@grs+1,w
  3741     023B  00B7               	movwf	??___flmul+1
  3742     023C  083E               	movf	___flmul@grs+2,w
  3743     023D  00B8               	movwf	??___flmul+2
  3744     023E  083F               	movf	___flmul@grs+3,w
  3745     023F  00B9               	movwf	??___flmul+3
  3746     0240  3018               	movlw	24
  3747     0241                     u1805:
  3748     0241  36B9               	lsrf	??___flmul+3,f
  3749     0242  0CB8               	rrf	??___flmul+2,f
  3750     0243  0CB7               	rrf	??___flmul+1,f
  3751     0244  0CB6               	rrf	??___flmul,f
  3752     0245                     u1800:
  3753     0245  0B89               	decfsz	9,f
  3754     0246  2A41               	goto	u1805
  3755     0247  0836               	movf	??___flmul,w
  3756     0248  07C2               	addwf	___flmul@prod,f
  3757     0249  0837               	movf	??___flmul+1,w
  3758     024A  3DC3               	addwfc	___flmul@prod+1,f
  3759     024B  0838               	movf	??___flmul+2,w
  3760     024C  3DC4               	addwfc	___flmul@prod+2,f
  3761     024D  0839               	movf	??___flmul+3,w
  3762     024E  3DC5               	addwfc	___flmul@prod+3,f
  3763     024F                     l2711:
  3764     024F  3008               	movlw	8
  3765     0250                     u1815:
  3766     0250  35BC               	lslf	___flmul@grs,f
  3767     0251  0DBD               	rlf	___flmul@grs+1,f
  3768     0252  0DBE               	rlf	___flmul@grs+2,f
  3769     0253  0DBF               	rlf	___flmul@grs+3,f
  3770     0254  0B89               	decfsz	9,f
  3771     0255  2A50               	goto	u1815
  3772     0256                     l2713:
  3773     0256  0841               	movf	___flmul@bexp,w
  3774     0257  0740               	addwf	___flmul@aexp,w
  3775     0258  00B6               	movwf	??___flmul
  3776     0259  01B7               	clrf	??___flmul+1
  3777     025A  0DB7               	rlf	??___flmul+1,f
  3778     025B  0836               	movf	??___flmul,w
  3779     025C  3E82               	addlw	130
  3780     025D  00C6               	movwf	___flmul@temp
  3781     025E  30FF               	movlw	255
  3782     025F  3D37               	addwfc	??___flmul+1,w
  3783     0260  00C7               	movwf	___flmul@temp+1
  3784     0261  2A79               	goto	l2725
  3785     0262                     l2715:
  3786     0262  3001               	movlw	1
  3787     0263                     u1825:
  3788     0263  35C2               	lslf	___flmul@prod,f
  3789     0264  0DC3               	rlf	___flmul@prod+1,f
  3790     0265  0DC4               	rlf	___flmul@prod+2,f
  3791     0266  0DC5               	rlf	___flmul@prod+3,f
  3792     0267  0B89               	decfsz	9,f
  3793     0268  2A63               	goto	u1825
  3794     0269                     l2717:
  3795     0269  1FBF               	btfss	___flmul@grs+3,7
  3796     026A  2A6C               	goto	u1831
  3797     026B  2A6D               	goto	u1830
  3798     026C                     u1831:
  3799     026C  2A6E               	goto	l2721
  3800     026D                     u1830:
  3801     026D                     l2719:
  3802     026D  1442               	bsf	___flmul@prod,0
  3803     026E                     l2721:
  3804     026E  3001               	movlw	1
  3805     026F                     u1845:
  3806     026F  35BC               	lslf	___flmul@grs,f
  3807     0270  0DBD               	rlf	___flmul@grs+1,f
  3808     0271  0DBE               	rlf	___flmul@grs+2,f
  3809     0272  0DBF               	rlf	___flmul@grs+3,f
  3810     0273  0B89               	decfsz	9,f
  3811     0274  2A6F               	goto	u1845
  3812     0275                     l2723:
  3813     0275  30FF               	movlw	255
  3814     0276  07C6               	addwf	___flmul@temp,f
  3815     0277  30FF               	movlw	255
  3816     0278  3DC7               	addwfc	___flmul@temp+1,f
  3817     0279                     l2725:
  3818     0279  1FC4               	btfss	___flmul@prod+2,7
  3819     027A  2A7C               	goto	u1851
  3820     027B  2A7D               	goto	u1850
  3821     027C                     u1851:
  3822     027C  2A62               	goto	l2715
  3823     027D                     u1850:
  3824     027D                     l2727:
  3825     027D  01C0               	clrf	___flmul@aexp
  3826     027E                     l2729:
  3827     027E  1FBF               	btfss	___flmul@grs+3,7
  3828     027F  2A81               	goto	u1861
  3829     0280  2A82               	goto	u1860
  3830     0281                     u1861:
  3831     0281  2A9E               	goto	l2737
  3832     0282                     u1860:
  3833     0282                     l2731:
  3834     0282  30FF               	movlw	255
  3835     0283  053C               	andwf	___flmul@grs,w
  3836     0284  00B6               	movwf	??___flmul
  3837     0285  30FF               	movlw	255
  3838     0286  053D               	andwf	___flmul@grs+1,w
  3839     0287  00B7               	movwf	??___flmul+1
  3840     0288  30FF               	movlw	255
  3841     0289  053E               	andwf	___flmul@grs+2,w
  3842     028A  00B8               	movwf	??___flmul+2
  3843     028B  307F               	movlw	127
  3844     028C  053F               	andwf	___flmul@grs+3,w
  3845     028D  00B9               	movwf	??___flmul+3
  3846     028E  0839               	movf	??___flmul+3,w
  3847     028F  0438               	iorwf	??___flmul+2,w
  3848     0290  0437               	iorwf	??___flmul+1,w
  3849     0291  0436               	iorwf	??___flmul,w
  3850     0292  1903               	skipnz
  3851     0293  2A95               	goto	u1871
  3852     0294  2A96               	goto	u1870
  3853     0295                     u1871:
  3854     0295  2A99               	goto	l1044
  3855     0296                     u1870:
  3856     0296                     l2733:
  3857     0296  01C0               	clrf	___flmul@aexp
  3858     0297  0AC0               	incf	___flmul@aexp,f
  3859     0298  2A9E               	goto	l2737
  3860     0299                     l1044:
  3861     0299  1C42               	btfss	___flmul@prod,0
  3862     029A  2A9C               	goto	u1881
  3863     029B  2A9D               	goto	u1880
  3864     029C                     u1881:
  3865     029C  2A9E               	goto	l2737
  3866     029D                     u1880:
  3867     029D  2A96               	goto	l2733
  3868     029E                     l2737:
  3869     029E  0840               	movf	___flmul@aexp,w
  3870     029F  1903               	btfsc	3,2
  3871     02A0  2AA2               	goto	u1891
  3872     02A1  2AA3               	goto	u1890
  3873     02A2                     u1891:
  3874     02A2  2ACB               	goto	l2747
  3875     02A3                     u1890:
  3876     02A3                     l2739:
  3877     02A3  3001               	movlw	1
  3878     02A4  07C2               	addwf	___flmul@prod,f
  3879     02A5  3000               	movlw	0
  3880     02A6  3DC3               	addwfc	___flmul@prod+1,f
  3881     02A7  3000               	movlw	0
  3882     02A8  3DC4               	addwfc	___flmul@prod+2,f
  3883     02A9  3000               	movlw	0
  3884     02AA  3DC5               	addwfc	___flmul@prod+3,f
  3885     02AB                     l2741:
  3886     02AB  1C45               	btfss	___flmul@prod+3,0
  3887     02AC  2AAE               	goto	u1901
  3888     02AD  2AAF               	goto	u1900
  3889     02AE                     u1901:
  3890     02AE  2ACB               	goto	l2747
  3891     02AF                     u1900:
  3892     02AF                     l2743:
  3893     02AF  0842               	movf	___flmul@prod,w
  3894     02B0  00B6               	movwf	??___flmul
  3895     02B1  0843               	movf	___flmul@prod+1,w
  3896     02B2  00B7               	movwf	??___flmul+1
  3897     02B3  0844               	movf	___flmul@prod+2,w
  3898     02B4  00B8               	movwf	??___flmul+2
  3899     02B5  0845               	movf	___flmul@prod+3,w
  3900     02B6  00B9               	movwf	??___flmul+3
  3901     02B7  3001               	movlw	1
  3902     02B8  00BA               	movwf	??___flmul+4
  3903     02B9                     u1915:
  3904     02B9  37B9               	asrf	??___flmul+3,f
  3905     02BA  0CB8               	rrf	??___flmul+2,f
  3906     02BB  0CB7               	rrf	??___flmul+1,f
  3907     02BC  0CB6               	rrf	??___flmul,f
  3908     02BD                     u1910:
  3909     02BD  0BBA               	decfsz	??___flmul+4,f
  3910     02BE  2AB9               	goto	u1915
  3911     02BF  0839               	movf	??___flmul+3,w
  3912     02C0  00C5               	movwf	___flmul@prod+3
  3913     02C1  0838               	movf	??___flmul+2,w
  3914     02C2  00C4               	movwf	___flmul@prod+2
  3915     02C3  0837               	movf	??___flmul+1,w
  3916     02C4  00C3               	movwf	___flmul@prod+1
  3917     02C5  0836               	movf	??___flmul,w
  3918     02C6  00C2               	movwf	___flmul@prod
  3919     02C7                     l2745:
  3920     02C7  3001               	movlw	1
  3921     02C8  07C6               	addwf	___flmul@temp,f
  3922     02C9  3000               	movlw	0
  3923     02CA  3DC7               	addwfc	___flmul@temp+1,f
  3924     02CB                     l2747:
  3925     02CB  0847               	movf	___flmul@temp+1,w
  3926     02CC  3A80               	xorlw	128
  3927     02CD  00B6               	movwf	??___flmul
  3928     02CE  3080               	movlw	128
  3929     02CF  0236               	subwf	??___flmul,w
  3930     02D0  1D03               	skipz
  3931     02D1  2AD4               	goto	u1925
  3932     02D2  30FF               	movlw	255
  3933     02D3  0246               	subwf	___flmul@temp,w
  3934     02D4                     u1925:
  3935     02D4  1C03               	skipc
  3936     02D5  2AD7               	goto	u1921
  3937     02D6  2AD8               	goto	u1920
  3938     02D7                     u1921:
  3939     02D7  2AE2               	goto	l2751
  3940     02D8                     u1920:
  3941     02D8                     l2749:
  3942     02D8  307F               	movlw	127
  3943     02D9  0020               	movlb	0	; select bank0
  3944     02DA  00C5               	movwf	___flmul@prod+3
  3945     02DB  3080               	movlw	128
  3946     02DC  00C4               	movwf	___flmul@prod+2
  3947     02DD  3000               	movlw	0
  3948     02DE  00C3               	movwf	___flmul@prod+1
  3949     02DF  3000               	movlw	0
  3950     02E0  00C2               	movwf	___flmul@prod
  3951     02E1  2B0D               	goto	l1050
  3952     02E2                     l2751:
  3953     02E2  0020               	movlb	0	; select bank0
  3954     02E3  0847               	movf	___flmul@temp+1,w
  3955     02E4  3A80               	xorlw	128
  3956     02E5  00B6               	movwf	??___flmul
  3957     02E6  3080               	movlw	128
  3958     02E7  0236               	subwf	??___flmul,w
  3959     02E8  1D03               	skipz
  3960     02E9  2AEC               	goto	u1935
  3961     02EA  3001               	movlw	1
  3962     02EB  0246               	subwf	___flmul@temp,w
  3963     02EC                     u1935:
  3964     02EC  1803               	skipnc
  3965     02ED  2AEF               	goto	u1931
  3966     02EE  2AF0               	goto	u1930
  3967     02EF                     u1931:
  3968     02EF  2AFB               	goto	l2757
  3969     02F0                     u1930:
  3970     02F0                     l2753:
  3971     02F0  3000               	movlw	0
  3972     02F1  0020               	movlb	0	; select bank0
  3973     02F2  00C5               	movwf	___flmul@prod+3
  3974     02F3  3000               	movlw	0
  3975     02F4  00C4               	movwf	___flmul@prod+2
  3976     02F5  3000               	movlw	0
  3977     02F6  00C3               	movwf	___flmul@prod+1
  3978     02F7  3000               	movlw	0
  3979     02F8  00C2               	movwf	___flmul@prod
  3980     02F9                     l2755:
  3981     02F9  01BB               	clrf	___flmul@sign
  3982     02FA  2B0D               	goto	l1050
  3983     02FB                     l2757:
  3984     02FB  0020               	movlb	0	; select bank0
  3985     02FC  0846               	movf	___flmul@temp,w
  3986     02FD  00C1               	movwf	___flmul@bexp
  3987     02FE  30FF               	movlw	255
  3988     02FF  05C2               	andwf	___flmul@prod,f
  3989     0300  30FF               	movlw	255
  3990     0301  05C3               	andwf	___flmul@prod+1,f
  3991     0302  307F               	movlw	127
  3992     0303  05C4               	andwf	___flmul@prod+2,f
  3993     0304  3000               	movlw	0
  3994     0305  05C5               	andwf	___flmul@prod+3,f
  3995     0306                     l2759:
  3996     0306  1C41               	btfss	___flmul@bexp,0
  3997     0307  2B09               	goto	u1941
  3998     0308  2B0A               	goto	u1940
  3999     0309                     u1941:
  4000     0309  2B0B               	goto	l2763
  4001     030A                     u1940:
  4002     030A                     l2761:
  4003     030A  17C4               	bsf	___flmul@prod+2,7
  4004     030B                     l2763:
  4005     030B  3641               	lsrf	___flmul@bexp,w
  4006     030C  00C5               	movwf	___flmul@prod+3
  4007     030D                     l1050:
  4008     030D  083B               	movf	___flmul@sign,w
  4009     030E  00B6               	movwf	??___flmul
  4010     030F  0836               	movf	??___flmul,w
  4011     0310  04C5               	iorwf	___flmul@prod+3,f
  4012     0311                     l2765:
  4013     0311  0845               	movf	___flmul@prod+3,w
  4014     0312  00B1               	movwf	?___flmul+3
  4015     0313  0844               	movf	___flmul@prod+2,w
  4016     0314  00B0               	movwf	?___flmul+2
  4017     0315  0843               	movf	___flmul@prod+1,w
  4018     0316  00AF               	movwf	?___flmul+1
  4019     0317  0842               	movf	___flmul@prod,w
  4020     0318  00AE               	movwf	?___flmul
  4021     0319                     l1038:
  4022     0319  0008               	return
  4023     031A                     __end_of___flmul:
  4024                           
  4025                           	psect	text5
  4026     0C17                     __ptext5:	
  4027 ;; *************** function __Umul8_16 *****************
  4028 ;; Defined at:
  4029 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8_16.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;  multiplier      1    wreg     unsigned char 
  4032 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4033 ;; Auto vars:     Size  Location     Type
  4034 ;;  multiplier      1    8[BANK0 ] unsigned char 
  4035 ;;  word_mpld       2    6[BANK0 ] unsigned short 
  4036 ;;  product         2    4[BANK0 ] unsigned short 
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  2    0[BANK0 ] unsigned int 
  4039 ;; Registers used:
  4040 ;;		wreg, status,2, status,0
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4046 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4047 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4048 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4049 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4050 ;;Total ram usage:        9 bytes
  4051 ;; Hardware stack levels used: 1
  4052 ;; Hardware stack levels required when called: 2
  4053 ;; This function calls:
  4054 ;;		Nothing
  4055 ;; This function is called by:
  4056 ;;		___flmul
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060     0C17                     __Umul8_16:	
  4061                           ;psect for function __Umul8_16
  4062                           
  4063                           
  4064                           ;incstack = 0
  4065                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  4066                           ;__Umul8_16@multiplier stored from wreg
  4067     0C17  0020               	movlb	0	; select bank0
  4068     0C18  00A8               	movwf	__Umul8_16@multiplier
  4069     0C19                     l2407:
  4070     0C19  01A4               	clrf	__Umul8_16@product
  4071     0C1A  01A5               	clrf	__Umul8_16@product+1
  4072     0C1B                     l2409:
  4073     0C1B  0820               	movf	__Umul8_16@multiplicand,w
  4074     0C1C  00A2               	movwf	??__Umul8_16
  4075     0C1D  01A3               	clrf	??__Umul8_16+1
  4076     0C1E  0822               	movf	??__Umul8_16,w
  4077     0C1F  00A6               	movwf	__Umul8_16@word_mpld
  4078     0C20  0823               	movf	??__Umul8_16+1,w
  4079     0C21  00A7               	movwf	__Umul8_16@word_mpld+1
  4080     0C22                     l2411:
  4081     0C22  1C28               	btfss	__Umul8_16@multiplier,0
  4082     0C23  2C25               	goto	u1461
  4083     0C24  2C26               	goto	u1460
  4084     0C25                     u1461:
  4085     0C25  2C2A               	goto	l1057
  4086     0C26                     u1460:
  4087     0C26                     l2413:
  4088     0C26  0826               	movf	__Umul8_16@word_mpld,w
  4089     0C27  07A4               	addwf	__Umul8_16@product,f
  4090     0C28  0827               	movf	__Umul8_16@word_mpld+1,w
  4091     0C29  3DA5               	addwfc	__Umul8_16@product+1,f
  4092     0C2A                     l1057:
  4093     0C2A  3001               	movlw	1
  4094     0C2B                     u1475:
  4095     0C2B  35A6               	lslf	__Umul8_16@word_mpld,f
  4096     0C2C  0DA7               	rlf	__Umul8_16@word_mpld+1,f
  4097     0C2D  0B89               	decfsz	9,f
  4098     0C2E  2C2B               	goto	u1475
  4099     0C2F  1003               	clrc
  4100     0C30  0CA8               	rrf	__Umul8_16@multiplier,f
  4101     0C31                     l2415:
  4102     0C31  0828               	movf	__Umul8_16@multiplier,w
  4103     0C32  1D03               	btfss	3,2
  4104     0C33  2C35               	goto	u1481
  4105     0C34  2C36               	goto	u1480
  4106     0C35                     u1481:
  4107     0C35  2C22               	goto	l2411
  4108     0C36                     u1480:
  4109     0C36                     l2417:
  4110     0C36  0825               	movf	__Umul8_16@product+1,w
  4111     0C37  00A1               	movwf	?__Umul8_16+1
  4112     0C38  0824               	movf	__Umul8_16@product,w
  4113     0C39  00A0               	movwf	?__Umul8_16
  4114     0C3A                     l1059:
  4115     0C3A  0008               	return
  4116     0C3B                     __end_of__Umul8_16:
  4117                           
  4118                           	psect	text6
  4119     0BB6                     __ptext6:	
  4120 ;; *************** function _CreateTurnRightCommmand *****************
  4121 ;; Defined at:
  4122 ;;		line 298 in file "motorMain.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;  pwm             2    0[BANK0 ] unsigned int 
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;		None
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  1    wreg      void 
  4129 ;; Registers used:
  4130 ;;		wreg, status,2, status,0
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4136 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4139 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4140 ;;Total ram usage:        2 bytes
  4141 ;; Hardware stack levels used: 1
  4142 ;; Hardware stack levels required when called: 2
  4143 ;; This function calls:
  4144 ;;		Nothing
  4145 ;; This function is called by:
  4146 ;;		_drive
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150     0BB6                     _CreateTurnRightCommmand:	
  4151                           ;psect for function _CreateTurnRightCommmand
  4152                           
  4153     0BB6                     l2527:	
  4154                           ;incstack = 0
  4155                           ; Regs used in _CreateTurnRightCommmand: [wreg+status,2+status,0]
  4156                           
  4157                           
  4158                           ;motorMain.c: 299:     currentCommand.sendId = DRIVE_COMMAND;
  4159     0BB6  3002               	movlw	2
  4160     0BB7  0020               	movlb	0	; select bank0
  4161     0BB8  00D9               	movwf	_currentCommand+4
  4162     0BB9  3000               	movlw	0
  4163     0BBA  00DA               	movwf	_currentCommand+5
  4164     0BBB                     l2529:
  4165                           
  4166                           ;motorMain.c: 300:     currentCommand.sendIt = 0;
  4167     0BBB  01D7               	clrf	_currentCommand+2
  4168     0BBC  01D8               	clrf	_currentCommand+3
  4169     0BBD                     l2531:
  4170                           
  4171                           ;motorMain.c: 301:     currentCommand.sendLimit = 10;
  4172     0BBD  300A               	movlw	10
  4173     0BBE  00D5               	movwf	_currentCommand
  4174     0BBF  3000               	movlw	0
  4175     0BC0  00D6               	movwf	_currentCommand+1
  4176                           
  4177                           ;motorMain.c: 302:     currentCommand.receiveId = 0;
  4178     0BC1  01E1               	clrf	_currentCommand+12
  4179     0BC2  01E2               	clrf	_currentCommand+13
  4180                           
  4181                           ;motorMain.c: 303:     currentCommand.receiveLimit = 0;
  4182     0BC3  01DF               	clrf	_currentCommand+10
  4183     0BC4  01E0               	clrf	_currentCommand+11
  4184                           
  4185                           ;motorMain.c: 304:     currentCommand.receiveIt = 0;
  4186     0BC5  01DD               	clrf	_currentCommand+8
  4187     0BC6  01DE               	clrf	_currentCommand+9
  4188                           
  4189                           ;motorMain.c: 305:     currentCommand.done = 0;
  4190     0BC7  01E3               	clrf	_currentCommand+14
  4191     0BC8                     l2533:
  4192                           
  4193                           ;motorMain.c: 307:     TurnRightCommand[7] = 100;
  4194     0BC8  3064               	movlw	100
  4195     0BC9  0021               	movlb	1	; select bank1
  4196     0BCA  00AD               	movwf	(_TurnRightCommand^(0+128)+7)
  4197     0BCB                     l2535:
  4198                           
  4199                           ;motorMain.c: 308:     TurnRightCommand[9] = 100;
  4200     0BCB  3064               	movlw	100
  4201     0BCC  00AF               	movwf	(_TurnRightCommand^(0+128)+9)
  4202     0BCD                     l2537:
  4203                           
  4204                           ;motorMain.c: 309:     currentCommand.toSend = TurnRightCommand;
  4205     0BCD  30A6               	movlw	low _TurnRightCommand
  4206     0BCE  0020               	movlb	0	; select bank0
  4207     0BCF  00DB               	movwf	low ((_currentCommand| 0+6))
  4208     0BD0  3000               	movlw	high _TurnRightCommand
  4209     0BD1  00DC               	movwf	(low ((_currentCommand| 0+6))+1)
  4210     0BD2                     l2539:
  4211                           
  4212                           ;motorMain.c: 310:     PIE3bits.TXIE = 1;
  4213     0BD2  002E               	movlb	14	; select bank14
  4214     0BD3  1619               	bsf	25,4	;volatile
  4215     0BD4                     l434:
  4216     0BD4  0008               	return
  4217     0BD5                     __end_of_CreateTurnRightCommmand:
  4218                           
  4219                           	psect	text7
  4220     0B97                     __ptext7:	
  4221 ;; *************** function _CreateTurnLeftCommmand *****************
  4222 ;; Defined at:
  4223 ;;		line 313 in file "motorMain.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;  pwm             2    0[BANK0 ] unsigned int 
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;		None
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  1    wreg      void 
  4230 ;; Registers used:
  4231 ;;		wreg, status,2, status,0
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4237 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4240 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4241 ;;Total ram usage:        2 bytes
  4242 ;; Hardware stack levels used: 1
  4243 ;; Hardware stack levels required when called: 2
  4244 ;; This function calls:
  4245 ;;		Nothing
  4246 ;; This function is called by:
  4247 ;;		_drive
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251     0B97                     _CreateTurnLeftCommmand:	
  4252                           ;psect for function _CreateTurnLeftCommmand
  4253                           
  4254     0B97                     l2541:	
  4255                           ;incstack = 0
  4256                           ; Regs used in _CreateTurnLeftCommmand: [wreg+status,2+status,0]
  4257                           
  4258                           
  4259                           ;motorMain.c: 314:     currentCommand.sendId = DRIVE_COMMAND;
  4260     0B97  3002               	movlw	2
  4261     0B98  0020               	movlb	0	; select bank0
  4262     0B99  00D9               	movwf	_currentCommand+4
  4263     0B9A  3000               	movlw	0
  4264     0B9B  00DA               	movwf	_currentCommand+5
  4265     0B9C                     l2543:
  4266                           
  4267                           ;motorMain.c: 315:     currentCommand.sendIt = 0;
  4268     0B9C  01D7               	clrf	_currentCommand+2
  4269     0B9D  01D8               	clrf	_currentCommand+3
  4270     0B9E                     l2545:
  4271                           
  4272                           ;motorMain.c: 316:     currentCommand.sendLimit = 10;
  4273     0B9E  300A               	movlw	10
  4274     0B9F  00D5               	movwf	_currentCommand
  4275     0BA0  3000               	movlw	0
  4276     0BA1  00D6               	movwf	_currentCommand+1
  4277                           
  4278                           ;motorMain.c: 317:     currentCommand.receiveId = 0;
  4279     0BA2  01E1               	clrf	_currentCommand+12
  4280     0BA3  01E2               	clrf	_currentCommand+13
  4281                           
  4282                           ;motorMain.c: 318:     currentCommand.receiveLimit = 0;
  4283     0BA4  01DF               	clrf	_currentCommand+10
  4284     0BA5  01E0               	clrf	_currentCommand+11
  4285                           
  4286                           ;motorMain.c: 319:     currentCommand.receiveIt = 0;
  4287     0BA6  01DD               	clrf	_currentCommand+8
  4288     0BA7  01DE               	clrf	_currentCommand+9
  4289                           
  4290                           ;motorMain.c: 320:     currentCommand.done = 0;
  4291     0BA8  01E3               	clrf	_currentCommand+14
  4292     0BA9                     l2547:
  4293                           
  4294                           ;motorMain.c: 322:     TurnLeftCommand[7] = 100;
  4295     0BA9  3064               	movlw	100
  4296     0BAA  0021               	movlb	1	; select bank1
  4297     0BAB  00B7               	movwf	(_TurnLeftCommand^(0+128)+7)
  4298     0BAC                     l2549:
  4299                           
  4300                           ;motorMain.c: 323:     TurnLeftCommand[9] = 100;
  4301     0BAC  3064               	movlw	100
  4302     0BAD  00B9               	movwf	(_TurnLeftCommand^(0+128)+9)
  4303     0BAE                     l2551:
  4304                           
  4305                           ;motorMain.c: 324:     currentCommand.toSend = TurnLeftCommand;
  4306     0BAE  30B0               	movlw	low _TurnLeftCommand
  4307     0BAF  0020               	movlb	0	; select bank0
  4308     0BB0  00DB               	movwf	low ((_currentCommand| 0+6))
  4309     0BB1  3000               	movlw	high _TurnLeftCommand
  4310     0BB2  00DC               	movwf	(low ((_currentCommand| 0+6))+1)
  4311     0BB3                     l2553:
  4312                           
  4313                           ;motorMain.c: 325:     PIE3bits.TXIE = 1;
  4314     0BB3  002E               	movlb	14	; select bank14
  4315     0BB4  1619               	bsf	25,4	;volatile
  4316     0BB5                     l437:
  4317     0BB5  0008               	return
  4318     0BB6                     __end_of_CreateTurnLeftCommmand:
  4319                           
  4320                           	psect	text8
  4321     0BF6                     __ptext8:	
  4322 ;; *************** function _CreateMoveForwardCommmand *****************
  4323 ;; Defined at:
  4324 ;;		line 328 in file "motorMain.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;  pwm             2    0[BANK0 ] unsigned int 
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;		None
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  1    wreg      void 
  4331 ;; Registers used:
  4332 ;;		wreg, status,2, status,0
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4338 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4341 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4342 ;;Total ram usage:        2 bytes
  4343 ;; Hardware stack levels used: 1
  4344 ;; Hardware stack levels required when called: 2
  4345 ;; This function calls:
  4346 ;;		Nothing
  4347 ;; This function is called by:
  4348 ;;		_drive
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352     0BF6                     _CreateMoveForwardCommmand:	
  4353                           ;psect for function _CreateMoveForwardCommmand
  4354                           
  4355     0BF6                     l2555:	
  4356                           ;incstack = 0
  4357                           ; Regs used in _CreateMoveForwardCommmand: [wreg+status,2+status,0]
  4358                           
  4359                           
  4360                           ;motorMain.c: 329:     currentCommand.sendId = DRIVE_COMMAND;
  4361     0BF6  3002               	movlw	2
  4362     0BF7  0020               	movlb	0	; select bank0
  4363     0BF8  00D9               	movwf	_currentCommand+4
  4364     0BF9  3000               	movlw	0
  4365     0BFA  00DA               	movwf	_currentCommand+5
  4366     0BFB                     l2557:
  4367                           
  4368                           ;motorMain.c: 330:     currentCommand.sendIt = 0;
  4369     0BFB  01D7               	clrf	_currentCommand+2
  4370     0BFC  01D8               	clrf	_currentCommand+3
  4371     0BFD                     l2559:
  4372                           
  4373                           ;motorMain.c: 331:     currentCommand.sendLimit = 10;
  4374     0BFD  300A               	movlw	10
  4375     0BFE  00D5               	movwf	_currentCommand
  4376     0BFF  3000               	movlw	0
  4377     0C00  00D6               	movwf	_currentCommand+1
  4378                           
  4379                           ;motorMain.c: 332:     currentCommand.receiveId = 0;
  4380     0C01  01E1               	clrf	_currentCommand+12
  4381     0C02  01E2               	clrf	_currentCommand+13
  4382                           
  4383                           ;motorMain.c: 333:     currentCommand.receiveLimit = 0;
  4384     0C03  01DF               	clrf	_currentCommand+10
  4385     0C04  01E0               	clrf	_currentCommand+11
  4386                           
  4387                           ;motorMain.c: 334:     currentCommand.receiveIt = 0;
  4388     0C05  01DD               	clrf	_currentCommand+8
  4389     0C06  01DE               	clrf	_currentCommand+9
  4390                           
  4391                           ;motorMain.c: 335:     currentCommand.done = 0;
  4392     0C07  01E3               	clrf	_currentCommand+14
  4393     0C08                     l2561:
  4394                           
  4395                           ;motorMain.c: 337:     MoveForwardCommand[7] = pwm;
  4396     0C08  0820               	movf	CreateMoveForwardCommmand@pwm,w
  4397     0C09  0022               	movlb	2	; select bank2
  4398     0C0A  00C2               	movwf	(_MoveForwardCommand^(0+256)+7)
  4399     0C0B                     l2563:
  4400                           
  4401                           ;motorMain.c: 338:     MoveForwardCommand[9] = pwm;
  4402     0C0B  0020               	movlb	0	; select bank0
  4403     0C0C  0820               	movf	CreateMoveForwardCommmand@pwm,w
  4404     0C0D  0022               	movlb	2	; select bank2
  4405     0C0E  00C4               	movwf	(_MoveForwardCommand^(0+256)+9)
  4406     0C0F                     l2565:
  4407                           
  4408                           ;motorMain.c: 339:     currentCommand.toSend = MoveForwardCommand;
  4409     0C0F  303B               	movlw	low _MoveForwardCommand
  4410     0C10  0020               	movlb	0	; select bank0
  4411     0C11  00DB               	movwf	low ((_currentCommand| 0+6))
  4412     0C12  3001               	movlw	high _MoveForwardCommand
  4413     0C13  00DC               	movwf	(low ((_currentCommand| 0+6))+1)
  4414     0C14                     l2567:
  4415                           
  4416                           ;motorMain.c: 340:     PIE3bits.TXIE = 1;
  4417     0C14  002E               	movlb	14	; select bank14
  4418     0C15  1619               	bsf	25,4	;volatile
  4419     0C16                     l440:
  4420     0C16  0008               	return
  4421     0C17                     __end_of_CreateMoveForwardCommmand:
  4422                           
  4423                           	psect	text9
  4424     0BD5                     __ptext9:	
  4425 ;; *************** function _CreateMoveBackwardCommmand *****************
  4426 ;; Defined at:
  4427 ;;		line 343 in file "motorMain.c"
  4428 ;; Parameters:    Size  Location     Type
  4429 ;;  pwm             2    0[BANK0 ] unsigned int 
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;		None
  4432 ;; Return value:  Size  Location     Type
  4433 ;;                  1    wreg      void 
  4434 ;; Registers used:
  4435 ;;		wreg, status,2, status,0
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4441 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4444 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4445 ;;Total ram usage:        2 bytes
  4446 ;; Hardware stack levels used: 1
  4447 ;; Hardware stack levels required when called: 2
  4448 ;; This function calls:
  4449 ;;		Nothing
  4450 ;; This function is called by:
  4451 ;;		_drive
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455     0BD5                     _CreateMoveBackwardCommmand:	
  4456                           ;psect for function _CreateMoveBackwardCommmand
  4457                           
  4458     0BD5                     l2569:	
  4459                           ;incstack = 0
  4460                           ; Regs used in _CreateMoveBackwardCommmand: [wreg+status,2+status,0]
  4461                           
  4462                           
  4463                           ;motorMain.c: 344:     currentCommand.sendId = DRIVE_COMMAND;
  4464     0BD5  3002               	movlw	2
  4465     0BD6  0020               	movlb	0	; select bank0
  4466     0BD7  00D9               	movwf	_currentCommand+4
  4467     0BD8  3000               	movlw	0
  4468     0BD9  00DA               	movwf	_currentCommand+5
  4469     0BDA                     l2571:
  4470                           
  4471                           ;motorMain.c: 345:     currentCommand.sendIt = 0;
  4472     0BDA  01D7               	clrf	_currentCommand+2
  4473     0BDB  01D8               	clrf	_currentCommand+3
  4474     0BDC                     l2573:
  4475                           
  4476                           ;motorMain.c: 346:     currentCommand.sendLimit = 10;
  4477     0BDC  300A               	movlw	10
  4478     0BDD  00D5               	movwf	_currentCommand
  4479     0BDE  3000               	movlw	0
  4480     0BDF  00D6               	movwf	_currentCommand+1
  4481                           
  4482                           ;motorMain.c: 347:     currentCommand.receiveId = 0;
  4483     0BE0  01E1               	clrf	_currentCommand+12
  4484     0BE1  01E2               	clrf	_currentCommand+13
  4485                           
  4486                           ;motorMain.c: 348:     currentCommand.receiveLimit = 0;
  4487     0BE2  01DF               	clrf	_currentCommand+10
  4488     0BE3  01E0               	clrf	_currentCommand+11
  4489                           
  4490                           ;motorMain.c: 349:     currentCommand.receiveIt = 0;
  4491     0BE4  01DD               	clrf	_currentCommand+8
  4492     0BE5  01DE               	clrf	_currentCommand+9
  4493                           
  4494                           ;motorMain.c: 350:     currentCommand.done = 0;
  4495     0BE6  01E3               	clrf	_currentCommand+14
  4496     0BE7                     l2575:
  4497                           
  4498                           ;motorMain.c: 352:     MoveBackwardCommand[7] = pwm;
  4499     0BE7  0820               	movf	CreateMoveBackwardCommmand@pwm,w
  4500     0BE8  0022               	movlb	2	; select bank2
  4501     0BE9  00B8               	movwf	(_MoveBackwardCommand^(0+256)+7)
  4502     0BEA                     l2577:
  4503                           
  4504                           ;motorMain.c: 353:     MoveBackwardCommand[9] = pwm;
  4505     0BEA  0020               	movlb	0	; select bank0
  4506     0BEB  0820               	movf	CreateMoveBackwardCommmand@pwm,w
  4507     0BEC  0022               	movlb	2	; select bank2
  4508     0BED  00BA               	movwf	(_MoveBackwardCommand^(0+256)+9)
  4509     0BEE                     l2579:
  4510                           
  4511                           ;motorMain.c: 354:     currentCommand.toSend = MoveBackwardCommand;
  4512     0BEE  3031               	movlw	low _MoveBackwardCommand
  4513     0BEF  0020               	movlb	0	; select bank0
  4514     0BF0  00DB               	movwf	low ((_currentCommand| 0+6))
  4515     0BF1  3001               	movlw	high _MoveBackwardCommand
  4516     0BF2  00DC               	movwf	(low ((_currentCommand| 0+6))+1)
  4517     0BF3                     l2581:
  4518                           
  4519                           ;motorMain.c: 355:     PIE3bits.TXIE = 1;
  4520     0BF3  002E               	movlb	14	; select bank14
  4521     0BF4  1619               	bsf	25,4	;volatile
  4522     0BF5                     l443:
  4523     0BF5  0008               	return
  4524     0BF6                     __end_of_CreateMoveBackwardCommmand:
  4525                           
  4526                           	psect	text10
  4527     0B7A                     __ptext10:	
  4528 ;; *************** function _CreateControlsCommand *****************
  4529 ;; Defined at:
  4530 ;;		line 371 in file "motorMain.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;		None
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;		None
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  1    wreg      void 
  4537 ;; Registers used:
  4538 ;;		wreg, status,2, status,0
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4548 ;;Total ram usage:        0 bytes
  4549 ;; Hardware stack levels used: 1
  4550 ;; Hardware stack levels required when called: 2
  4551 ;; This function calls:
  4552 ;;		Nothing
  4553 ;; This function is called by:
  4554 ;;		_main
  4555 ;;		_drive
  4556 ;; This function uses a non-reentrant model
  4557 ;;
  4558                           
  4559     0B7A                     _CreateControlsCommand:	
  4560                           ;psect for function _CreateControlsCommand
  4561                           
  4562     0B7A                     l2511:	
  4563                           ;incstack = 0
  4564                           ; Regs used in _CreateControlsCommand: [wreg+status,2+status,0]
  4565                           
  4566                           
  4567                           ;motorMain.c: 372:     currentCommand.receiveId = CONTROL_INPUT;
  4568     0B7A  3001               	movlw	1
  4569     0B7B  0020               	movlb	0	; select bank0
  4570     0B7C  00E1               	movwf	_currentCommand+12
  4571     0B7D  3000               	movlw	0
  4572     0B7E  00E2               	movwf	_currentCommand+13
  4573                           
  4574                           ;motorMain.c: 373:     currentCommand.receiveLimit = 26;
  4575     0B7F  301A               	movlw	26
  4576     0B80  00DF               	movwf	_currentCommand+10
  4577     0B81  3000               	movlw	0
  4578     0B82  00E0               	movwf	_currentCommand+11
  4579     0B83                     l2513:
  4580                           
  4581                           ;motorMain.c: 374:     currentCommand.receiveIt = 0;
  4582     0B83  01DD               	clrf	_currentCommand+8
  4583     0B84  01DE               	clrf	_currentCommand+9
  4584     0B85                     l2515:
  4585                           
  4586                           ;motorMain.c: 375:     currentCommand.sendId = CONTROL_OUTPUT;
  4587     0B85  3001               	movlw	1
  4588     0B86  00D9               	movwf	_currentCommand+4
  4589     0B87  3000               	movlw	0
  4590     0B88  00DA               	movwf	_currentCommand+5
  4591     0B89                     l2517:
  4592                           
  4593                           ;motorMain.c: 376:     currentCommand.toSend = (unsigned char*) GetUserDataCommand;
  4594     0B89  30C8               	movlw	low _GetUserDataCommand
  4595     0B8A  00DB               	movwf	low ((_currentCommand| 0+6))
  4596     0B8B  3000               	movlw	high _GetUserDataCommand
  4597     0B8C  00DC               	movwf	(low ((_currentCommand| 0+6))+1)
  4598     0B8D                     l2519:
  4599                           
  4600                           ;motorMain.c: 377:     currentCommand.sendIt = 0;
  4601     0B8D  01D7               	clrf	_currentCommand+2
  4602     0B8E  01D8               	clrf	_currentCommand+3
  4603     0B8F                     l2521:
  4604                           
  4605                           ;motorMain.c: 378:     currentCommand.sendLimit = 6;
  4606     0B8F  3006               	movlw	6
  4607     0B90  00D5               	movwf	_currentCommand
  4608     0B91  3000               	movlw	0
  4609     0B92  00D6               	movwf	_currentCommand+1
  4610     0B93                     l2523:
  4611                           
  4612                           ;motorMain.c: 379:     currentCommand.done = 0;
  4613     0B93  01E3               	clrf	_currentCommand+14
  4614     0B94                     l2525:
  4615                           
  4616                           ;motorMain.c: 380:     PIE3bits.TXIE = 1;
  4617     0B94  002E               	movlb	14	; select bank14
  4618     0B95  1619               	bsf	25,4	;volatile
  4619     0B96                     l449:
  4620     0B96  0008               	return
  4621     0B97                     __end_of_CreateControlsCommand:
  4622                           
  4623                           	psect	text11
  4624     0B10                     __ptext11:	
  4625 ;; *************** function _CreateBreak *****************
  4626 ;; Defined at:
  4627 ;;		line 358 in file "motorMain.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;		None
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;		None
  4632 ;; Return value:  Size  Location     Type
  4633 ;;                  1    wreg      void 
  4634 ;; Registers used:
  4635 ;;		wreg, status,2, status,0
  4636 ;; Tracked objects:
  4637 ;;		On entry : 0/0
  4638 ;;		On exit  : 0/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4645 ;;Total ram usage:        0 bytes
  4646 ;; Hardware stack levels used: 1
  4647 ;; Hardware stack levels required when called: 2
  4648 ;; This function calls:
  4649 ;;		Nothing
  4650 ;; This function is called by:
  4651 ;;		_drive
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           
  4655     0B10                     _CreateBreak:	
  4656                           ;psect for function _CreateBreak
  4657                           
  4658     0B10                     l2583:	
  4659                           ;incstack = 0
  4660                           ; Regs used in _CreateBreak: [wreg+status,2+status,0]
  4661                           
  4662                           
  4663                           ;motorMain.c: 359:     currentCommand.sendId = DRIVE_COMMAND;
  4664     0B10  3002               	movlw	2
  4665     0B11  0020               	movlb	0	; select bank0
  4666     0B12  00D9               	movwf	_currentCommand+4
  4667     0B13  3000               	movlw	0
  4668     0B14  00DA               	movwf	_currentCommand+5
  4669     0B15                     l2585:
  4670                           
  4671                           ;motorMain.c: 360:     currentCommand.sendIt = 0;
  4672     0B15  01D7               	clrf	_currentCommand+2
  4673     0B16  01D8               	clrf	_currentCommand+3
  4674     0B17                     l2587:
  4675                           
  4676                           ;motorMain.c: 361:     currentCommand.sendLimit = 10;
  4677     0B17  300A               	movlw	10
  4678     0B18  00D5               	movwf	_currentCommand
  4679     0B19  3000               	movlw	0
  4680     0B1A  00D6               	movwf	_currentCommand+1
  4681                           
  4682                           ;motorMain.c: 362:     currentCommand.receiveId = 0;
  4683     0B1B  01E1               	clrf	_currentCommand+12
  4684     0B1C  01E2               	clrf	_currentCommand+13
  4685                           
  4686                           ;motorMain.c: 363:     currentCommand.receiveLimit = 0;
  4687     0B1D  01DF               	clrf	_currentCommand+10
  4688     0B1E  01E0               	clrf	_currentCommand+11
  4689                           
  4690                           ;motorMain.c: 364:     currentCommand.receiveIt = 0;
  4691     0B1F  01DD               	clrf	_currentCommand+8
  4692     0B20  01DE               	clrf	_currentCommand+9
  4693                           
  4694                           ;motorMain.c: 365:     currentCommand.done = 0;
  4695     0B21  01E3               	clrf	_currentCommand+14
  4696     0B22                     l2589:
  4697                           
  4698                           ;motorMain.c: 367:     currentCommand.toSend = Break;
  4699     0B22  3027               	movlw	low _Break
  4700     0B23  00DB               	movwf	low ((_currentCommand| 0+6))
  4701     0B24  3001               	movlw	high _Break
  4702     0B25  00DC               	movwf	(low ((_currentCommand| 0+6))+1)
  4703     0B26                     l2591:
  4704                           
  4705                           ;motorMain.c: 368:     PIE3bits.TXIE = 1;
  4706     0B26  002E               	movlb	14	; select bank14
  4707     0B27  1619               	bsf	25,4	;volatile
  4708     0B28                     l446:
  4709     0B28  0008               	return
  4710     0B29                     __end_of_CreateBreak:
  4711                           
  4712                           	psect	text12
  4713     0A97                     __ptext12:	
  4714 ;; *************** function _SetUpPumpArm *****************
  4715 ;; Defined at:
  4716 ;;		line 416 in file "motorMain.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;		None
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;		None
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  1    wreg      void 
  4723 ;; Registers used:
  4724 ;;		None
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4734 ;;Total ram usage:        0 bytes
  4735 ;; Hardware stack levels used: 1
  4736 ;; Hardware stack levels required when called: 2
  4737 ;; This function calls:
  4738 ;;		Nothing
  4739 ;; This function is called by:
  4740 ;;		_main
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744     0A97                     _SetUpPumpArm:	
  4745                           ;psect for function _SetUpPumpArm
  4746                           
  4747     0A97                     l2881:	
  4748                           ;incstack = 0
  4749                           ; Regs used in _SetUpPumpArm: []
  4750                           
  4751                           
  4752                           ;motorMain.c: 419:     TRISBbits.TRISB0 = 0;
  4753     0A97  0020               	movlb	0	; select bank0
  4754     0A98  1012               	bcf	18,0	;volatile
  4755                           
  4756                           ;motorMain.c: 420:     TRISBbits.TRISB1 = 0;
  4757     0A99  1092               	bcf	18,1	;volatile
  4758                           
  4759                           ;motorMain.c: 421:     ANSELBbits.ANSB0 = 0;
  4760     0A9A  003E               	movlb	30	; select bank30
  4761     0A9B  1043               	bcf	67,0	;volatile
  4762                           
  4763                           ;motorMain.c: 422:     ANSELBbits.ANSB1 = 0;
  4764     0A9C  10C3               	bcf	67,1	;volatile
  4765                           
  4766                           ;motorMain.c: 424:     LATBbits.LATB0 = 0;
  4767     0A9D  0020               	movlb	0	; select bank0
  4768     0A9E  1017               	bcf	23,0	;volatile
  4769                           
  4770                           ;motorMain.c: 425:     LATBbits.LATB1 = 0;
  4771     0A9F  1097               	bcf	23,1	;volatile
  4772     0AA0                     l462:
  4773     0AA0  0008               	return
  4774     0AA1                     __end_of_SetUpPumpArm:
  4775                           
  4776                           	psect	text13
  4777     0A8D                     __ptext13:	
  4778 ;; *************** function _SetUpPump *****************
  4779 ;; Defined at:
  4780 ;;		line 429 in file "motorMain.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;		None
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;		None
  4785 ;; Return value:  Size  Location     Type
  4786 ;;                  1    wreg      void 
  4787 ;; Registers used:
  4788 ;;		None
  4789 ;; Tracked objects:
  4790 ;;		On entry : 0/0
  4791 ;;		On exit  : 0/0
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4798 ;;Total ram usage:        0 bytes
  4799 ;; Hardware stack levels used: 1
  4800 ;; Hardware stack levels required when called: 2
  4801 ;; This function calls:
  4802 ;;		Nothing
  4803 ;; This function is called by:
  4804 ;;		_main
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808     0A8D                     _SetUpPump:	
  4809                           ;psect for function _SetUpPump
  4810                           
  4811     0A8D                     l2883:	
  4812                           ;incstack = 0
  4813                           ; Regs used in _SetUpPump: []
  4814                           
  4815                           
  4816                           ;motorMain.c: 432:     TRISBbits.TRISB2 = 0;
  4817     0A8D  0020               	movlb	0	; select bank0
  4818     0A8E  1112               	bcf	18,2	;volatile
  4819                           
  4820                           ;motorMain.c: 433:     TRISBbits.TRISB3 = 0;
  4821     0A8F  1192               	bcf	18,3	;volatile
  4822                           
  4823                           ;motorMain.c: 434:     ANSELBbits.ANSB2 = 0;
  4824     0A90  003E               	movlb	30	; select bank30
  4825     0A91  1143               	bcf	67,2	;volatile
  4826                           
  4827                           ;motorMain.c: 435:     ANSELBbits.ANSB3 = 0;
  4828     0A92  11C3               	bcf	67,3	;volatile
  4829                           
  4830                           ;motorMain.c: 437:     LATBbits.LATB2 = 0;
  4831     0A93  0020               	movlb	0	; select bank0
  4832     0A94  1117               	bcf	23,2	;volatile
  4833                           
  4834                           ;motorMain.c: 438:     LATBbits.LATB3 = 0;
  4835     0A95  1197               	bcf	23,3	;volatile
  4836     0A96                     l465:
  4837     0A96  0008               	return
  4838     0A97                     __end_of_SetUpPump:
  4839                           
  4840                           	psect	text14
  4841     0DE8                     __ptext14:	
  4842 ;; *************** function _SetUpColorSensor *****************
  4843 ;; Defined at:
  4844 ;;		line 471 in file "./Color_Header.h"
  4845 ;; Parameters:    Size  Location     Type
  4846 ;;		None
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;  result          2    8[BANK0 ] int 
  4849 ;; Return value:  Size  Location     Type
  4850 ;;                  1    wreg      void 
  4851 ;; Registers used:
  4852 ;;		wreg, status,2, status,0, pclath, cstack
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/0
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4859 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4860 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4861 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4862 ;;Total ram usage:        4 bytes
  4863 ;; Hardware stack levels used: 1
  4864 ;; Hardware stack levels required when called: 4
  4865 ;; This function calls:
  4866 ;;		_SetUp
  4867 ;;		_SetUpI2C
  4868 ;; This function is called by:
  4869 ;;		_main
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873     0DE8                     _SetUpColorSensor:	
  4874                           ;psect for function _SetUpColorSensor
  4875                           
  4876     0DE8                     l2815:	
  4877                           ;incstack = 0
  4878                           ; Regs used in _SetUpColorSensor: [wreg+status,2+status,0+pclath+cstack]
  4879                           
  4880                           
  4881                           ;./Color_Header.h: 477:     SetUpI2C();
  4882     0DE8  318A  2283  318D   	fcall	_SetUpI2C
  4883                           
  4884                           ;./Color_Header.h: 478:     int result = SetUp();
  4885     0DEB  318E  2641  318D   	fcall	_SetUp
  4886     0DEE  0020               	movlb	0	; select bank0
  4887     0DEF  0821               	movf	?_SetUp+1,w
  4888     0DF0  00A9               	movwf	SetUpColorSensor@result+1
  4889     0DF1  0820               	movf	?_SetUp,w
  4890     0DF2  00A8               	movwf	SetUpColorSensor@result
  4891     0DF3                     l2817:
  4892                           
  4893                           ;./Color_Header.h: 479:     if(result == 1){
  4894     0DF3  0328               	decf	SetUpColorSensor@result,w
  4895     0DF4  0429               	iorwf	SetUpColorSensor@result+1,w
  4896     0DF5  1D03               	btfss	3,2
  4897     0DF6  2DF8               	goto	u2091
  4898     0DF7  2DF9               	goto	u2090
  4899     0DF8                     u2091:
  4900     0DF8  2E40               	goto	l302
  4901     0DF9                     u2090:
  4902     0DF9                     l2819:
  4903                           
  4904                           ;./Color_Header.h: 480:         LATAbits.LATA0 = 1;
  4905     0DF9  1416               	bsf	22,0	;volatile
  4906                           
  4907                           ;./Color_Header.h: 481:         LATAbits.LATA1 = 1;
  4908     0DFA  1496               	bsf	22,1	;volatile
  4909                           
  4910                           ;./Color_Header.h: 482:         LATAbits.LATA2 = 1;
  4911     0DFB  1516               	bsf	22,2	;volatile
  4912                           
  4913                           ;./Color_Header.h: 483:         LATAbits.LATA3 = 1;
  4914     0DFC  1596               	bsf	22,3	;volatile
  4915     0DFD                     l2821:
  4916                           
  4917                           ;./Color_Header.h: 484:         _delay((unsigned long)((500)*(32000000/4000.0)));
  4918     0DFD  3015               	movlw	21
  4919     0DFE  0020               	movlb	0	; select bank0
  4920     0DFF  00A7               	movwf	??_SetUpColorSensor+1
  4921     0E00  304B               	movlw	75
  4922     0E01  00A6               	movwf	??_SetUpColorSensor
  4923     0E02  30BE               	movlw	190
  4924     0E03                     u2627:
  4925     0E03  0B89               	decfsz	9,f
  4926     0E04  2E03               	goto	u2627
  4927     0E05  0BA6               	decfsz	??_SetUpColorSensor,f
  4928     0E06  2E03               	goto	u2627
  4929     0E07  0BA7               	decfsz	??_SetUpColorSensor+1,f
  4930     0E08  2E03               	goto	u2627
  4931     0E09  0000               	nop
  4932     0E0A                     l2823:
  4933                           
  4934                           ;./Color_Header.h: 485:         LATAbits.LATA0 = 0;
  4935     0E0A  0020               	movlb	0	; select bank0
  4936     0E0B  1016               	bcf	22,0	;volatile
  4937     0E0C                     l2825:
  4938                           
  4939                           ;./Color_Header.h: 486:         LATAbits.LATA1 = 0;
  4940     0E0C  1096               	bcf	22,1	;volatile
  4941     0E0D                     l2827:
  4942                           
  4943                           ;./Color_Header.h: 487:         LATAbits.LATA2 = 0;
  4944     0E0D  1116               	bcf	22,2	;volatile
  4945     0E0E                     l2829:
  4946                           
  4947                           ;./Color_Header.h: 488:         LATAbits.LATA3 = 0;
  4948     0E0E  1196               	bcf	22,3	;volatile
  4949                           
  4950                           ;./Color_Header.h: 489:         _delay((unsigned long)((500)*(32000000/4000.0)));
  4951     0E0F  3015               	movlw	21
  4952     0E10  0020               	movlb	0	; select bank0
  4953     0E11  00A7               	movwf	??_SetUpColorSensor+1
  4954     0E12  304B               	movlw	75
  4955     0E13  00A6               	movwf	??_SetUpColorSensor
  4956     0E14  30BE               	movlw	190
  4957     0E15                     u2637:
  4958     0E15  0B89               	decfsz	9,f
  4959     0E16  2E15               	goto	u2637
  4960     0E17  0BA6               	decfsz	??_SetUpColorSensor,f
  4961     0E18  2E15               	goto	u2637
  4962     0E19  0BA7               	decfsz	??_SetUpColorSensor+1,f
  4963     0E1A  2E15               	goto	u2637
  4964     0E1B  0000               	nop
  4965     0E1C                     l2831:
  4966                           
  4967                           ;./Color_Header.h: 491:         LATAbits.LATA0 = 1;
  4968     0E1C  0020               	movlb	0	; select bank0
  4969     0E1D  1416               	bsf	22,0	;volatile
  4970     0E1E                     l2833:
  4971                           
  4972                           ;./Color_Header.h: 492:         LATAbits.LATA1 = 1;
  4973     0E1E  1496               	bsf	22,1	;volatile
  4974     0E1F                     l2835:
  4975                           
  4976                           ;./Color_Header.h: 493:         LATAbits.LATA2 = 1;
  4977     0E1F  1516               	bsf	22,2	;volatile
  4978     0E20                     l2837:
  4979                           
  4980                           ;./Color_Header.h: 494:         LATAbits.LATA3 = 1;
  4981     0E20  1596               	bsf	22,3	;volatile
  4982                           
  4983                           ;./Color_Header.h: 495:         _delay((unsigned long)((500)*(32000000/4000.0)));
  4984     0E21  3015               	movlw	21
  4985     0E22  0020               	movlb	0	; select bank0
  4986     0E23  00A7               	movwf	??_SetUpColorSensor+1
  4987     0E24  304B               	movlw	75
  4988     0E25  00A6               	movwf	??_SetUpColorSensor
  4989     0E26  30BE               	movlw	190
  4990     0E27                     u2647:
  4991     0E27  0B89               	decfsz	9,f
  4992     0E28  2E27               	goto	u2647
  4993     0E29  0BA6               	decfsz	??_SetUpColorSensor,f
  4994     0E2A  2E27               	goto	u2647
  4995     0E2B  0BA7               	decfsz	??_SetUpColorSensor+1,f
  4996     0E2C  2E27               	goto	u2647
  4997     0E2D  0000               	nop
  4998     0E2E                     l2839:
  4999                           
  5000                           ;./Color_Header.h: 496:         LATAbits.LATA0 = 0;
  5001     0E2E  0020               	movlb	0	; select bank0
  5002     0E2F  1016               	bcf	22,0	;volatile
  5003     0E30                     l2841:
  5004                           
  5005                           ;./Color_Header.h: 497:         LATAbits.LATA1 = 0;
  5006     0E30  1096               	bcf	22,1	;volatile
  5007     0E31                     l2843:
  5008                           
  5009                           ;./Color_Header.h: 498:         LATAbits.LATA2 = 0;
  5010     0E31  1116               	bcf	22,2	;volatile
  5011     0E32                     l2845:
  5012                           
  5013                           ;./Color_Header.h: 499:         LATAbits.LATA3 = 0;
  5014     0E32  1196               	bcf	22,3	;volatile
  5015                           
  5016                           ;./Color_Header.h: 500:         _delay((unsigned long)((500)*(32000000/4000.0)));
  5017     0E33  3015               	movlw	21
  5018     0E34  0020               	movlb	0	; select bank0
  5019     0E35  00A7               	movwf	??_SetUpColorSensor+1
  5020     0E36  304B               	movlw	75
  5021     0E37  00A6               	movwf	??_SetUpColorSensor
  5022     0E38  30BE               	movlw	190
  5023     0E39                     u2657:
  5024     0E39  0B89               	decfsz	9,f
  5025     0E3A  2E39               	goto	u2657
  5026     0E3B  0BA6               	decfsz	??_SetUpColorSensor,f
  5027     0E3C  2E39               	goto	u2657
  5028     0E3D  0BA7               	decfsz	??_SetUpColorSensor+1,f
  5029     0E3E  2E39               	goto	u2657
  5030     0E3F  0000               	nop
  5031     0E40                     l302:
  5032     0E40  0008               	return
  5033     0E41                     __end_of_SetUpColorSensor:
  5034                           
  5035                           	psect	text15
  5036     0A83                     __ptext15:	
  5037 ;; *************** function _SetUpI2C *****************
  5038 ;; Defined at:
  5039 ;;		line 91 in file "./Color_Header.h"
  5040 ;; Parameters:    Size  Location     Type
  5041 ;;		None
  5042 ;; Auto vars:     Size  Location     Type
  5043 ;;		None
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  1    wreg      void 
  5046 ;; Registers used:
  5047 ;;		wreg, status,2, status,0, pclath, cstack
  5048 ;; Tracked objects:
  5049 ;;		On entry : 0/0
  5050 ;;		On exit  : 0/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5057 ;;Total ram usage:        0 bytes
  5058 ;; Hardware stack levels used: 1
  5059 ;; Hardware stack levels required when called: 3
  5060 ;; This function calls:
  5061 ;;		_SetUpI2CPins
  5062 ;;		_SetUpIC2Clock
  5063 ;; This function is called by:
  5064 ;;		_SetUpColorSensor
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068     0A83                     _SetUpI2C:	
  5069                           ;psect for function _SetUpI2C
  5070                           
  5071     0A83                     l2421:	
  5072                           ;incstack = 0
  5073                           ; Regs used in _SetUpI2C: [wreg+status,2+status,0+pclath+cstack]
  5074                           
  5075                           
  5076                           ;./Color_Header.h: 92:     SSP1CON1 =0x28;
  5077     0A83  3028               	movlw	40
  5078     0A84  0023               	movlb	3	; select bank3
  5079     0A85  0090               	movwf	16	;volatile
  5080     0A86                     l2423:
  5081                           
  5082                           ;./Color_Header.h: 94:     SetUpI2CPins();
  5083     0A86  318A  22F9  318A   	fcall	_SetUpI2CPins
  5084     0A89                     l2425:
  5085                           
  5086                           ;./Color_Header.h: 96:     SetUpIC2Clock();
  5087     0A89  318A  222E  318A   	fcall	_SetUpIC2Clock
  5088     0A8C                     l123:
  5089     0A8C  0008               	return
  5090     0A8D                     __end_of_SetUpI2C:
  5091                           
  5092                           	psect	text16
  5093     0A2E                     __ptext16:	
  5094 ;; *************** function _SetUpIC2Clock *****************
  5095 ;; Defined at:
  5096 ;;		line 85 in file "./Color_Header.h"
  5097 ;; Parameters:    Size  Location     Type
  5098 ;;		None
  5099 ;; Auto vars:     Size  Location     Type
  5100 ;;		None
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  1    wreg      void 
  5103 ;; Registers used:
  5104 ;;		wreg
  5105 ;; Tracked objects:
  5106 ;;		On entry : 0/0
  5107 ;;		On exit  : 0/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5114 ;;Total ram usage:        0 bytes
  5115 ;; Hardware stack levels used: 1
  5116 ;; Hardware stack levels required when called: 2
  5117 ;; This function calls:
  5118 ;;		Nothing
  5119 ;; This function is called by:
  5120 ;;		_SetUpI2C
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           
  5124     0A2E                     _SetUpIC2Clock:	
  5125                           ;psect for function _SetUpIC2Clock
  5126                           
  5127     0A2E                     l2271:	
  5128                           ;incstack = 0
  5129                           ; Regs used in _SetUpIC2Clock: [wreg]
  5130                           
  5131                           
  5132                           ;./Color_Header.h: 89:     SSP1ADD = 79;
  5133     0A2E  304F               	movlw	79
  5134     0A2F  0023               	movlb	3	; select bank3
  5135     0A30  008D               	movwf	13	;volatile
  5136     0A31                     l120:
  5137     0A31  0008               	return
  5138     0A32                     __end_of_SetUpIC2Clock:
  5139                           
  5140                           	psect	text17
  5141     0AF9                     __ptext17:	
  5142 ;; *************** function _SetUpI2CPins *****************
  5143 ;; Defined at:
  5144 ;;		line 68 in file "./Color_Header.h"
  5145 ;; Parameters:    Size  Location     Type
  5146 ;;		None
  5147 ;; Auto vars:     Size  Location     Type
  5148 ;;		None
  5149 ;; Return value:  Size  Location     Type
  5150 ;;                  1    wreg      void 
  5151 ;; Registers used:
  5152 ;;		wreg, status,2, status,0
  5153 ;; Tracked objects:
  5154 ;;		On entry : 0/0
  5155 ;;		On exit  : 0/0
  5156 ;;		Unchanged: 0/0
  5157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5162 ;;Total ram usage:        0 bytes
  5163 ;; Hardware stack levels used: 1
  5164 ;; Hardware stack levels required when called: 2
  5165 ;; This function calls:
  5166 ;;		Nothing
  5167 ;; This function is called by:
  5168 ;;		_SetUpI2C
  5169 ;; This function uses a non-reentrant model
  5170 ;;
  5171                           
  5172     0AF9                     _SetUpI2CPins:	
  5173                           ;psect for function _SetUpI2CPins
  5174                           
  5175     0AF9                     l2253:	
  5176                           ;incstack = 0
  5177                           ; Regs used in _SetUpI2CPins: [wreg+status,2+status,0]
  5178                           
  5179                           
  5180                           ;./Color_Header.h: 69:     SSP1CLKPPSbits.SSP1CLKPPS = 0x13;
  5181     0AF9  003D               	movlb	29	; select bank29
  5182     0AFA  0845               	movf	69,w	;volatile
  5183     0AFB  39E0               	andlw	-32
  5184     0AFC  3813               	iorlw	19
  5185     0AFD  00C5               	movwf	69	;volatile
  5186                           
  5187                           ;./Color_Header.h: 70:     SSP1DATPPSbits.SSP1DATPPS = 0x14;
  5188     0AFE  0846               	movf	70,w	;volatile
  5189     0AFF  39E0               	andlw	-32
  5190     0B00  3814               	iorlw	20
  5191     0B01  00C6               	movwf	70	;volatile
  5192     0B02                     l2255:
  5193                           
  5194                           ;./Color_Header.h: 72:     RC3PPS = 0x14;
  5195     0B02  3014               	movlw	20
  5196     0B03  003E               	movlb	30	; select bank30
  5197     0B04  00A3               	movwf	35	;volatile
  5198     0B05                     l2257:
  5199                           
  5200                           ;./Color_Header.h: 73:     RC4PPS = 0x15;
  5201     0B05  3015               	movlw	21
  5202     0B06  00A4               	movwf	36	;volatile
  5203     0B07                     l2259:
  5204                           
  5205                           ;./Color_Header.h: 76:     TRISCbits.TRISC3 = 1;
  5206     0B07  0020               	movlb	0	; select bank0
  5207     0B08  1593               	bsf	19,3	;volatile
  5208     0B09                     l2261:
  5209                           
  5210                           ;./Color_Header.h: 77:     TRISCbits.TRISC4 = 1;
  5211     0B09  1613               	bsf	19,4	;volatile
  5212     0B0A                     l2263:
  5213                           
  5214                           ;./Color_Header.h: 79:     ANSELCbits.ANSC3 = 0;
  5215     0B0A  003E               	movlb	30	; select bank30
  5216     0B0B  11CE               	bcf	78,3	;volatile
  5217     0B0C                     l2265:
  5218                           
  5219                           ;./Color_Header.h: 80:     ANSELCbits.ANSC4 = 0;
  5220     0B0C  124E               	bcf	78,4	;volatile
  5221     0B0D                     l2267:
  5222                           
  5223                           ;./Color_Header.h: 82:     WPUCbits.WPUC3 = 1;
  5224     0B0D  15CF               	bsf	79,3	;volatile
  5225     0B0E                     l2269:
  5226                           
  5227                           ;./Color_Header.h: 83:     WPUCbits.WPUC4 = 1;
  5228     0B0E  164F               	bsf	79,4	;volatile
  5229     0B0F                     l117:
  5230     0B0F  0008               	return
  5231     0B10                     __end_of_SetUpI2CPins:
  5232                           
  5233                           	psect	text18
  5234     0E41                     __ptext18:	
  5235 ;; *************** function _SetUp *****************
  5236 ;; Defined at:
  5237 ;;		line 186 in file "./Color_Header.h"
  5238 ;; Parameters:    Size  Location     Type
  5239 ;;		None
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;  value           2    4[BANK0 ] int 
  5242 ;; Return value:  Size  Location     Type
  5243 ;;                  2    0[BANK0 ] int 
  5244 ;; Registers used:
  5245 ;;		wreg, status,2, status,0, pclath, cstack
  5246 ;; Tracked objects:
  5247 ;;		On entry : 0/0
  5248 ;;		On exit  : 0/0
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5251 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5252 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5253 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5254 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5255 ;;Total ram usage:        6 bytes
  5256 ;; Hardware stack levels used: 1
  5257 ;; Hardware stack levels required when called: 3
  5258 ;; This function calls:
  5259 ;;		_EndIC2Transmission
  5260 ;;		_RepeatedStart
  5261 ;;		_StartIC2Transmission
  5262 ;;		_StartReadRequest
  5263 ;;		_StartWriteRequest
  5264 ;; This function is called by:
  5265 ;;		_SetUpColorSensor
  5266 ;; This function uses a non-reentrant model
  5267 ;;
  5268                           
  5269     0E41                     _SetUp:	
  5270                           ;psect for function _SetUp
  5271                           
  5272     0E41                     l2427:	
  5273                           ;incstack = 0
  5274                           ; Regs used in _SetUp: [wreg+status,2+status,0+pclath+cstack]
  5275                           
  5276                           
  5277                           ;./Color_Header.h: 187:     StartIC2Transmission();
  5278     0E41  318A  2279  318E   	fcall	_StartIC2Transmission
  5279     0E44                     l2429:
  5280                           
  5281                           ;./Color_Header.h: 189:     StartWriteRequest();
  5282     0E44  318A  22C1  318E   	fcall	_StartWriteRequest
  5283                           
  5284                           ;./Color_Header.h: 193:     SSP1BUF = 0x80;;
  5285     0E47  3080               	movlw	128
  5286     0E48  0023               	movlb	3	; select bank3
  5287     0E49  008C               	movwf	12	;volatile
  5288     0E4A                     l183:	
  5289                           ;./Color_Header.h: 195:     while(!PIR3bits.SSP1IF){}
  5290                           
  5291     0E4A  002E               	movlb	14	; select bank14
  5292     0E4B  1C0F               	btfss	15,0	;volatile
  5293     0E4C  2E4E               	goto	u1491
  5294     0E4D  2E4F               	goto	u1490
  5295     0E4E                     u1491:
  5296     0E4E  2E4A               	goto	l183
  5297     0E4F                     u1490:
  5298     0E4F                     l186:
  5299     0E4F  0023               	movlb	3	; select bank3
  5300     0E50  1B11               	btfsc	17,6	;volatile
  5301     0E51  2E53               	goto	u1501
  5302     0E52  2E54               	goto	u1500
  5303     0E53                     u1501:
  5304     0E53  2E4F               	goto	l186
  5305     0E54                     u1500:
  5306     0E54                     l188:
  5307                           
  5308                           ;./Color_Header.h: 197:     PIR3bits.SSP1IF = 0;
  5309     0E54  002E               	movlb	14	; select bank14
  5310     0E55  100F               	bcf	15,0	;volatile
  5311     0E56                     l2431:
  5312                           
  5313                           ;./Color_Header.h: 200:     SSP1BUF = 0b11;;
  5314     0E56  3003               	movlw	3
  5315     0E57  0023               	movlb	3	; select bank3
  5316     0E58  008C               	movwf	12	;volatile
  5317     0E59                     l189:	
  5318                           ;./Color_Header.h: 202:     while(!PIR3bits.SSP1IF){}
  5319                           
  5320     0E59  002E               	movlb	14	; select bank14
  5321     0E5A  1C0F               	btfss	15,0	;volatile
  5322     0E5B  2E5D               	goto	u1511
  5323     0E5C  2E5E               	goto	u1510
  5324     0E5D                     u1511:
  5325     0E5D  2E59               	goto	l189
  5326     0E5E                     u1510:
  5327     0E5E                     l192:
  5328     0E5E  0023               	movlb	3	; select bank3
  5329     0E5F  1B11               	btfsc	17,6	;volatile
  5330     0E60  2E62               	goto	u1521
  5331     0E61  2E63               	goto	u1520
  5332     0E62                     u1521:
  5333     0E62  2E5E               	goto	l192
  5334     0E63                     u1520:
  5335     0E63                     l194:
  5336                           
  5337                           ;./Color_Header.h: 204:     PIR3bits.SSP1IF = 0;
  5338     0E63  002E               	movlb	14	; select bank14
  5339     0E64  100F               	bcf	15,0	;volatile
  5340     0E65                     l2433:
  5341                           
  5342                           ;./Color_Header.h: 206:     RepeatedStart();
  5343     0E65  318A  2266  318E   	fcall	_RepeatedStart
  5344     0E68                     l2435:
  5345                           
  5346                           ;./Color_Header.h: 210:     StartWriteRequest();
  5347     0E68  318A  22C1  318E   	fcall	_StartWriteRequest
  5348                           
  5349                           ;./Color_Header.h: 212:     SSP1BUF = 0x92;;
  5350     0E6B  3092               	movlw	146
  5351     0E6C  0023               	movlb	3	; select bank3
  5352     0E6D  008C               	movwf	12	;volatile
  5353     0E6E                     l195:	
  5354                           ;./Color_Header.h: 213:     while(!PIR3bits.SSP1IF){}
  5355                           
  5356     0E6E  002E               	movlb	14	; select bank14
  5357     0E6F  1C0F               	btfss	15,0	;volatile
  5358     0E70  2E72               	goto	u1531
  5359     0E71  2E73               	goto	u1530
  5360     0E72                     u1531:
  5361     0E72  2E6E               	goto	l195
  5362     0E73                     u1530:
  5363     0E73                     l198:
  5364     0E73  0023               	movlb	3	; select bank3
  5365     0E74  1B11               	btfsc	17,6	;volatile
  5366     0E75  2E77               	goto	u1541
  5367     0E76  2E78               	goto	u1540
  5368     0E77                     u1541:
  5369     0E77  2E73               	goto	l198
  5370     0E78                     u1540:
  5371     0E78                     l200:
  5372                           
  5373                           ;./Color_Header.h: 215:     PIR3bits.SSP1IF = 0;
  5374     0E78  002E               	movlb	14	; select bank14
  5375     0E79  100F               	bcf	15,0	;volatile
  5376     0E7A                     l2437:
  5377                           
  5378                           ;./Color_Header.h: 218:     RepeatedStart();
  5379     0E7A  318A  2266  318E   	fcall	_RepeatedStart
  5380     0E7D                     l2439:
  5381                           
  5382                           ;./Color_Header.h: 221:     StartReadRequest();
  5383     0E7D  318A  22B1  318E   	fcall	_StartReadRequest
  5384     0E80                     l2441:
  5385                           
  5386                           ;./Color_Header.h: 223:     SSP1CON2bits.RCEN = 1;
  5387     0E80  0023               	movlb	3	; select bank3
  5388     0E81  1591               	bsf	17,3	;volatile
  5389     0E82                     l201:	
  5390                           ;./Color_Header.h: 224:     while(!PIR3bits.SSP1IF){}
  5391                           
  5392     0E82  002E               	movlb	14	; select bank14
  5393     0E83  1C0F               	btfss	15,0	;volatile
  5394     0E84  2E86               	goto	u1551
  5395     0E85  2E87               	goto	u1550
  5396     0E86                     u1551:
  5397     0E86  2E82               	goto	l201
  5398     0E87                     u1550:
  5399     0E87                     l203:
  5400                           
  5401                           ;./Color_Header.h: 225:     PIR3bits.SSP1IF = 0;
  5402     0E87  100F               	bcf	15,0	;volatile
  5403     0E88                     l2443:
  5404                           
  5405                           ;./Color_Header.h: 226:     int value = SSP1BUF;
  5406     0E88  0023               	movlb	3	; select bank3
  5407     0E89  080C               	movf	12,w	;volatile
  5408     0E8A  0020               	movlb	0	; select bank0
  5409     0E8B  00A2               	movwf	??_SetUp
  5410     0E8C  01A3               	clrf	??_SetUp+1
  5411     0E8D  0822               	movf	??_SetUp,w
  5412     0E8E  00A4               	movwf	SetUp@value
  5413     0E8F  0823               	movf	??_SetUp+1,w
  5414     0E90  00A5               	movwf	SetUp@value+1
  5415     0E91                     l2445:
  5416                           
  5417                           ;./Color_Header.h: 227:     SSP1CON2bits.ACKDT = 0;
  5418     0E91  0023               	movlb	3	; select bank3
  5419     0E92  1291               	bcf	17,5	;volatile
  5420     0E93                     l2447:
  5421                           
  5422                           ;./Color_Header.h: 229:     EndIC2Transmission();
  5423     0E93  318A  225D  318E   	fcall	_EndIC2Transmission
  5424     0E96                     l2449:
  5425                           
  5426                           ;./Color_Header.h: 230:     if(value == 0xAB){
  5427     0E96  30AB               	movlw	171
  5428     0E97  0020               	movlb	0	; select bank0
  5429     0E98  0624               	xorwf	SetUp@value,w
  5430     0E99  0425               	iorwf	SetUp@value+1,w
  5431     0E9A  1D03               	btfss	3,2
  5432     0E9B  2E9D               	goto	u1561
  5433     0E9C  2E9E               	goto	u1560
  5434     0E9D                     u1561:
  5435     0E9D  2EA3               	goto	l2455
  5436     0E9E                     u1560:
  5437     0E9E                     l2451:
  5438                           
  5439                           ;./Color_Header.h: 231:         return 1;
  5440     0E9E  3001               	movlw	1
  5441     0E9F  00A0               	movwf	?_SetUp
  5442     0EA0  3000               	movlw	0
  5443     0EA1  00A1               	movwf	?_SetUp+1
  5444     0EA2  2EA5               	goto	l205
  5445     0EA3                     l2455:
  5446                           
  5447                           ;./Color_Header.h: 233:     return 0;
  5448     0EA3  01A0               	clrf	?_SetUp
  5449     0EA4  01A1               	clrf	?_SetUp+1
  5450     0EA5                     l205:
  5451     0EA5  0008               	return
  5452     0EA6                     __end_of_SetUp:
  5453                           
  5454                           	psect	text19
  5455     0AC1                     __ptext19:	
  5456 ;; *************** function _StartWriteRequest *****************
  5457 ;; Defined at:
  5458 ;;		line 140 in file "./Color_Header.h"
  5459 ;; Parameters:    Size  Location     Type
  5460 ;;		None
  5461 ;; Auto vars:     Size  Location     Type
  5462 ;;		None
  5463 ;; Return value:  Size  Location     Type
  5464 ;;                  1    wreg      void 
  5465 ;; Registers used:
  5466 ;;		wreg
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5476 ;;Total ram usage:        0 bytes
  5477 ;; Hardware stack levels used: 1
  5478 ;; Hardware stack levels required when called: 2
  5479 ;; This function calls:
  5480 ;;		Nothing
  5481 ;; This function is called by:
  5482 ;;		_SetUp
  5483 ;;		_IsColorDataReady
  5484 ;;		_ReadClear
  5485 ;;		_ReadRed
  5486 ;;		_ReadBlue
  5487 ;;		_ReadGreen
  5488 ;; This function uses a non-reentrant model
  5489 ;;
  5490                           
  5491     0AC1                     _StartWriteRequest:	
  5492                           ;psect for function _StartWriteRequest
  5493                           
  5494     0AC1                     l2275:	
  5495                           ;incstack = 0
  5496                           ; Regs used in _StartWriteRequest: [wreg]
  5497                           
  5498                           
  5499                           ;./Color_Header.h: 141:     SSP1BUFbits.SSPBUF = 0x39 << 1;;
  5500     0AC1  3072               	movlw	114
  5501     0AC2  0023               	movlb	3	; select bank3
  5502     0AC3  008C               	movwf	12	;volatile
  5503     0AC4                     l144:	
  5504                           ;./Color_Header.h: 143:     while(!PIR3bits.SSP1IF){}
  5505                           
  5506     0AC4  002E               	movlb	14	; select bank14
  5507     0AC5  1C0F               	btfss	15,0	;volatile
  5508     0AC6  2AC8               	goto	u1311
  5509     0AC7  2AC9               	goto	u1310
  5510     0AC8                     u1311:
  5511     0AC8  2AC4               	goto	l144
  5512     0AC9                     u1310:
  5513     0AC9                     l147:
  5514     0AC9  0023               	movlb	3	; select bank3
  5515     0ACA  1B11               	btfsc	17,6	;volatile
  5516     0ACB  2ACD               	goto	u1321
  5517     0ACC  2ACE               	goto	u1320
  5518     0ACD                     u1321:
  5519     0ACD  2AC9               	goto	l147
  5520     0ACE                     u1320:
  5521     0ACE                     l149:
  5522                           
  5523                           ;./Color_Header.h: 145:     PIR3bits.SSP1IF = 0;
  5524     0ACE  002E               	movlb	14	; select bank14
  5525     0ACF  100F               	bcf	15,0	;volatile
  5526     0AD0                     l150:
  5527     0AD0  0008               	return
  5528     0AD1                     __end_of_StartWriteRequest:
  5529                           
  5530                           	psect	text20
  5531     0AB1                     __ptext20:	
  5532 ;; *************** function _StartReadRequest *****************
  5533 ;; Defined at:
  5534 ;;		line 148 in file "./Color_Header.h"
  5535 ;; Parameters:    Size  Location     Type
  5536 ;;		None
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;		None
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  1    wreg      void 
  5541 ;; Registers used:
  5542 ;;		wreg
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5552 ;;Total ram usage:        0 bytes
  5553 ;; Hardware stack levels used: 1
  5554 ;; Hardware stack levels required when called: 2
  5555 ;; This function calls:
  5556 ;;		Nothing
  5557 ;; This function is called by:
  5558 ;;		_SetUp
  5559 ;;		_IsColorDataReady
  5560 ;;		_ReadClear
  5561 ;;		_ReadRed
  5562 ;;		_ReadBlue
  5563 ;;		_ReadGreen
  5564 ;; This function uses a non-reentrant model
  5565 ;;
  5566                           
  5567     0AB1                     _StartReadRequest:	
  5568                           ;psect for function _StartReadRequest
  5569                           
  5570     0AB1                     l2279:	
  5571                           ;incstack = 0
  5572                           ; Regs used in _StartReadRequest: [wreg]
  5573                           
  5574                           
  5575                           ;./Color_Header.h: 149:     SSP1BUF = (0x39 << 1) | 1;;
  5576     0AB1  3073               	movlw	115
  5577     0AB2  0023               	movlb	3	; select bank3
  5578     0AB3  008C               	movwf	12	;volatile
  5579     0AB4                     l153:	
  5580                           ;./Color_Header.h: 150:     while(!PIR3bits.SSP1IF){}
  5581                           
  5582     0AB4  002E               	movlb	14	; select bank14
  5583     0AB5  1C0F               	btfss	15,0	;volatile
  5584     0AB6  2AB8               	goto	u1341
  5585     0AB7  2AB9               	goto	u1340
  5586     0AB8                     u1341:
  5587     0AB8  2AB4               	goto	l153
  5588     0AB9                     u1340:
  5589     0AB9                     l156:
  5590     0AB9  0023               	movlb	3	; select bank3
  5591     0ABA  1B11               	btfsc	17,6	;volatile
  5592     0ABB  2ABD               	goto	u1351
  5593     0ABC  2ABE               	goto	u1350
  5594     0ABD                     u1351:
  5595     0ABD  2AB9               	goto	l156
  5596     0ABE                     u1350:
  5597     0ABE                     l158:
  5598                           
  5599                           ;./Color_Header.h: 152:     PIR3bits.SSP1IF = 0;
  5600     0ABE  002E               	movlb	14	; select bank14
  5601     0ABF  100F               	bcf	15,0	;volatile
  5602     0AC0                     l159:
  5603     0AC0  0008               	return
  5604     0AC1                     __end_of_StartReadRequest:
  5605                           
  5606                           	psect	text21
  5607     0A79                     __ptext21:	
  5608 ;; *************** function _StartIC2Transmission *****************
  5609 ;; Defined at:
  5610 ;;		line 155 in file "./Color_Header.h"
  5611 ;; Parameters:    Size  Location     Type
  5612 ;;		None
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;		None
  5615 ;; Return value:  Size  Location     Type
  5616 ;;                  1    wreg      void 
  5617 ;; Registers used:
  5618 ;;		None
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5628 ;;Total ram usage:        0 bytes
  5629 ;; Hardware stack levels used: 1
  5630 ;; Hardware stack levels required when called: 2
  5631 ;; This function calls:
  5632 ;;		Nothing
  5633 ;; This function is called by:
  5634 ;;		_SetUp
  5635 ;;		_IsColorDataReady
  5636 ;;		_ReadClear
  5637 ;;		_ReadRed
  5638 ;;		_ReadBlue
  5639 ;;		_ReadGreen
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643     0A79                     _StartIC2Transmission:	
  5644                           ;psect for function _StartIC2Transmission
  5645                           
  5646     0A79                     l2273:	
  5647                           ;incstack = 0
  5648                           ; Regs used in _StartIC2Transmission: []
  5649                           
  5650                           
  5651                           ;./Color_Header.h: 156:     SSP1CON2bits.SEN = 1;
  5652     0A79  0023               	movlb	3	; select bank3
  5653     0A7A  1411               	bsf	17,0	;volatile
  5654                           
  5655                           ;./Color_Header.h: 157:     PIR3bits.SSP1IF = 0;
  5656     0A7B  002E               	movlb	14	; select bank14
  5657     0A7C  100F               	bcf	15,0	;volatile
  5658     0A7D                     l162:	
  5659                           ;./Color_Header.h: 159:     while(!PIR3bits.SSP1IF){}
  5660                           
  5661     0A7D  1C0F               	btfss	15,0	;volatile
  5662     0A7E  2A80               	goto	u1301
  5663     0A7F  2A81               	goto	u1300
  5664     0A80                     u1301:
  5665     0A80  2A7D               	goto	l162
  5666     0A81                     u1300:
  5667     0A81                     l164:
  5668                           
  5669                           ;./Color_Header.h: 160:     PIR3bits.SSP1IF = 0;
  5670     0A81  100F               	bcf	15,0	;volatile
  5671     0A82                     l165:
  5672     0A82  0008               	return
  5673     0A83                     __end_of_StartIC2Transmission:
  5674                           
  5675                           	psect	text22
  5676     0A66                     __ptext22:	
  5677 ;; *************** function _RepeatedStart *****************
  5678 ;; Defined at:
  5679 ;;		line 169 in file "./Color_Header.h"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;		None
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;		None
  5684 ;; Return value:  Size  Location     Type
  5685 ;;                  1    wreg      void 
  5686 ;; Registers used:
  5687 ;;		None
  5688 ;; Tracked objects:
  5689 ;;		On entry : 0/0
  5690 ;;		On exit  : 0/0
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5697 ;;Total ram usage:        0 bytes
  5698 ;; Hardware stack levels used: 1
  5699 ;; Hardware stack levels required when called: 2
  5700 ;; This function calls:
  5701 ;;		Nothing
  5702 ;; This function is called by:
  5703 ;;		_SetUp
  5704 ;;		_IsColorDataReady
  5705 ;;		_ReadClear
  5706 ;;		_ReadRed
  5707 ;;		_ReadBlue
  5708 ;;		_ReadGreen
  5709 ;; This function uses a non-reentrant model
  5710 ;;
  5711                           
  5712     0A66                     _RepeatedStart:	
  5713                           ;psect for function _RepeatedStart
  5714                           
  5715     0A66                     l2277:	
  5716                           ;incstack = 0
  5717                           ; Regs used in _RepeatedStart: []
  5718                           
  5719                           
  5720                           ;./Color_Header.h: 170:     SSP1CON2bits.RSEN = 1;
  5721     0A66  0023               	movlb	3	; select bank3
  5722     0A67  1491               	bsf	17,1	;volatile
  5723     0A68                     l174:	
  5724                           ;./Color_Header.h: 172:     while(!PIR3bits.SSP1IF){}
  5725                           
  5726     0A68  002E               	movlb	14	; select bank14
  5727     0A69  1C0F               	btfss	15,0	;volatile
  5728     0A6A  2A6C               	goto	u1331
  5729     0A6B  2A6D               	goto	u1330
  5730     0A6C                     u1331:
  5731     0A6C  2A68               	goto	l174
  5732     0A6D                     u1330:
  5733     0A6D                     l176:
  5734                           
  5735                           ;./Color_Header.h: 173:     PIR3bits.SSP1IF = 0;
  5736     0A6D  100F               	bcf	15,0	;volatile
  5737     0A6E                     l177:
  5738     0A6E  0008               	return
  5739     0A6F                     __end_of_RepeatedStart:
  5740                           
  5741                           	psect	text23
  5742     0A5D                     __ptext23:	
  5743 ;; *************** function _EndIC2Transmission *****************
  5744 ;; Defined at:
  5745 ;;		line 162 in file "./Color_Header.h"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;		None
  5748 ;; Auto vars:     Size  Location     Type
  5749 ;;		None
  5750 ;; Return value:  Size  Location     Type
  5751 ;;                  1    wreg      void 
  5752 ;; Registers used:
  5753 ;;		None
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5763 ;;Total ram usage:        0 bytes
  5764 ;; Hardware stack levels used: 1
  5765 ;; Hardware stack levels required when called: 2
  5766 ;; This function calls:
  5767 ;;		Nothing
  5768 ;; This function is called by:
  5769 ;;		_SetUp
  5770 ;;		_IsColorDataReady
  5771 ;;		_ReadClear
  5772 ;;		_ReadRed
  5773 ;;		_ReadBlue
  5774 ;;		_ReadGreen
  5775 ;; This function uses a non-reentrant model
  5776 ;;
  5777                           
  5778     0A5D                     _EndIC2Transmission:	
  5779                           ;psect for function _EndIC2Transmission
  5780                           
  5781     0A5D                     l2281:	
  5782                           ;incstack = 0
  5783                           ; Regs used in _EndIC2Transmission: []
  5784                           
  5785                           
  5786                           ;./Color_Header.h: 163:     SSP1CON2bits.PEN = 1;
  5787     0A5D  0023               	movlb	3	; select bank3
  5788     0A5E  1511               	bsf	17,2	;volatile
  5789     0A5F                     l168:	
  5790                           ;./Color_Header.h: 165:     while(!PIR3bits.SSP1IF){}
  5791                           
  5792     0A5F  002E               	movlb	14	; select bank14
  5793     0A60  1C0F               	btfss	15,0	;volatile
  5794     0A61  2A63               	goto	u1361
  5795     0A62  2A64               	goto	u1360
  5796     0A63                     u1361:
  5797     0A63  2A5F               	goto	l168
  5798     0A64                     u1360:
  5799     0A64                     l170:
  5800                           
  5801                           ;./Color_Header.h: 166:     PIR3bits.SSP1IF = 0;
  5802     0A64  100F               	bcf	15,0	;volatile
  5803     0A65                     l171:
  5804     0A65  0008               	return
  5805     0A66                     __end_of_EndIC2Transmission:
  5806                           
  5807                           	psect	text24
  5808     0A55                     __ptext24:	
  5809 ;; *************** function _SetUpAnalog *****************
  5810 ;; Defined at:
  5811 ;;		line 176 in file "./Color_Header.h"
  5812 ;; Parameters:    Size  Location     Type
  5813 ;;		None
  5814 ;; Auto vars:     Size  Location     Type
  5815 ;;		None
  5816 ;; Return value:  Size  Location     Type
  5817 ;;                  1    wreg      void 
  5818 ;; Registers used:
  5819 ;;		None
  5820 ;; Tracked objects:
  5821 ;;		On entry : 0/0
  5822 ;;		On exit  : 0/0
  5823 ;;		Unchanged: 0/0
  5824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5829 ;;Total ram usage:        0 bytes
  5830 ;; Hardware stack levels used: 1
  5831 ;; Hardware stack levels required when called: 2
  5832 ;; This function calls:
  5833 ;;		Nothing
  5834 ;; This function is called by:
  5835 ;;		_main
  5836 ;; This function uses a non-reentrant model
  5837 ;;
  5838                           
  5839     0A55                     _SetUpAnalog:	
  5840                           ;psect for function _SetUpAnalog
  5841                           
  5842     0A55                     l2813:	
  5843                           ;incstack = 0
  5844                           ; Regs used in _SetUpAnalog: []
  5845                           
  5846                           
  5847                           ;./Color_Header.h: 177:     DAC1CON0bits.DAC1EN = 1;
  5848     0A55  0032               	movlb	18	; select bank18
  5849     0A56  178E               	bsf	14,7	;volatile
  5850                           
  5851                           ;./Color_Header.h: 180:     DAC1CON0bits.DAC1OE2 = 1;
  5852     0A57  160E               	bsf	14,4	;volatile
  5853                           
  5854                           ;./Color_Header.h: 182:     TRISBbits.TRISB7 = 0;
  5855     0A58  0020               	movlb	0	; select bank0
  5856     0A59  1392               	bcf	18,7	;volatile
  5857                           
  5858                           ;./Color_Header.h: 183:     ANSELBbits.ANSB7 = 1;
  5859     0A5A  003E               	movlb	30	; select bank30
  5860     0A5B  17C3               	bsf	67,7	;volatile
  5861     0A5C                     l180:
  5862     0A5C  0008               	return
  5863     0A5D                     __end_of_SetUpAnalog:
  5864                           
  5865                           	psect	text25
  5866     0B5F                     __ptext25:	
  5867 ;; *************** function _MovePumpArm *****************
  5868 ;; Defined at:
  5869 ;;		line 441 in file "motorMain.c"
  5870 ;; Parameters:    Size  Location     Type
  5871 ;;  switchValue     2    0[BANK0 ] int 
  5872 ;; Auto vars:     Size  Location     Type
  5873 ;;		None
  5874 ;; Return value:  Size  Location     Type
  5875 ;;                  1    wreg      void 
  5876 ;; Registers used:
  5877 ;;		wreg, status,2, status,0
  5878 ;; Tracked objects:
  5879 ;;		On entry : 0/0
  5880 ;;		On exit  : 0/0
  5881 ;;		Unchanged: 0/0
  5882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5883 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5886 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5887 ;;Total ram usage:        2 bytes
  5888 ;; Hardware stack levels used: 1
  5889 ;; Hardware stack levels required when called: 2
  5890 ;; This function calls:
  5891 ;;		Nothing
  5892 ;; This function is called by:
  5893 ;;		_main
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897     0B5F                     _MovePumpArm:	
  5898                           ;psect for function _MovePumpArm
  5899                           
  5900     0B5F                     l2885:	
  5901                           ;incstack = 0
  5902                           ; Regs used in _MovePumpArm: [wreg+status,2+status,0]
  5903                           
  5904                           
  5905                           ;motorMain.c: 442:     LATBbits.LATB0 = 0;
  5906     0B5F  0020               	movlb	0	; select bank0
  5907     0B60  1017               	bcf	23,0	;volatile
  5908                           
  5909                           ;motorMain.c: 443:     LATBbits.LATB1 = 0;
  5910     0B61  1097               	bcf	23,1	;volatile
  5911     0B62                     l2887:
  5912                           
  5913                           ;motorMain.c: 444:     if(switchValue == SWITCH_MIN){
  5914     0B62  30E8               	movlw	232
  5915     0B63  0620               	xorwf	MovePumpArm@switchValue,w
  5916     0B64  3003               	movlw	3
  5917     0B65  1903               	skipnz
  5918     0B66  0621               	xorwf	MovePumpArm@switchValue+1,w
  5919     0B67  1D03               	btfss	3,2
  5920     0B68  2B6A               	goto	u2181
  5921     0B69  2B6B               	goto	u2180
  5922     0B6A                     u2181:
  5923     0B6A  2B6E               	goto	l2891
  5924     0B6B                     u2180:
  5925     0B6B                     l2889:
  5926                           
  5927                           ;motorMain.c: 445:             LATBbits.LATB0 = 1;
  5928     0B6B  1417               	bsf	23,0	;volatile
  5929                           
  5930                           ;motorMain.c: 446:             LATBbits.LATB1 = 0;
  5931     0B6C  1097               	bcf	23,1	;volatile
  5932                           
  5933                           ;motorMain.c: 447:     }
  5934     0B6D  2B79               	goto	l471
  5935     0B6E                     l2891:
  5936     0B6E  30D0               	movlw	208
  5937     0B6F  0620               	xorwf	MovePumpArm@switchValue,w
  5938     0B70  3007               	movlw	7
  5939     0B71  1903               	skipnz
  5940     0B72  0621               	xorwf	MovePumpArm@switchValue+1,w
  5941     0B73  1D03               	btfss	3,2
  5942     0B74  2B76               	goto	u2191
  5943     0B75  2B77               	goto	u2190
  5944     0B76                     u2191:
  5945     0B76  2B79               	goto	l471
  5946     0B77                     u2190:
  5947     0B77                     l2893:
  5948                           
  5949                           ;motorMain.c: 449:             LATBbits.LATB0 = 0;
  5950     0B77  1017               	bcf	23,0	;volatile
  5951                           
  5952                           ;motorMain.c: 450:             LATBbits.LATB1 = 1;
  5953     0B78  1497               	bsf	23,1	;volatile
  5954     0B79                     l471:
  5955     0B79  0008               	return
  5956     0B7A                     __end_of_MovePumpArm:
  5957                           
  5958                           	psect	text26
  5959     0C69                     __ptext26:	
  5960 ;; *************** function _CreateProcessCommand *****************
  5961 ;; Defined at:
  5962 ;;		line 395 in file "motorMain.c"
  5963 ;; Parameters:    Size  Location     Type
  5964 ;;		None
  5965 ;; Auto vars:     Size  Location     Type
  5966 ;;		None
  5967 ;; Return value:  Size  Location     Type
  5968 ;;                  1    wreg      void 
  5969 ;; Registers used:
  5970 ;;		wreg, status,2, status,0
  5971 ;; Tracked objects:
  5972 ;;		On entry : 0/0
  5973 ;;		On exit  : 0/0
  5974 ;;		Unchanged: 0/0
  5975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5980 ;;Total ram usage:        0 bytes
  5981 ;; Hardware stack levels used: 1
  5982 ;; Hardware stack levels required when called: 2
  5983 ;; This function calls:
  5984 ;;		Nothing
  5985 ;; This function is called by:
  5986 ;;		_main
  5987 ;; This function uses a non-reentrant model
  5988 ;;
  5989                           
  5990     0C69                     _CreateProcessCommand:	
  5991                           ;psect for function _CreateProcessCommand
  5992                           
  5993     0C69                     l2963:	
  5994                           ;incstack = 0
  5995                           ; Regs used in _CreateProcessCommand: [wreg+status,2+status,0]
  5996                           
  5997                           
  5998                           ;motorMain.c: 396:     if(controls.switchC == SWITCH_MAX){
  5999     0C69  30D0               	movlw	208
  6000     0C6A  0021               	movlb	1	; select bank1
  6001     0C6B  065A               	xorwf	(_controls^(0+128)+12),w
  6002     0C6C  3007               	movlw	7
  6003     0C6D  1903               	skipnz
  6004     0C6E  065B               	xorwf	((_controls+1)^(0+128)+12),w
  6005     0C6F  1D03               	btfss	3,2
  6006     0C70  2C72               	goto	u2371
  6007     0C71  2C73               	goto	u2370
  6008     0C72                     u2371:
  6009     0C72  2C76               	goto	l2967
  6010     0C73                     u2370:
  6011     0C73                     l2965:
  6012                           
  6013                           ;motorMain.c: 397:         ProcessOreCommand[6] =3;
  6014     0C73  3003               	movlw	3
  6015     0C74  00C0               	movwf	(_ProcessOreCommand^(0+128)+6)
  6016                           
  6017                           ;motorMain.c: 398:     }
  6018     0C75  2C84               	goto	l456
  6019     0C76                     l2967:
  6020     0C76  30DC               	movlw	220
  6021     0C77  065A               	xorwf	(_controls^(0+128)+12),w
  6022     0C78  3005               	movlw	5
  6023     0C79  1903               	skipnz
  6024     0C7A  065B               	xorwf	((_controls+1)^(0+128)+12),w
  6025     0C7B  1D03               	btfss	3,2
  6026     0C7C  2C7E               	goto	u2381
  6027     0C7D  2C7F               	goto	u2380
  6028     0C7E                     u2381:
  6029     0C7E  2C82               	goto	l2971
  6030     0C7F                     u2380:
  6031     0C7F                     l2969:
  6032                           
  6033                           ;motorMain.c: 400:         ProcessOreCommand[6] = 1;
  6034     0C7F  01C0               	clrf	(_ProcessOreCommand^(0+128)+6)
  6035     0C80  0AC0               	incf	(_ProcessOreCommand^(0+128)+6),f
  6036                           
  6037                           ;motorMain.c: 401:     }
  6038     0C81  2C84               	goto	l456
  6039     0C82                     l2971:
  6040                           
  6041                           ;motorMain.c: 403:         ProcessOreCommand[6] = 2;
  6042     0C82  3002               	movlw	2
  6043     0C83  00C0               	movwf	(_ProcessOreCommand^(0+128)+6)
  6044     0C84                     l456:
  6045                           
  6046                           ;motorMain.c: 405:     currentCommand.receiveId = LASER_COMMAND;
  6047     0C84  3003               	movlw	3
  6048     0C85  0020               	movlb	0	; select bank0
  6049     0C86  00E1               	movwf	_currentCommand+12
  6050     0C87  3000               	movlw	0
  6051     0C88  00E2               	movwf	_currentCommand+13
  6052     0C89                     l2973:
  6053                           
  6054                           ;motorMain.c: 406:     currentCommand.receiveLimit = 0;
  6055     0C89  01DF               	clrf	_currentCommand+10
  6056     0C8A  01E0               	clrf	_currentCommand+11
  6057     0C8B                     l2975:
  6058                           
  6059                           ;motorMain.c: 407:     currentCommand.receiveIt = 0;
  6060     0C8B  01DD               	clrf	_currentCommand+8
  6061     0C8C  01DE               	clrf	_currentCommand+9
  6062                           
  6063                           ;motorMain.c: 408:     currentCommand.sendId = LASER_COMMAND;
  6064     0C8D  3003               	movlw	3
  6065     0C8E  00D9               	movwf	_currentCommand+4
  6066     0C8F  3000               	movlw	0
  6067     0C90  00DA               	movwf	_currentCommand+5
  6068     0C91                     l2977:
  6069                           
  6070                           ;motorMain.c: 409:     currentCommand.toSend = (unsigned char*) ProcessOreCommand;
  6071     0C91  30BA               	movlw	low _ProcessOreCommand
  6072     0C92  00DB               	movwf	low ((_currentCommand| 0+6))
  6073     0C93  3000               	movlw	high _ProcessOreCommand
  6074     0C94  00DC               	movwf	(low ((_currentCommand| 0+6))+1)
  6075     0C95                     l2979:
  6076                           
  6077                           ;motorMain.c: 410:     currentCommand.sendIt = 0;
  6078     0C95  01D7               	clrf	_currentCommand+2
  6079     0C96  01D8               	clrf	_currentCommand+3
  6080     0C97                     l2981:
  6081                           
  6082                           ;motorMain.c: 411:     currentCommand.sendLimit = 7;
  6083     0C97  3007               	movlw	7
  6084     0C98  00D5               	movwf	_currentCommand
  6085     0C99  3000               	movlw	0
  6086     0C9A  00D6               	movwf	_currentCommand+1
  6087     0C9B                     l2983:
  6088                           
  6089                           ;motorMain.c: 412:     currentCommand.done = 0;
  6090     0C9B  01E3               	clrf	_currentCommand+14
  6091     0C9C                     l2985:
  6092                           
  6093                           ;motorMain.c: 413:     PIE3bits.TXIE = 1;
  6094     0C9C  002E               	movlb	14	; select bank14
  6095     0C9D  1619               	bsf	25,4	;volatile
  6096     0C9E                     l459:
  6097     0C9E  0008               	return
  6098     0C9F                     __end_of_CreateProcessCommand:
  6099                           
  6100                           	psect	text27
  6101     0B44                     __ptext27:	
  6102 ;; *************** function _CreateLaserCommand *****************
  6103 ;; Defined at:
  6104 ;;		line 383 in file "motorMain.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;		None
  6107 ;; Auto vars:     Size  Location     Type
  6108 ;;		None
  6109 ;; Return value:  Size  Location     Type
  6110 ;;                  1    wreg      void 
  6111 ;; Registers used:
  6112 ;;		wreg, status,2, status,0
  6113 ;; Tracked objects:
  6114 ;;		On entry : 0/0
  6115 ;;		On exit  : 0/0
  6116 ;;		Unchanged: 0/0
  6117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6122 ;;Total ram usage:        0 bytes
  6123 ;; Hardware stack levels used: 1
  6124 ;; Hardware stack levels required when called: 2
  6125 ;; This function calls:
  6126 ;;		Nothing
  6127 ;; This function is called by:
  6128 ;;		_main
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132     0B44                     _CreateLaserCommand:	
  6133                           ;psect for function _CreateLaserCommand
  6134                           
  6135     0B44                     l2947:	
  6136                           ;incstack = 0
  6137                           ; Regs used in _CreateLaserCommand: [wreg+status,2+status,0]
  6138                           
  6139                           
  6140                           ;motorMain.c: 384:     currentCommand.receiveId = LASER_COMMAND;
  6141     0B44  3003               	movlw	3
  6142     0B45  0020               	movlb	0	; select bank0
  6143     0B46  00E1               	movwf	_currentCommand+12
  6144     0B47  3000               	movlw	0
  6145     0B48  00E2               	movwf	_currentCommand+13
  6146     0B49                     l2949:
  6147                           
  6148                           ;motorMain.c: 385:     currentCommand.receiveLimit = 0;
  6149     0B49  01DF               	clrf	_currentCommand+10
  6150     0B4A  01E0               	clrf	_currentCommand+11
  6151     0B4B                     l2951:
  6152                           
  6153                           ;motorMain.c: 386:     currentCommand.receiveIt = 0;
  6154     0B4B  01DD               	clrf	_currentCommand+8
  6155     0B4C  01DE               	clrf	_currentCommand+9
  6156                           
  6157                           ;motorMain.c: 387:     currentCommand.sendId = LASER_COMMAND;
  6158     0B4D  3003               	movlw	3
  6159     0B4E  00D9               	movwf	_currentCommand+4
  6160     0B4F  3000               	movlw	0
  6161     0B50  00DA               	movwf	_currentCommand+5
  6162     0B51                     l2953:
  6163                           
  6164                           ;motorMain.c: 388:     currentCommand.toSend = (unsigned char*) FireLaserCommand;
  6165     0B51  30C1               	movlw	low _FireLaserCommand
  6166     0B52  00DB               	movwf	low ((_currentCommand| 0+6))
  6167     0B53  3000               	movlw	high _FireLaserCommand
  6168     0B54  00DC               	movwf	(low ((_currentCommand| 0+6))+1)
  6169     0B55                     l2955:
  6170                           
  6171                           ;motorMain.c: 389:     currentCommand.sendIt = 0;
  6172     0B55  01D7               	clrf	_currentCommand+2
  6173     0B56  01D8               	clrf	_currentCommand+3
  6174     0B57                     l2957:
  6175                           
  6176                           ;motorMain.c: 390:     currentCommand.sendLimit = 7;
  6177     0B57  3007               	movlw	7
  6178     0B58  00D5               	movwf	_currentCommand
  6179     0B59  3000               	movlw	0
  6180     0B5A  00D6               	movwf	_currentCommand+1
  6181     0B5B                     l2959:
  6182                           
  6183                           ;motorMain.c: 391:     currentCommand.done = 0;
  6184     0B5B  01E3               	clrf	_currentCommand+14
  6185     0B5C                     l2961:
  6186                           
  6187                           ;motorMain.c: 392:     PIE3bits.TXIE = 1;
  6188     0B5C  002E               	movlb	14	; select bank14
  6189     0B5D  1619               	bsf	25,4	;volatile
  6190     0B5E                     l452:
  6191     0B5E  0008               	return
  6192     0B5F                     __end_of_CreateLaserCommand:
  6193                           
  6194                           	psect	text28
  6195     047E                     __ptext28:	
  6196 ;; *************** function _ColorSensor *****************
  6197 ;; Defined at:
  6198 ;;		line 505 in file "./Color_Header.h"
  6199 ;; Parameters:    Size  Location     Type
  6200 ;;  newI2CMessag    1    wreg     PTR unsigned char 
  6201 ;;		 -> newI2CMessage(1), 
  6202 ;;  I2CStage        1   12[BANK0 ] PTR int 
  6203 ;;		 -> I2CStage(2), 
  6204 ;;  colors          1   13[BANK0 ] PTR struct colorScheme
  6205 ;;		 -> colors(12), 
  6206 ;;  color           1   14[BANK0 ] PTR unsigned char 
  6207 ;;		 -> color(1), 
  6208 ;; Auto vars:     Size  Location     Type
  6209 ;;  newI2CMessag    1   20[BANK0 ] PTR unsigned char 
  6210 ;;		 -> newI2CMessage(1), 
  6211 ;; Return value:  Size  Location     Type
  6212 ;;                  1    wreg      void 
  6213 ;; Registers used:
  6214 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6215 ;; Tracked objects:
  6216 ;;		On entry : 0/0
  6217 ;;		On exit  : 0/0
  6218 ;;		Unchanged: 0/0
  6219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6220 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6221 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6222 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6223 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6224 ;;Total ram usage:        9 bytes
  6225 ;; Hardware stack levels used: 1
  6226 ;; Hardware stack levels required when called: 6
  6227 ;; This function calls:
  6228 ;;		_PlayTune
  6229 ;;		_UpdateColors
  6230 ;; This function is called by:
  6231 ;;		_main
  6232 ;; This function uses a non-reentrant model
  6233 ;;
  6234                           
  6235     047E                     _ColorSensor:	
  6236                           ;psect for function _ColorSensor
  6237                           
  6238                           
  6239                           ;incstack = 0
  6240                           ; Regs used in _ColorSensor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6241                           ;ColorSensor@newI2CMessage stored from wreg
  6242     047E  0020               	movlb	0	; select bank0
  6243     047F  00B4               	movwf	ColorSensor@newI2CMessage
  6244     0480                     l2847:
  6245                           
  6246                           ;./Color_Header.h: 506:     if(*newI2CMessage == 1 ){
  6247     0480  0834               	movf	ColorSensor@newI2CMessage,w
  6248     0481  0086               	movwf	6
  6249     0482  0187               	clrf	7
  6250     0483  0301               	decf	1,w
  6251     0484  1D03               	btfss	3,2
  6252     0485  2C87               	goto	u2101
  6253     0486  2C88               	goto	u2100
  6254     0487                     u2101:
  6255     0487  2D8E               	goto	l2879
  6256     0488                     u2100:
  6257     0488                     l2849:
  6258                           
  6259                           ;./Color_Header.h: 507:             *newI2CMessage =0;
  6260     0488  0834               	movf	ColorSensor@newI2CMessage,w
  6261     0489  0086               	movwf	6
  6262     048A  0187               	clrf	7
  6263     048B  0181               	clrf	1
  6264     048C                     l2851:
  6265                           
  6266                           ;./Color_Header.h: 508:             *I2CStage = UpdateColors(colors,*I2CStage);
  6267     048C  082C               	movf	ColorSensor@I2CStage,w
  6268     048D  0086               	movwf	6
  6269     048E  0187               	clrf	7
  6270     048F  3F40               	moviw [0]fsr1
  6271     0490  00A7               	movwf	UpdateColors@stageValue
  6272     0491  3F41               	moviw [1]fsr1
  6273     0492  00A8               	movwf	UpdateColors@stageValue+1
  6274     0493  082D               	movf	ColorSensor@colors,w
  6275     0494  318D  258F  3184   	fcall	_UpdateColors
  6276     0497  0020               	movlb	0	; select bank0
  6277     0498  00AF               	movwf	??_ColorSensor
  6278     0499  01B0               	clrf	??_ColorSensor+1
  6279     049A  082C               	movf	ColorSensor@I2CStage,w
  6280     049B  0086               	movwf	6
  6281     049C  0187               	clrf	7
  6282     049D  082F               	movf	??_ColorSensor,w
  6283     049E  3FC0               	movwi [0]fsr1
  6284     049F  0830               	movf	??_ColorSensor+1,w
  6285     04A0  3FC1               	movwi [1]fsr1
  6286     04A1                     l2853:
  6287                           
  6288                           ;./Color_Header.h: 510:             if(colors->allDone){
  6289     04A1  082D               	movf	ColorSensor@colors,w
  6290     04A2  3E0B               	addlw	11
  6291     04A3  0086               	movwf	6
  6292     04A4  3001               	movlw	1	; select bank2/3
  6293     04A5  0087               	movwf	7
  6294     04A6  0801               	movf	1,w
  6295     04A7  1903               	btfsc	3,2
  6296     04A8  2CAA               	goto	u2111
  6297     04A9  2CAB               	goto	u2110
  6298     04AA                     u2111:
  6299     04AA  2D8E               	goto	l2879
  6300     04AB                     u2110:
  6301     04AB                     l2855:
  6302                           
  6303                           ;./Color_Header.h: 511:                 if(colors->red > colors->blue && colors->red > c
      +                          olors->green){
  6304     04AB  082D               	movf	ColorSensor@colors,w
  6305     04AC  3E06               	addlw	6
  6306     04AD  0086               	movwf	6
  6307     04AE  3001               	movlw	1	; select bank2/3
  6308     04AF  0087               	movwf	7
  6309     04B0  3F40               	moviw [0]fsr1
  6310     04B1  00AF               	movwf	??_ColorSensor
  6311     04B2  3F41               	moviw [1]fsr1
  6312     04B3  00B0               	movwf	??_ColorSensor+1
  6313     04B4  082D               	movf	ColorSensor@colors,w
  6314     04B5  3E04               	addlw	4
  6315     04B6  0086               	movwf	6
  6316     04B7  3001               	movlw	1	; select bank2/3
  6317     04B8  0087               	movwf	7
  6318     04B9  3F40               	moviw [0]fsr1
  6319     04BA  00B1               	movwf	??_ColorSensor+2
  6320     04BB  3F41               	moviw [1]fsr1
  6321     04BC  00B2               	movwf	??_ColorSensor+3
  6322     04BD  0832               	movf	??_ColorSensor+3,w
  6323     04BE  3A80               	xorlw	128
  6324     04BF  00B3               	movwf	??_ColorSensor+4
  6325     04C0  0830               	movf	??_ColorSensor+1,w
  6326     04C1  3A80               	xorlw	128
  6327     04C2  0233               	subwf	??_ColorSensor+4,w
  6328     04C3  1D03               	skipz
  6329     04C4  2CC7               	goto	u2125
  6330     04C5  082F               	movf	??_ColorSensor,w
  6331     04C6  0231               	subwf	??_ColorSensor+2,w
  6332     04C7                     u2125:
  6333     04C7  1803               	skipnc
  6334     04C8  2CCA               	goto	u2121
  6335     04C9  2CCB               	goto	u2120
  6336     04CA                     u2121:
  6337     04CA  2CF6               	goto	l2863
  6338     04CB                     u2120:
  6339     04CB                     l2857:
  6340     04CB  0020               	movlb	0	; select bank0
  6341     04CC  082D               	movf	ColorSensor@colors,w
  6342     04CD  3E06               	addlw	6
  6343     04CE  0086               	movwf	6
  6344     04CF  3001               	movlw	1	; select bank2/3
  6345     04D0  0087               	movwf	7
  6346     04D1  3F40               	moviw [0]fsr1
  6347     04D2  00AF               	movwf	??_ColorSensor
  6348     04D3  3F41               	moviw [1]fsr1
  6349     04D4  00B0               	movwf	??_ColorSensor+1
  6350     04D5  082D               	movf	ColorSensor@colors,w
  6351     04D6  3E02               	addlw	2
  6352     04D7  0086               	movwf	6
  6353     04D8  3001               	movlw	1	; select bank2/3
  6354     04D9  0087               	movwf	7
  6355     04DA  3F40               	moviw [0]fsr1
  6356     04DB  00B1               	movwf	??_ColorSensor+2
  6357     04DC  3F41               	moviw [1]fsr1
  6358     04DD  00B2               	movwf	??_ColorSensor+3
  6359     04DE  0832               	movf	??_ColorSensor+3,w
  6360     04DF  3A80               	xorlw	128
  6361     04E0  00B3               	movwf	??_ColorSensor+4
  6362     04E1  0830               	movf	??_ColorSensor+1,w
  6363     04E2  3A80               	xorlw	128
  6364     04E3  0233               	subwf	??_ColorSensor+4,w
  6365     04E4  1D03               	skipz
  6366     04E5  2CE8               	goto	u2135
  6367     04E6  082F               	movf	??_ColorSensor,w
  6368     04E7  0231               	subwf	??_ColorSensor+2,w
  6369     04E8                     u2135:
  6370     04E8  1803               	skipnc
  6371     04E9  2CEB               	goto	u2131
  6372     04EA  2CEC               	goto	u2130
  6373     04EB                     u2131:
  6374     04EB  2CF6               	goto	l2863
  6375     04EC                     u2130:
  6376     04EC                     l2859:
  6377                           
  6378                           ;./Color_Header.h: 512:                     LATAbits.LATA0 = 1;
  6379     04EC  0020               	movlb	0	; select bank0
  6380     04ED  1416               	bsf	22,0	;volatile
  6381                           
  6382                           ;./Color_Header.h: 513:                     LATAbits.LATA1 = 0;
  6383     04EE  1096               	bcf	22,1	;volatile
  6384                           
  6385                           ;./Color_Header.h: 514:                     LATAbits.LATA2 = 0;
  6386     04EF  1116               	bcf	22,2	;volatile
  6387     04F0                     l2861:
  6388                           
  6389                           ;./Color_Header.h: 515:                     *color = RED;
  6390     04F0  082E               	movf	ColorSensor@color,w
  6391     04F1  0086               	movwf	6
  6392     04F2  0187               	clrf	7
  6393     04F3  0181               	clrf	1
  6394     04F4  0A81               	incf	1,f
  6395                           
  6396                           ;./Color_Header.h: 516:                 }
  6397     04F5  2D8E               	goto	l2879
  6398     04F6                     l2863:
  6399     04F6  0020               	movlb	0	; select bank0
  6400     04F7  082D               	movf	ColorSensor@colors,w
  6401     04F8  3E04               	addlw	4
  6402     04F9  0086               	movwf	6
  6403     04FA  3001               	movlw	1	; select bank2/3
  6404     04FB  0087               	movwf	7
  6405     04FC  3F40               	moviw [0]fsr1
  6406     04FD  00AF               	movwf	??_ColorSensor
  6407     04FE  3F41               	moviw [1]fsr1
  6408     04FF  00B0               	movwf	??_ColorSensor+1
  6409     0500  082D               	movf	ColorSensor@colors,w
  6410     0501  3E06               	addlw	6
  6411     0502  0086               	movwf	6
  6412     0503  3001               	movlw	1	; select bank2/3
  6413     0504  0087               	movwf	7
  6414     0505  3F40               	moviw [0]fsr1
  6415     0506  00B1               	movwf	??_ColorSensor+2
  6416     0507  3F41               	moviw [1]fsr1
  6417     0508  00B2               	movwf	??_ColorSensor+3
  6418     0509  0832               	movf	??_ColorSensor+3,w
  6419     050A  3A80               	xorlw	128
  6420     050B  00B3               	movwf	??_ColorSensor+4
  6421     050C  0830               	movf	??_ColorSensor+1,w
  6422     050D  3A80               	xorlw	128
  6423     050E  0233               	subwf	??_ColorSensor+4,w
  6424     050F  1D03               	skipz
  6425     0510  2D13               	goto	u2145
  6426     0511  082F               	movf	??_ColorSensor,w
  6427     0512  0231               	subwf	??_ColorSensor+2,w
  6428     0513                     u2145:
  6429     0513  1803               	skipnc
  6430     0514  2D16               	goto	u2141
  6431     0515  2D17               	goto	u2140
  6432     0516                     u2141:
  6433     0516  2D42               	goto	l2871
  6434     0517                     u2140:
  6435     0517                     l2865:
  6436     0517  0020               	movlb	0	; select bank0
  6437     0518  082D               	movf	ColorSensor@colors,w
  6438     0519  3E04               	addlw	4
  6439     051A  0086               	movwf	6
  6440     051B  3001               	movlw	1	; select bank2/3
  6441     051C  0087               	movwf	7
  6442     051D  3F40               	moviw [0]fsr1
  6443     051E  00AF               	movwf	??_ColorSensor
  6444     051F  3F41               	moviw [1]fsr1
  6445     0520  00B0               	movwf	??_ColorSensor+1
  6446     0521  082D               	movf	ColorSensor@colors,w
  6447     0522  3E02               	addlw	2
  6448     0523  0086               	movwf	6
  6449     0524  3001               	movlw	1	; select bank2/3
  6450     0525  0087               	movwf	7
  6451     0526  3F40               	moviw [0]fsr1
  6452     0527  00B1               	movwf	??_ColorSensor+2
  6453     0528  3F41               	moviw [1]fsr1
  6454     0529  00B2               	movwf	??_ColorSensor+3
  6455     052A  0832               	movf	??_ColorSensor+3,w
  6456     052B  3A80               	xorlw	128
  6457     052C  00B3               	movwf	??_ColorSensor+4
  6458     052D  0830               	movf	??_ColorSensor+1,w
  6459     052E  3A80               	xorlw	128
  6460     052F  0233               	subwf	??_ColorSensor+4,w
  6461     0530  1D03               	skipz
  6462     0531  2D34               	goto	u2155
  6463     0532  082F               	movf	??_ColorSensor,w
  6464     0533  0231               	subwf	??_ColorSensor+2,w
  6465     0534                     u2155:
  6466     0534  1803               	skipnc
  6467     0535  2D37               	goto	u2151
  6468     0536  2D38               	goto	u2150
  6469     0537                     u2151:
  6470     0537  2D42               	goto	l2871
  6471     0538                     u2150:
  6472     0538                     l2867:
  6473                           
  6474                           ;./Color_Header.h: 518:                     LATAbits.LATA0 = 0;
  6475     0538  0020               	movlb	0	; select bank0
  6476     0539  1016               	bcf	22,0	;volatile
  6477                           
  6478                           ;./Color_Header.h: 519:                     LATAbits.LATA1 = 1;
  6479     053A  1496               	bsf	22,1	;volatile
  6480                           
  6481                           ;./Color_Header.h: 520:                     LATAbits.LATA2 = 0;
  6482     053B  1116               	bcf	22,2	;volatile
  6483     053C                     l2869:
  6484                           
  6485                           ;./Color_Header.h: 521:                     *color = BLUE;
  6486     053C  082E               	movf	ColorSensor@color,w
  6487     053D  0086               	movwf	6
  6488     053E  0187               	clrf	7
  6489     053F  3002               	movlw	2
  6490     0540  0081               	movwf	1
  6491                           
  6492                           ;./Color_Header.h: 522:                 }
  6493     0541  2D8E               	goto	l2879
  6494     0542                     l2871:
  6495     0542  0020               	movlb	0	; select bank0
  6496     0543  082D               	movf	ColorSensor@colors,w
  6497     0544  3E02               	addlw	2
  6498     0545  0086               	movwf	6
  6499     0546  3001               	movlw	1	; select bank2/3
  6500     0547  0087               	movwf	7
  6501     0548  3F40               	moviw [0]fsr1
  6502     0549  00AF               	movwf	??_ColorSensor
  6503     054A  3F41               	moviw [1]fsr1
  6504     054B  00B0               	movwf	??_ColorSensor+1
  6505     054C  082D               	movf	ColorSensor@colors,w
  6506     054D  3E04               	addlw	4
  6507     054E  0086               	movwf	6
  6508     054F  3001               	movlw	1	; select bank2/3
  6509     0550  0087               	movwf	7
  6510     0551  3F40               	moviw [0]fsr1
  6511     0552  00B1               	movwf	??_ColorSensor+2
  6512     0553  3F41               	moviw [1]fsr1
  6513     0554  00B2               	movwf	??_ColorSensor+3
  6514     0555  0832               	movf	??_ColorSensor+3,w
  6515     0556  3A80               	xorlw	128
  6516     0557  00B3               	movwf	??_ColorSensor+4
  6517     0558  0830               	movf	??_ColorSensor+1,w
  6518     0559  3A80               	xorlw	128
  6519     055A  0233               	subwf	??_ColorSensor+4,w
  6520     055B  1D03               	skipz
  6521     055C  2D5F               	goto	u2165
  6522     055D  082F               	movf	??_ColorSensor,w
  6523     055E  0231               	subwf	??_ColorSensor+2,w
  6524     055F                     u2165:
  6525     055F  1803               	skipnc
  6526     0560  2D62               	goto	u2161
  6527     0561  2D63               	goto	u2160
  6528     0562                     u2161:
  6529     0562  2D8E               	goto	l306
  6530     0563                     u2160:
  6531     0563                     l2873:
  6532     0563  0020               	movlb	0	; select bank0
  6533     0564  082D               	movf	ColorSensor@colors,w
  6534     0565  3E02               	addlw	2
  6535     0566  0086               	movwf	6
  6536     0567  3001               	movlw	1	; select bank2/3
  6537     0568  0087               	movwf	7
  6538     0569  3F40               	moviw [0]fsr1
  6539     056A  00AF               	movwf	??_ColorSensor
  6540     056B  3F41               	moviw [1]fsr1
  6541     056C  00B0               	movwf	??_ColorSensor+1
  6542     056D  082D               	movf	ColorSensor@colors,w
  6543     056E  3E06               	addlw	6
  6544     056F  0086               	movwf	6
  6545     0570  3001               	movlw	1	; select bank2/3
  6546     0571  0087               	movwf	7
  6547     0572  3F40               	moviw [0]fsr1
  6548     0573  00B1               	movwf	??_ColorSensor+2
  6549     0574  3F41               	moviw [1]fsr1
  6550     0575  00B2               	movwf	??_ColorSensor+3
  6551     0576  0832               	movf	??_ColorSensor+3,w
  6552     0577  3A80               	xorlw	128
  6553     0578  00B3               	movwf	??_ColorSensor+4
  6554     0579  0830               	movf	??_ColorSensor+1,w
  6555     057A  3A80               	xorlw	128
  6556     057B  0233               	subwf	??_ColorSensor+4,w
  6557     057C  1D03               	skipz
  6558     057D  2D80               	goto	u2175
  6559     057E  082F               	movf	??_ColorSensor,w
  6560     057F  0231               	subwf	??_ColorSensor+2,w
  6561     0580                     u2175:
  6562     0580  1803               	skipnc
  6563     0581  2D83               	goto	u2171
  6564     0582  2D84               	goto	u2170
  6565     0583                     u2171:
  6566     0583  2D8E               	goto	l306
  6567     0584                     u2170:
  6568     0584                     l2875:
  6569                           
  6570                           ;./Color_Header.h: 524:                     LATAbits.LATA0 = 0;
  6571     0584  0020               	movlb	0	; select bank0
  6572     0585  1016               	bcf	22,0	;volatile
  6573                           
  6574                           ;./Color_Header.h: 525:                     LATAbits.LATA1 = 0;
  6575     0586  1096               	bcf	22,1	;volatile
  6576                           
  6577                           ;./Color_Header.h: 526:                     LATAbits.LATA2 = 1;
  6578     0587  1516               	bsf	22,2	;volatile
  6579     0588                     l2877:
  6580                           
  6581                           ;./Color_Header.h: 527:                     *color = GREEN;
  6582     0588  082E               	movf	ColorSensor@color,w
  6583     0589  0086               	movwf	6
  6584     058A  0187               	clrf	7
  6585     058B  3003               	movlw	3
  6586     058C  0081               	movwf	1
  6587     058D  2D8E               	goto	l2879
  6588     058E                     l306:	
  6589                           ;./Color_Header.h: 529:             }
  6590                           
  6591     058E                     l2879:
  6592                           
  6593                           ;./Color_Header.h: 531:     PlayTune(*color);
  6594     058E  0020               	movlb	0	; select bank0
  6595     058F  082E               	movf	ColorSensor@color,w
  6596     0590  0086               	movwf	6
  6597     0591  0187               	clrf	7
  6598     0592  0801               	movf	1,w
  6599     0593  318D  2537  3184   	fcall	_PlayTune
  6600     0596                     l312:
  6601     0596  0008               	return
  6602     0597                     __end_of_ColorSensor:
  6603                           
  6604                           	psect	text29
  6605     0D8F                     __ptext29:	
  6606 ;; *************** function _UpdateColors *****************
  6607 ;; Defined at:
  6608 ;;		line 436 in file "./Color_Header.h"
  6609 ;; Parameters:    Size  Location     Type
  6610 ;;  colors          1    wreg     PTR struct colorScheme
  6611 ;;		 -> colors(12), 
  6612 ;;  stageValue      2    7[BANK0 ] int 
  6613 ;; Auto vars:     Size  Location     Type
  6614 ;;  colors          1   11[BANK0 ] PTR struct colorScheme
  6615 ;;		 -> colors(12), 
  6616 ;; Return value:  Size  Location     Type
  6617 ;;                  1    wreg      unsigned char 
  6618 ;; Registers used:
  6619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6620 ;; Tracked objects:
  6621 ;;		On entry : 0/0
  6622 ;;		On exit  : 0/0
  6623 ;;		Unchanged: 0/0
  6624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6625 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6626 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6627 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6628 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6629 ;;Total ram usage:        5 bytes
  6630 ;; Hardware stack levels used: 1
  6631 ;; Hardware stack levels required when called: 5
  6632 ;; This function calls:
  6633 ;;		_GetValueAndEndI2C
  6634 ;;		_ReadAddressI2C
  6635 ;;		_ReadI2C
  6636 ;;		_RepeatI2C
  6637 ;;		_SelectColourRegister
  6638 ;;		_StartI2C
  6639 ;;		_WriteI2C
  6640 ;;		___awmod
  6641 ;; This function is called by:
  6642 ;;		_ColorSensor
  6643 ;; This function uses a non-reentrant model
  6644 ;;
  6645                           
  6646     0D8F                     _UpdateColors:	
  6647                           ;psect for function _UpdateColors
  6648                           
  6649                           
  6650                           ;incstack = 0
  6651                           ; Regs used in _UpdateColors: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6652                           ;UpdateColors@colors stored from wreg
  6653     0D8F  0020               	movlb	0	; select bank0
  6654     0D90  00AB               	movwf	UpdateColors@colors
  6655     0D91                     l2459:
  6656                           
  6657                           ;./Color_Header.h: 437:     switch(stageValue){
  6658     0D91  2DBB               	goto	l2477
  6659     0D92                     l2461:
  6660     0D92  318A  2232  318D   	fcall	_StartI2C
  6661     0D95  2DD7               	goto	l2479
  6662     0D96                     l2463:
  6663     0D96  318A  223D  318D   	fcall	_WriteI2C
  6664     0D99  2DD7               	goto	l2479
  6665     0D9A                     l2465:
  6666     0D9A  082B               	movf	UpdateColors@colors,w
  6667     0D9B  3E0A               	addlw	10
  6668     0D9C  0086               	movwf	6
  6669     0D9D  3001               	movlw	1	; select bank2/3
  6670     0D9E  0087               	movwf	7
  6671     0D9F  0801               	movf	1,w
  6672     0DA0  00A9               	movwf	??_UpdateColors
  6673     0DA1  01AA               	clrf	??_UpdateColors+1
  6674     0DA2  0829               	movf	??_UpdateColors,w
  6675     0DA3  00A0               	movwf	SelectColourRegister@colorStage
  6676     0DA4  082A               	movf	??_UpdateColors+1,w
  6677     0DA5  00A1               	movwf	SelectColourRegister@colorStage+1
  6678     0DA6  318C  249F  318D   	fcall	_SelectColourRegister
  6679     0DA9  2DD7               	goto	l2479
  6680     0DAA                     l2467:
  6681     0DAA  318A  222B  318D   	fcall	_RepeatI2C
  6682     0DAD  2DD7               	goto	l2479
  6683     0DAE                     l2469:
  6684     0DAE  318A  2237  318D   	fcall	_ReadAddressI2C
  6685     0DB1  2DD7               	goto	l2479
  6686     0DB2                     l2471:
  6687     0DB2  318A  2228  318D   	fcall	_ReadI2C
  6688     0DB5  2DD7               	goto	l2479
  6689     0DB6                     l2473:
  6690     0DB6  082B               	movf	UpdateColors@colors,w
  6691     0DB7  318F  2751  318D   	fcall	_GetValueAndEndI2C
  6692     0DBA  2DD7               	goto	l2479
  6693     0DBB                     l2477:
  6694                           
  6695                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6696                           ; Switch size 1, requested type "simple"
  6697                           ; Number of cases is 1, Range of values is 0 to 0
  6698                           ; switch strategies available:
  6699                           ; Name         Instructions Cycles
  6700                           ; simple_byte            4     3 (average)
  6701                           ; direct_byte            8     6 (fixed)
  6702                           ; jumptable            260     6 (fixed)
  6703                           ;	Chosen strategy is simple_byte
  6704     0DBB  0828               	movf	UpdateColors@stageValue+1,w
  6705     0DBC  3A00               	xorlw	0	; case 0
  6706     0DBD  1903               	skipnz
  6707     0DBE  2DC0               	goto	l3531
  6708     0DBF  2DD7               	goto	l2479
  6709     0DC0                     l3531:
  6710                           
  6711                           ; Switch size 1, requested type "simple"
  6712                           ; Number of cases is 7, Range of values is 0 to 6
  6713                           ; switch strategies available:
  6714                           ; Name         Instructions Cycles
  6715                           ; direct_byte           20     6 (fixed)
  6716                           ; simple_byte           22    12 (average)
  6717                           ; jumptable            260     6 (fixed)
  6718                           ;	Chosen strategy is simple_byte
  6719     0DC0  0827               	movf	UpdateColors@stageValue,w
  6720     0DC1  3A00               	xorlw	0	; case 0
  6721     0DC2  1903               	skipnz
  6722     0DC3  2D92               	goto	l2461
  6723     0DC4  3A01               	xorlw	1	; case 1
  6724     0DC5  1903               	skipnz
  6725     0DC6  2D96               	goto	l2463
  6726     0DC7  3A03               	xorlw	3	; case 2
  6727     0DC8  1903               	skipnz
  6728     0DC9  2D9A               	goto	l2465
  6729     0DCA  3A01               	xorlw	1	; case 3
  6730     0DCB  1903               	skipnz
  6731     0DCC  2DAA               	goto	l2467
  6732     0DCD  3A07               	xorlw	7	; case 4
  6733     0DCE  1903               	skipnz
  6734     0DCF  2DAE               	goto	l2469
  6735     0DD0  3A01               	xorlw	1	; case 5
  6736     0DD1  1903               	skipnz
  6737     0DD2  2DB2               	goto	l2471
  6738     0DD3  3A03               	xorlw	3	; case 6
  6739     0DD4  1903               	skipnz
  6740     0DD5  2DB6               	goto	l2473
  6741     0DD6  2DD7               	goto	l2479
  6742     0DD7                     l2479:
  6743                           
  6744                           ;./Color_Header.h: 446:     return (stageValue+1) % 7;
  6745     0DD7  3007               	movlw	7
  6746     0DD8  0020               	movlb	0	; select bank0
  6747     0DD9  00A0               	movwf	___awmod@divisor
  6748     0DDA  3000               	movlw	0
  6749     0DDB  00A1               	movwf	___awmod@divisor+1
  6750     0DDC  0827               	movf	UpdateColors@stageValue,w
  6751     0DDD  3E01               	addlw	1
  6752     0DDE  00A2               	movwf	___awmod@dividend
  6753     0DDF  3000               	movlw	0
  6754     0DE0  3D28               	addwfc	UpdateColors@stageValue+1,w
  6755     0DE1  00A3               	movwf	___awmod@dividend+1
  6756     0DE2  318C  24E3  318D   	fcall	___awmod
  6757     0DE5  0020               	movlb	0	; select bank0
  6758     0DE6  0820               	movf	?___awmod,w
  6759     0DE7                     l291:
  6760     0DE7  0008               	return
  6761     0DE8                     __end_of_UpdateColors:
  6762                           
  6763                           	psect	text30
  6764     0CE3                     __ptext30:	
  6765 ;; *************** function ___awmod *****************
  6766 ;; Defined at:
  6767 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;  divisor         2    0[BANK0 ] int 
  6770 ;;  dividend        2    2[BANK0 ] int 
  6771 ;; Auto vars:     Size  Location     Type
  6772 ;;  sign            1    6[BANK0 ] unsigned char 
  6773 ;;  counter         1    5[BANK0 ] unsigned char 
  6774 ;; Return value:  Size  Location     Type
  6775 ;;                  2    0[BANK0 ] int 
  6776 ;; Registers used:
  6777 ;;		wreg, status,2, status,0
  6778 ;; Tracked objects:
  6779 ;;		On entry : 0/0
  6780 ;;		On exit  : 0/0
  6781 ;;		Unchanged: 0/0
  6782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6783 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6784 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6785 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6786 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6787 ;;Total ram usage:        7 bytes
  6788 ;; Hardware stack levels used: 1
  6789 ;; Hardware stack levels required when called: 2
  6790 ;; This function calls:
  6791 ;;		Nothing
  6792 ;; This function is called by:
  6793 ;;		_UpdateColors
  6794 ;; This function uses a non-reentrant model
  6795 ;;
  6796                           
  6797     0CE3                     ___awmod:	
  6798                           ;psect for function ___awmod
  6799                           
  6800     0CE3                     l2369:	
  6801                           ;incstack = 0
  6802                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  6803                           
  6804     0CE3  0020               	movlb	0	; select bank0
  6805     0CE4  01A6               	clrf	___awmod@sign
  6806     0CE5                     l2371:
  6807     0CE5  1FA3               	btfss	___awmod@dividend+1,7
  6808     0CE6  2CE8               	goto	u1371
  6809     0CE7  2CE9               	goto	u1370
  6810     0CE8                     u1371:
  6811     0CE8  2CF0               	goto	l2377
  6812     0CE9                     u1370:
  6813     0CE9                     l2373:
  6814     0CE9  09A2               	comf	___awmod@dividend,f
  6815     0CEA  09A3               	comf	___awmod@dividend+1,f
  6816     0CEB  0AA2               	incf	___awmod@dividend,f
  6817     0CEC  1903               	skipnz
  6818     0CED  0AA3               	incf	___awmod@dividend+1,f
  6819     0CEE                     l2375:
  6820     0CEE  01A6               	clrf	___awmod@sign
  6821     0CEF  0AA6               	incf	___awmod@sign,f
  6822     0CF0                     l2377:
  6823     0CF0  1FA1               	btfss	___awmod@divisor+1,7
  6824     0CF1  2CF3               	goto	u1381
  6825     0CF2  2CF4               	goto	u1380
  6826     0CF3                     u1381:
  6827     0CF3  2CF9               	goto	l2381
  6828     0CF4                     u1380:
  6829     0CF4                     l2379:
  6830     0CF4  09A0               	comf	___awmod@divisor,f
  6831     0CF5  09A1               	comf	___awmod@divisor+1,f
  6832     0CF6  0AA0               	incf	___awmod@divisor,f
  6833     0CF7  1903               	skipnz
  6834     0CF8  0AA1               	incf	___awmod@divisor+1,f
  6835     0CF9                     l2381:
  6836     0CF9  0820               	movf	___awmod@divisor,w
  6837     0CFA  0421               	iorwf	___awmod@divisor+1,w
  6838     0CFB  1903               	btfsc	3,2
  6839     0CFC  2CFE               	goto	u1391
  6840     0CFD  2CFF               	goto	u1390
  6841     0CFE                     u1391:
  6842     0CFE  2D28               	goto	l2399
  6843     0CFF                     u1390:
  6844     0CFF                     l2383:
  6845     0CFF  01A5               	clrf	___awmod@counter
  6846     0D00  0AA5               	incf	___awmod@counter,f
  6847     0D01  2D0B               	goto	l2389
  6848     0D02                     l2385:
  6849     0D02  3001               	movlw	1
  6850     0D03                     u1405:
  6851     0D03  35A0               	lslf	___awmod@divisor,f
  6852     0D04  0DA1               	rlf	___awmod@divisor+1,f
  6853     0D05  0B89               	decfsz	9,f
  6854     0D06  2D03               	goto	u1405
  6855     0D07                     l2387:
  6856     0D07  3001               	movlw	1
  6857     0D08  00A4               	movwf	??___awmod
  6858     0D09  0824               	movf	??___awmod,w
  6859     0D0A  07A5               	addwf	___awmod@counter,f
  6860     0D0B                     l2389:
  6861     0D0B  1FA1               	btfss	___awmod@divisor+1,7
  6862     0D0C  2D0E               	goto	u1411
  6863     0D0D  2D0F               	goto	u1410
  6864     0D0E                     u1411:
  6865     0D0E  2D02               	goto	l2385
  6866     0D0F                     u1410:
  6867     0D0F                     l2391:
  6868     0D0F  0821               	movf	___awmod@divisor+1,w
  6869     0D10  0223               	subwf	___awmod@dividend+1,w
  6870     0D11  1D03               	skipz
  6871     0D12  2D15               	goto	u1425
  6872     0D13  0820               	movf	___awmod@divisor,w
  6873     0D14  0222               	subwf	___awmod@dividend,w
  6874     0D15                     u1425:
  6875     0D15  1C03               	skipc
  6876     0D16  2D18               	goto	u1421
  6877     0D17  2D19               	goto	u1420
  6878     0D18                     u1421:
  6879     0D18  2D1D               	goto	l2395
  6880     0D19                     u1420:
  6881     0D19                     l2393:
  6882     0D19  0820               	movf	___awmod@divisor,w
  6883     0D1A  02A2               	subwf	___awmod@dividend,f
  6884     0D1B  0821               	movf	___awmod@divisor+1,w
  6885     0D1C  3BA3               	subwfb	___awmod@dividend+1,f
  6886     0D1D                     l2395:
  6887     0D1D  3001               	movlw	1
  6888     0D1E                     u1435:
  6889     0D1E  36A1               	lsrf	___awmod@divisor+1,f
  6890     0D1F  0CA0               	rrf	___awmod@divisor,f
  6891     0D20  0B89               	decfsz	9,f
  6892     0D21  2D1E               	goto	u1435
  6893     0D22                     l2397:
  6894     0D22  3001               	movlw	1
  6895     0D23  02A5               	subwf	___awmod@counter,f
  6896     0D24  1D03               	btfss	3,2
  6897     0D25  2D27               	goto	u1441
  6898     0D26  2D28               	goto	u1440
  6899     0D27                     u1441:
  6900     0D27  2D0F               	goto	l2391
  6901     0D28                     u1440:
  6902     0D28                     l2399:
  6903     0D28  0826               	movf	___awmod@sign,w
  6904     0D29  1903               	btfsc	3,2
  6905     0D2A  2D2C               	goto	u1451
  6906     0D2B  2D2D               	goto	u1450
  6907     0D2C                     u1451:
  6908     0D2C  2D32               	goto	l2403
  6909     0D2D                     u1450:
  6910     0D2D                     l2401:
  6911     0D2D  09A2               	comf	___awmod@dividend,f
  6912     0D2E  09A3               	comf	___awmod@dividend+1,f
  6913     0D2F  0AA2               	incf	___awmod@dividend,f
  6914     0D30  1903               	skipnz
  6915     0D31  0AA3               	incf	___awmod@dividend+1,f
  6916     0D32                     l2403:
  6917     0D32  0823               	movf	___awmod@dividend+1,w
  6918     0D33  00A1               	movwf	?___awmod+1
  6919     0D34  0822               	movf	___awmod@dividend,w
  6920     0D35  00A0               	movwf	?___awmod
  6921     0D36                     l807:
  6922     0D36  0008               	return
  6923     0D37                     __end_of___awmod:
  6924                           
  6925                           	psect	text31
  6926     0A3D                     __ptext31:	
  6927 ;; *************** function _WriteI2C *****************
  6928 ;; Defined at:
  6929 ;;		line 383 in file "./Color_Header.h"
  6930 ;; Parameters:    Size  Location     Type
  6931 ;;		None
  6932 ;; Auto vars:     Size  Location     Type
  6933 ;;		None
  6934 ;; Return value:  Size  Location     Type
  6935 ;;                  1    wreg      void 
  6936 ;; Registers used:
  6937 ;;		wreg
  6938 ;; Tracked objects:
  6939 ;;		On entry : 0/0
  6940 ;;		On exit  : 0/0
  6941 ;;		Unchanged: 0/0
  6942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6947 ;;Total ram usage:        0 bytes
  6948 ;; Hardware stack levels used: 1
  6949 ;; Hardware stack levels required when called: 2
  6950 ;; This function calls:
  6951 ;;		Nothing
  6952 ;; This function is called by:
  6953 ;;		_UpdateColors
  6954 ;; This function uses a non-reentrant model
  6955 ;;
  6956                           
  6957     0A3D                     _WriteI2C:	
  6958                           ;psect for function _WriteI2C
  6959                           
  6960     0A3D                     l2315:	
  6961                           ;incstack = 0
  6962                           ; Regs used in _WriteI2C: [wreg]
  6963                           
  6964                           
  6965                           ;./Color_Header.h: 384:     PIR3bits.SSP1IF = 0;
  6966     0A3D  002E               	movlb	14	; select bank14
  6967     0A3E  100F               	bcf	15,0	;volatile
  6968     0A3F                     l2317:
  6969                           
  6970                           ;./Color_Header.h: 385:     SSP1BUFbits.SSPBUF = 0x39 << 1;;
  6971     0A3F  3072               	movlw	114
  6972     0A40  0023               	movlb	3	; select bank3
  6973     0A41  008C               	movwf	12	;volatile
  6974     0A42                     l243:
  6975     0A42  0008               	return
  6976     0A43                     __end_of_WriteI2C:
  6977                           
  6978                           	psect	text32
  6979     0A32                     __ptext32:	
  6980 ;; *************** function _StartI2C *****************
  6981 ;; Defined at:
  6982 ;;		line 376 in file "./Color_Header.h"
  6983 ;; Parameters:    Size  Location     Type
  6984 ;;		None
  6985 ;; Auto vars:     Size  Location     Type
  6986 ;;		None
  6987 ;; Return value:  Size  Location     Type
  6988 ;;                  1    wreg      void 
  6989 ;; Registers used:
  6990 ;;		None
  6991 ;; Tracked objects:
  6992 ;;		On entry : 0/0
  6993 ;;		On exit  : 0/0
  6994 ;;		Unchanged: 0/0
  6995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7000 ;;Total ram usage:        0 bytes
  7001 ;; Hardware stack levels used: 1
  7002 ;; Hardware stack levels required when called: 2
  7003 ;; This function calls:
  7004 ;;		Nothing
  7005 ;; This function is called by:
  7006 ;;		_UpdateColors
  7007 ;; This function uses a non-reentrant model
  7008 ;;
  7009                           
  7010     0A32                     _StartI2C:	
  7011                           ;psect for function _StartI2C
  7012                           
  7013     0A32                     l2313:	
  7014                           ;incstack = 0
  7015                           ; Regs used in _StartI2C: []
  7016                           
  7017                           
  7018                           ;./Color_Header.h: 377:     PIR3bits.SSP1IF = 0;
  7019     0A32  002E               	movlb	14	; select bank14
  7020     0A33  100F               	bcf	15,0	;volatile
  7021                           
  7022                           ;./Color_Header.h: 378:     SSP1CON2bits.SEN = 1;
  7023     0A34  0023               	movlb	3	; select bank3
  7024     0A35  1411               	bsf	17,0	;volatile
  7025     0A36                     l237:
  7026     0A36  0008               	return
  7027     0A37                     __end_of_StartI2C:
  7028                           
  7029                           	psect	text33
  7030     0C9F                     __ptext33:	
  7031 ;; *************** function _SelectColourRegister *****************
  7032 ;; Defined at:
  7033 ;;		line 355 in file "./Color_Header.h"
  7034 ;; Parameters:    Size  Location     Type
  7035 ;;  colorStage      2    0[BANK0 ] int 
  7036 ;; Auto vars:     Size  Location     Type
  7037 ;;  writeValue      1    2[BANK0 ] unsigned char 
  7038 ;; Return value:  Size  Location     Type
  7039 ;;                  1    wreg      void 
  7040 ;; Registers used:
  7041 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7042 ;; Tracked objects:
  7043 ;;		On entry : 0/0
  7044 ;;		On exit  : 0/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7047 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7048 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7050 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7051 ;;Total ram usage:        3 bytes
  7052 ;; Hardware stack levels used: 1
  7053 ;; Hardware stack levels required when called: 2
  7054 ;; This function calls:
  7055 ;;		Nothing
  7056 ;; This function is called by:
  7057 ;;		_UpdateColors
  7058 ;; This function uses a non-reentrant model
  7059 ;;
  7060                           
  7061     0C9F                     _SelectColourRegister:	
  7062                           ;psect for function _SelectColourRegister
  7063                           
  7064     0C9F                     l2283:	
  7065                           ;incstack = 0
  7066                           ; Regs used in _SelectColourRegister: [wreg-fsr0h+status,2+status,0]
  7067                           
  7068                           
  7069                           ;./Color_Header.h: 356:     unsigned char writeValue = 0;
  7070     0C9F  0020               	movlb	0	; select bank0
  7071     0CA0  01A2               	clrf	SelectColourRegister@writeValue
  7072                           
  7073                           ;./Color_Header.h: 357:     switch(colorStage){
  7074     0CA1  2CBD               	goto	l2305
  7075     0CA2                     l2285:
  7076     0CA2  3093               	movlw	147
  7077     0CA3  00A2               	movwf	SelectColourRegister@writeValue
  7078     0CA4  2CDF               	goto	l2307
  7079     0CA5                     l2287:
  7080     0CA5  3094               	movlw	148
  7081     0CA6  00A2               	movwf	SelectColourRegister@writeValue
  7082     0CA7  2CDF               	goto	l2307
  7083     0CA8                     l2289:
  7084     0CA8  3095               	movlw	149
  7085     0CA9  00A2               	movwf	SelectColourRegister@writeValue
  7086     0CAA  2CDF               	goto	l2307
  7087     0CAB                     l2291:
  7088     0CAB  3096               	movlw	150
  7089     0CAC  00A2               	movwf	SelectColourRegister@writeValue
  7090     0CAD  2CDF               	goto	l2307
  7091     0CAE                     l2293:
  7092     0CAE  3097               	movlw	151
  7093     0CAF  00A2               	movwf	SelectColourRegister@writeValue
  7094     0CB0  2CDF               	goto	l2307
  7095     0CB1                     l2295:
  7096     0CB1  309A               	movlw	154
  7097     0CB2  00A2               	movwf	SelectColourRegister@writeValue
  7098     0CB3  2CDF               	goto	l2307
  7099     0CB4                     l2297:
  7100     0CB4  309B               	movlw	155
  7101     0CB5  00A2               	movwf	SelectColourRegister@writeValue
  7102     0CB6  2CDF               	goto	l2307
  7103     0CB7                     l2299:
  7104     0CB7  3098               	movlw	152
  7105     0CB8  00A2               	movwf	SelectColourRegister@writeValue
  7106     0CB9  2CDF               	goto	l2307
  7107     0CBA                     l2301:
  7108     0CBA  3099               	movlw	153
  7109     0CBB  00A2               	movwf	SelectColourRegister@writeValue
  7110     0CBC  2CDF               	goto	l2307
  7111     0CBD                     l2305:
  7112                           
  7113                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7114                           ; Switch size 1, requested type "simple"
  7115                           ; Number of cases is 1, Range of values is 0 to 0
  7116                           ; switch strategies available:
  7117                           ; Name         Instructions Cycles
  7118                           ; simple_byte            4     3 (average)
  7119                           ; direct_byte            8     6 (fixed)
  7120                           ; jumptable            260     6 (fixed)
  7121                           ;	Chosen strategy is simple_byte
  7122     0CBD  0821               	movf	SelectColourRegister@colorStage+1,w
  7123     0CBE  3A00               	xorlw	0	; case 0
  7124     0CBF  1903               	skipnz
  7125     0CC0  2CC2               	goto	l3533
  7126     0CC1  2CDF               	goto	l2307
  7127     0CC2                     l3533:
  7128                           
  7129                           ; Switch size 1, requested type "simple"
  7130                           ; Number of cases is 9, Range of values is 0 to 8
  7131                           ; switch strategies available:
  7132                           ; Name         Instructions Cycles
  7133                           ; direct_byte           24     6 (fixed)
  7134                           ; simple_byte           28    15 (average)
  7135                           ; jumptable            260     6 (fixed)
  7136                           ;	Chosen strategy is simple_byte
  7137     0CC2  0820               	movf	SelectColourRegister@colorStage,w
  7138     0CC3  3A00               	xorlw	0	; case 0
  7139     0CC4  1903               	skipnz
  7140     0CC5  2CA2               	goto	l2285
  7141     0CC6  3A01               	xorlw	1	; case 1
  7142     0CC7  1903               	skipnz
  7143     0CC8  2CA5               	goto	l2287
  7144     0CC9  3A03               	xorlw	3	; case 2
  7145     0CCA  1903               	skipnz
  7146     0CCB  2CA8               	goto	l2289
  7147     0CCC  3A01               	xorlw	1	; case 3
  7148     0CCD  1903               	skipnz
  7149     0CCE  2CAB               	goto	l2291
  7150     0CCF  3A07               	xorlw	7	; case 4
  7151     0CD0  1903               	skipnz
  7152     0CD1  2CAE               	goto	l2293
  7153     0CD2  3A01               	xorlw	1	; case 5
  7154     0CD3  1903               	skipnz
  7155     0CD4  2CB1               	goto	l2295
  7156     0CD5  3A03               	xorlw	3	; case 6
  7157     0CD6  1903               	skipnz
  7158     0CD7  2CB4               	goto	l2297
  7159     0CD8  3A01               	xorlw	1	; case 7
  7160     0CD9  1903               	skipnz
  7161     0CDA  2CB7               	goto	l2299
  7162     0CDB  3A0F               	xorlw	15	; case 8
  7163     0CDC  1903               	skipnz
  7164     0CDD  2CBA               	goto	l2301
  7165     0CDE  2CDF               	goto	l2307
  7166     0CDF                     l2307:
  7167                           
  7168                           ;./Color_Header.h: 368:     SSP1BUFbits.SSPBUF = writeValue;
  7169     0CDF  0822               	movf	SelectColourRegister@writeValue,w
  7170     0CE0  0023               	movlb	3	; select bank3
  7171     0CE1  008C               	movwf	12	;volatile
  7172     0CE2                     l231:
  7173     0CE2  0008               	return
  7174     0CE3                     __end_of_SelectColourRegister:
  7175                           
  7176                           	psect	text34
  7177     0A2B                     __ptext34:	
  7178 ;; *************** function _RepeatI2C *****************
  7179 ;; Defined at:
  7180 ;;		line 398 in file "./Color_Header.h"
  7181 ;; Parameters:    Size  Location     Type
  7182 ;;		None
  7183 ;; Auto vars:     Size  Location     Type
  7184 ;;		None
  7185 ;; Return value:  Size  Location     Type
  7186 ;;                  1    wreg      void 
  7187 ;; Registers used:
  7188 ;;		None
  7189 ;; Tracked objects:
  7190 ;;		On entry : 0/0
  7191 ;;		On exit  : 0/0
  7192 ;;		Unchanged: 0/0
  7193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7198 ;;Total ram usage:        0 bytes
  7199 ;; Hardware stack levels used: 1
  7200 ;; Hardware stack levels required when called: 2
  7201 ;; This function calls:
  7202 ;;		Nothing
  7203 ;; This function is called by:
  7204 ;;		_UpdateColors
  7205 ;; This function uses a non-reentrant model
  7206 ;;
  7207                           
  7208     0A2B                     _RepeatI2C:	
  7209                           ;psect for function _RepeatI2C
  7210                           
  7211     0A2B                     l2325:	
  7212                           ;incstack = 0
  7213                           ; Regs used in _RepeatI2C: []
  7214                           
  7215                           
  7216                           ;./Color_Header.h: 400:     SSP1CON2bits.RSEN = 1;
  7217     0A2B  0023               	movlb	3	; select bank3
  7218     0A2C  1491               	bsf	17,1	;volatile
  7219     0A2D                     l255:
  7220     0A2D  0008               	return
  7221     0A2E                     __end_of_RepeatI2C:
  7222                           
  7223                           	psect	text35
  7224     0A28                     __ptext35:	
  7225 ;; *************** function _ReadI2C *****************
  7226 ;; Defined at:
  7227 ;;		line 395 in file "./Color_Header.h"
  7228 ;; Parameters:    Size  Location     Type
  7229 ;;		None
  7230 ;; Auto vars:     Size  Location     Type
  7231 ;;		None
  7232 ;; Return value:  Size  Location     Type
  7233 ;;                  1    wreg      void 
  7234 ;; Registers used:
  7235 ;;		None
  7236 ;; Tracked objects:
  7237 ;;		On entry : 0/0
  7238 ;;		On exit  : 0/0
  7239 ;;		Unchanged: 0/0
  7240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7245 ;;Total ram usage:        0 bytes
  7246 ;; Hardware stack levels used: 1
  7247 ;; Hardware stack levels required when called: 2
  7248 ;; This function calls:
  7249 ;;		Nothing
  7250 ;; This function is called by:
  7251 ;;		_UpdateColors
  7252 ;; This function uses a non-reentrant model
  7253 ;;
  7254                           
  7255     0A28                     _ReadI2C:	
  7256                           ;psect for function _ReadI2C
  7257                           
  7258     0A28                     l2323:	
  7259                           ;incstack = 0
  7260                           ; Regs used in _ReadI2C: []
  7261                           
  7262                           
  7263                           ;./Color_Header.h: 396:     SSP1CON2bits.RCEN = 1;
  7264     0A28  0023               	movlb	3	; select bank3
  7265     0A29  1591               	bsf	17,3	;volatile
  7266     0A2A                     l252:
  7267     0A2A  0008               	return
  7268     0A2B                     __end_of_ReadI2C:
  7269                           
  7270                           	psect	text36
  7271     0A37                     __ptext36:	
  7272 ;; *************** function _ReadAddressI2C *****************
  7273 ;; Defined at:
  7274 ;;		line 387 in file "./Color_Header.h"
  7275 ;; Parameters:    Size  Location     Type
  7276 ;;		None
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;		None
  7279 ;; Return value:  Size  Location     Type
  7280 ;;                  1    wreg      void 
  7281 ;; Registers used:
  7282 ;;		wreg
  7283 ;; Tracked objects:
  7284 ;;		On entry : 0/0
  7285 ;;		On exit  : 0/0
  7286 ;;		Unchanged: 0/0
  7287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7292 ;;Total ram usage:        0 bytes
  7293 ;; Hardware stack levels used: 1
  7294 ;; Hardware stack levels required when called: 2
  7295 ;; This function calls:
  7296 ;;		Nothing
  7297 ;; This function is called by:
  7298 ;;		_UpdateColors
  7299 ;; This function uses a non-reentrant model
  7300 ;;
  7301                           
  7302     0A37                     _ReadAddressI2C:	
  7303                           ;psect for function _ReadAddressI2C
  7304                           
  7305     0A37                     l2319:	
  7306                           ;incstack = 0
  7307                           ; Regs used in _ReadAddressI2C: [wreg]
  7308                           
  7309                           
  7310                           ;./Color_Header.h: 388:     PIR3bits.SSP1IF = 0;
  7311     0A37  002E               	movlb	14	; select bank14
  7312     0A38  100F               	bcf	15,0	;volatile
  7313     0A39                     l2321:
  7314                           
  7315                           ;./Color_Header.h: 389:     SSP1BUFbits.SSPBUF = (0x39 << 1) | 1;;
  7316     0A39  3073               	movlw	115
  7317     0A3A  0023               	movlb	3	; select bank3
  7318     0A3B  008C               	movwf	12	;volatile
  7319     0A3C                     l246:
  7320     0A3C  0008               	return
  7321     0A3D                     __end_of_ReadAddressI2C:
  7322                           
  7323                           	psect	text37
  7324     0F51                     __ptext37:	
  7325 ;; *************** function _GetValueAndEndI2C *****************
  7326 ;; Defined at:
  7327 ;;		line 417 in file "./Color_Header.h"
  7328 ;; Parameters:    Size  Location     Type
  7329 ;;  colors          1    wreg     PTR struct colorScheme
  7330 ;;		 -> colors(12), 
  7331 ;; Auto vars:     Size  Location     Type
  7332 ;;  colors          1    4[BANK0 ] PTR struct colorScheme
  7333 ;;		 -> colors(12), 
  7334 ;;  value           1    3[BANK0 ] unsigned char 
  7335 ;; Return value:  Size  Location     Type
  7336 ;;                  1    wreg      void 
  7337 ;; Registers used:
  7338 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7339 ;; Tracked objects:
  7340 ;;		On entry : 0/0
  7341 ;;		On exit  : 0/0
  7342 ;;		Unchanged: 0/0
  7343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7345 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7347 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7348 ;;Total ram usage:        2 bytes
  7349 ;; Hardware stack levels used: 1
  7350 ;; Hardware stack levels required when called: 4
  7351 ;; This function calls:
  7352 ;;		_EndI2C
  7353 ;;		_IncrementColorStage
  7354 ;;		_LoadTemp
  7355 ;;		_ReadColorReady
  7356 ;;		_Reset
  7357 ;; This function is called by:
  7358 ;;		_UpdateColors
  7359 ;; This function uses a non-reentrant model
  7360 ;;
  7361                           
  7362     0F51                     _GetValueAndEndI2C:	
  7363                           ;psect for function _GetValueAndEndI2C
  7364                           
  7365                           
  7366                           ;incstack = 0
  7367                           ; Regs used in _GetValueAndEndI2C: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7368                           ;GetValueAndEndI2C@colors stored from wreg
  7369     0F51  0020               	movlb	0	; select bank0
  7370     0F52  00A4               	movwf	GetValueAndEndI2C@colors
  7371     0F53                     l2327:
  7372                           
  7373                           ;./Color_Header.h: 419:     unsigned char value = SSP1BUF;
  7374     0F53  0023               	movlb	3	; select bank3
  7375     0F54  080C               	movf	12,w	;volatile
  7376     0F55  0020               	movlb	0	; select bank0
  7377     0F56  00A3               	movwf	GetValueAndEndI2C@value
  7378                           
  7379                           ;./Color_Header.h: 420:     switch(colors->colorStage){
  7380     0F57  2FDA               	goto	l2365
  7381     0F58                     l2329:
  7382     0F58  0823               	movf	GetValueAndEndI2C@value,w
  7383     0F59  00A1               	movwf	ReadColorReady@buffer
  7384     0F5A  0824               	movf	GetValueAndEndI2C@colors,w
  7385     0F5B  318B  2329  318F   	fcall	_ReadColorReady
  7386     0F5E  2FFC               	goto	l2367
  7387     0F5F                     l2331:
  7388     0F5F  0823               	movf	GetValueAndEndI2C@value,w
  7389     0F60  00A0               	movwf	LoadTemp@value
  7390     0F61  0824               	movf	GetValueAndEndI2C@colors,w
  7391     0F62  318A  226F  318F   	fcall	_LoadTemp
  7392     0F65                     l2333:
  7393     0F65  0020               	movlb	0	; select bank0
  7394     0F66  0824               	movf	GetValueAndEndI2C@colors,w
  7395     0F67  318A  22A1  318F   	fcall	_IncrementColorStage
  7396     0F6A  2FFC               	goto	l2367
  7397     0F6B                     l2335:
  7398     0F6B  0824               	movf	GetValueAndEndI2C@colors,w
  7399     0F6C  3E08               	addlw	8
  7400     0F6D  0086               	movwf	6
  7401     0F6E  3001               	movlw	1	; select bank2/3
  7402     0F6F  0087               	movwf	7
  7403     0F70  0824               	movf	GetValueAndEndI2C@colors,w
  7404     0F71  0084               	movwf	4
  7405     0F72  3001               	movlw	1	; select bank2/3
  7406     0F73  0085               	movwf	5
  7407     0F74  0801               	movf	1,w
  7408     0F75  3F80               	movwi [0]fsr0
  7409     0F76  0823               	movf	GetValueAndEndI2C@value,w
  7410     0F77  3F81               	movwi [1]fsr0
  7411     0F78                     l2337:
  7412     0F78  0824               	movf	GetValueAndEndI2C@colors,w
  7413     0F79  318A  22A1  318F   	fcall	_IncrementColorStage
  7414     0F7C  2FFC               	goto	l2367
  7415     0F7D                     l2339:
  7416     0F7D  0823               	movf	GetValueAndEndI2C@value,w
  7417     0F7E  00A0               	movwf	LoadTemp@value
  7418     0F7F  0824               	movf	GetValueAndEndI2C@colors,w
  7419     0F80  318A  226F  318F   	fcall	_LoadTemp
  7420     0F83                     l2341:
  7421     0F83  0020               	movlb	0	; select bank0
  7422     0F84  0824               	movf	GetValueAndEndI2C@colors,w
  7423     0F85  318A  22A1  318F   	fcall	_IncrementColorStage
  7424     0F88                     l2343:
  7425     0F88  0020               	movlb	0	; select bank0
  7426     0F89  0824               	movf	GetValueAndEndI2C@colors,w
  7427     0F8A  3E08               	addlw	8
  7428     0F8B  0086               	movwf	6
  7429     0F8C  3001               	movlw	1	; select bank2/3
  7430     0F8D  0087               	movwf	7
  7431     0F8E  0824               	movf	GetValueAndEndI2C@colors,w
  7432     0F8F  3E06               	addlw	6
  7433     0F90  0084               	movwf	4
  7434     0F91  3001               	movlw	1	; select bank2/3
  7435     0F92  0085               	movwf	5
  7436     0F93  0801               	movf	1,w
  7437     0F94  3F80               	movwi [0]fsr0
  7438     0F95  0823               	movf	GetValueAndEndI2C@value,w
  7439     0F96  3F81               	movwi [1]fsr0
  7440     0F97                     l2345:
  7441     0F97  0824               	movf	GetValueAndEndI2C@colors,w
  7442     0F98  318A  22A1  318F   	fcall	_IncrementColorStage
  7443     0F9B  2FFC               	goto	l2367
  7444     0F9C                     l2347:
  7445     0F9C  0823               	movf	GetValueAndEndI2C@value,w
  7446     0F9D  00A0               	movwf	LoadTemp@value
  7447     0F9E  0824               	movf	GetValueAndEndI2C@colors,w
  7448     0F9F  318A  226F  318F   	fcall	_LoadTemp
  7449     0FA2                     l2349:
  7450     0FA2  0020               	movlb	0	; select bank0
  7451     0FA3  0824               	movf	GetValueAndEndI2C@colors,w
  7452     0FA4  318A  22A1  318F   	fcall	_IncrementColorStage
  7453     0FA7  2FFC               	goto	l2367
  7454     0FA8                     l2351:
  7455     0FA8  0824               	movf	GetValueAndEndI2C@colors,w
  7456     0FA9  3E08               	addlw	8
  7457     0FAA  0086               	movwf	6
  7458     0FAB  3001               	movlw	1	; select bank2/3
  7459     0FAC  0087               	movwf	7
  7460     0FAD  0824               	movf	GetValueAndEndI2C@colors,w
  7461     0FAE  3E04               	addlw	4
  7462     0FAF  0084               	movwf	4
  7463     0FB0  3001               	movlw	1	; select bank2/3
  7464     0FB1  0085               	movwf	5
  7465     0FB2  0801               	movf	1,w
  7466     0FB3  3F80               	movwi [0]fsr0
  7467     0FB4  0823               	movf	GetValueAndEndI2C@value,w
  7468     0FB5  3F81               	movwi [1]fsr0
  7469     0FB6                     l2353:
  7470     0FB6  0824               	movf	GetValueAndEndI2C@colors,w
  7471     0FB7  318A  22A1  318F   	fcall	_IncrementColorStage
  7472     0FBA  2FFC               	goto	l2367
  7473     0FBB                     l2355:
  7474     0FBB  0823               	movf	GetValueAndEndI2C@value,w
  7475     0FBC  00A0               	movwf	LoadTemp@value
  7476     0FBD  0824               	movf	GetValueAndEndI2C@colors,w
  7477     0FBE  318A  226F  318F   	fcall	_LoadTemp
  7478     0FC1                     l2357:
  7479     0FC1  0020               	movlb	0	; select bank0
  7480     0FC2  0824               	movf	GetValueAndEndI2C@colors,w
  7481     0FC3  318A  22A1  318F   	fcall	_IncrementColorStage
  7482     0FC6  2FFC               	goto	l2367
  7483     0FC7                     l2359:
  7484     0FC7  0824               	movf	GetValueAndEndI2C@colors,w
  7485     0FC8  3E08               	addlw	8
  7486     0FC9  0086               	movwf	6
  7487     0FCA  3001               	movlw	1	; select bank2/3
  7488     0FCB  0087               	movwf	7
  7489     0FCC  0824               	movf	GetValueAndEndI2C@colors,w
  7490     0FCD  3E02               	addlw	2
  7491     0FCE  0084               	movwf	4
  7492     0FCF  3001               	movlw	1	; select bank2/3
  7493     0FD0  0085               	movwf	5
  7494     0FD1  0801               	movf	1,w
  7495     0FD2  3F80               	movwi [0]fsr0
  7496     0FD3  0823               	movf	GetValueAndEndI2C@value,w
  7497     0FD4  3F81               	movwi [1]fsr0
  7498     0FD5                     l2361:
  7499     0FD5  0824               	movf	GetValueAndEndI2C@colors,w
  7500     0FD6  318A  22E3  318F   	fcall	_Reset
  7501     0FD9  2FFC               	goto	l2367
  7502     0FDA                     l2365:
  7503     0FDA  0824               	movf	GetValueAndEndI2C@colors,w
  7504     0FDB  3E0A               	addlw	10
  7505     0FDC  0086               	movwf	6
  7506     0FDD  3001               	movlw	1	; select bank2/3
  7507     0FDE  0087               	movwf	7
  7508     0FDF  0801               	movf	1,w
  7509                           
  7510                           ; Switch size 1, requested type "simple"
  7511                           ; Number of cases is 9, Range of values is 0 to 8
  7512                           ; switch strategies available:
  7513                           ; Name         Instructions Cycles
  7514                           ; direct_byte           24     6 (fixed)
  7515                           ; simple_byte           28    15 (average)
  7516                           ; jumptable            260     6 (fixed)
  7517                           ;	Chosen strategy is simple_byte
  7518     0FE0  3A00               	xorlw	0	; case 0
  7519     0FE1  1903               	skipnz
  7520     0FE2  2F58               	goto	l2329
  7521     0FE3  3A01               	xorlw	1	; case 1
  7522     0FE4  1903               	skipnz
  7523     0FE5  2F5F               	goto	l2331
  7524     0FE6  3A03               	xorlw	3	; case 2
  7525     0FE7  1903               	skipnz
  7526     0FE8  2F6B               	goto	l2335
  7527     0FE9  3A01               	xorlw	1	; case 3
  7528     0FEA  1903               	skipnz
  7529     0FEB  2F7D               	goto	l2339
  7530     0FEC  3A07               	xorlw	7	; case 4
  7531     0FED  1903               	skipnz
  7532     0FEE  2F88               	goto	l2343
  7533     0FEF  3A01               	xorlw	1	; case 5
  7534     0FF0  1903               	skipnz
  7535     0FF1  2F9C               	goto	l2347
  7536     0FF2  3A03               	xorlw	3	; case 6
  7537     0FF3  1903               	skipnz
  7538     0FF4  2FA8               	goto	l2351
  7539     0FF5  3A01               	xorlw	1	; case 7
  7540     0FF6  1903               	skipnz
  7541     0FF7  2FBB               	goto	l2355
  7542     0FF8  3A0F               	xorlw	15	; case 8
  7543     0FF9  1903               	skipnz
  7544     0FFA  2FC7               	goto	l2359
  7545     0FFB  2FFC               	goto	l2367
  7546     0FFC                     l2367:
  7547                           
  7548                           ;./Color_Header.h: 432:     EndI2C();
  7549     0FFC  318A  2225  318F   	fcall	_EndI2C
  7550     0FFF                     l279:
  7551     0FFF  0008               	return
  7552     1000                     __end_of_GetValueAndEndI2C:
  7553                           
  7554                           	psect	text38
  7555     0AE3                     __ptext38:	
  7556 ;; *************** function _Reset *****************
  7557 ;; Defined at:
  7558 ;;		line 371 in file "./Color_Header.h"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;  colors          1    wreg     PTR struct colorScheme
  7561 ;;		 -> colors(12), 
  7562 ;; Auto vars:     Size  Location     Type
  7563 ;;  colors          1    0[BANK0 ] PTR struct colorScheme
  7564 ;;		 -> colors(12), 
  7565 ;; Return value:  Size  Location     Type
  7566 ;;                  1    wreg      void 
  7567 ;; Registers used:
  7568 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7569 ;; Tracked objects:
  7570 ;;		On entry : 0/0
  7571 ;;		On exit  : 0/0
  7572 ;;		Unchanged: 0/0
  7573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7575 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7577 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7578 ;;Total ram usage:        1 bytes
  7579 ;; Hardware stack levels used: 1
  7580 ;; Hardware stack levels required when called: 2
  7581 ;; This function calls:
  7582 ;;		Nothing
  7583 ;; This function is called by:
  7584 ;;		_GetValueAndEndI2C
  7585 ;; This function uses a non-reentrant model
  7586 ;;
  7587                           
  7588     0AE3                     _Reset:	
  7589                           ;psect for function _Reset
  7590                           
  7591                           
  7592                           ;incstack = 0
  7593                           ; Regs used in _Reset: [wreg+fsr1l+fsr1h+status,2+status,0]
  7594                           ;Reset@colors stored from wreg
  7595     0AE3  0020               	movlb	0	; select bank0
  7596     0AE4  00A0               	movwf	Reset@colors
  7597     0AE5                     l2239:
  7598                           
  7599                           ;./Color_Header.h: 372:     colors->colorStage = 0;
  7600     0AE5  0820               	movf	Reset@colors,w
  7601     0AE6  3E0A               	addlw	10
  7602     0AE7  0086               	movwf	6
  7603     0AE8  3001               	movlw	1	; select bank2/3
  7604     0AE9  0087               	movwf	7
  7605     0AEA  0181               	clrf	1
  7606                           
  7607                           ;./Color_Header.h: 373:     colors->ready = 0;
  7608     0AEB  0820               	movf	Reset@colors,w
  7609     0AEC  3E09               	addlw	9
  7610     0AED  0086               	movwf	6
  7611     0AEE  3001               	movlw	1	; select bank2/3
  7612     0AEF  0087               	movwf	7
  7613     0AF0  0181               	clrf	1
  7614                           
  7615                           ;./Color_Header.h: 374:     colors->allDone = 1;
  7616     0AF1  0820               	movf	Reset@colors,w
  7617     0AF2  3E0B               	addlw	11
  7618     0AF3  0086               	movwf	6
  7619     0AF4  3001               	movlw	1	; select bank2/3
  7620     0AF5  0087               	movwf	7
  7621     0AF6  0181               	clrf	1
  7622     0AF7  0A81               	incf	1,f
  7623     0AF8                     l234:
  7624     0AF8  0008               	return
  7625     0AF9                     __end_of_Reset:
  7626                           
  7627                           	psect	text39
  7628     0B29                     __ptext39:	
  7629 ;; *************** function _ReadColorReady *****************
  7630 ;; Defined at:
  7631 ;;		line 409 in file "./Color_Header.h"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;  colors          1    wreg     PTR struct colorScheme
  7634 ;;		 -> colors(12), 
  7635 ;;  buffer          1    1[BANK0 ] unsigned char 
  7636 ;; Auto vars:     Size  Location     Type
  7637 ;;  colors          1    2[BANK0 ] PTR struct colorScheme
  7638 ;;		 -> colors(12), 
  7639 ;; Return value:  Size  Location     Type
  7640 ;;                  1    wreg      void 
  7641 ;; Registers used:
  7642 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7643 ;; Tracked objects:
  7644 ;;		On entry : 0/0
  7645 ;;		On exit  : 0/0
  7646 ;;		Unchanged: 0/0
  7647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7648 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7649 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7651 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7652 ;;Total ram usage:        2 bytes
  7653 ;; Hardware stack levels used: 1
  7654 ;; Hardware stack levels required when called: 3
  7655 ;; This function calls:
  7656 ;;		_IncrementColorStage
  7657 ;; This function is called by:
  7658 ;;		_GetValueAndEndI2C
  7659 ;; This function uses a non-reentrant model
  7660 ;;
  7661                           
  7662     0B29                     _ReadColorReady:	
  7663                           ;psect for function _ReadColorReady
  7664                           
  7665                           
  7666                           ;incstack = 0
  7667                           ; Regs used in _ReadColorReady: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7668                           ;ReadColorReady@colors stored from wreg
  7669     0B29  0020               	movlb	0	; select bank0
  7670     0B2A  00A2               	movwf	ReadColorReady@colors
  7671     0B2B                     l2245:
  7672                           
  7673                           ;./Color_Header.h: 410:     buffer = buffer & 0x1;
  7674     0B2B  0821               	movf	ReadColorReady@buffer,w
  7675     0B2C  3901               	andlw	1
  7676     0B2D  00A1               	movwf	ReadColorReady@buffer
  7677     0B2E                     l2247:
  7678                           
  7679                           ;./Color_Header.h: 411:     colors->ready = buffer;
  7680     0B2E  0822               	movf	ReadColorReady@colors,w
  7681     0B2F  3E09               	addlw	9
  7682     0B30  0086               	movwf	6
  7683     0B31  3001               	movlw	1	; select bank2/3
  7684     0B32  0087               	movwf	7
  7685     0B33  0821               	movf	ReadColorReady@buffer,w
  7686     0B34  0081               	movwf	1
  7687     0B35                     l2249:
  7688                           
  7689                           ;./Color_Header.h: 412:     if(colors->ready == 1){
  7690     0B35  0822               	movf	ReadColorReady@colors,w
  7691     0B36  3E09               	addlw	9
  7692     0B37  0086               	movwf	6
  7693     0B38  3001               	movlw	1	; select bank2/3
  7694     0B39  0087               	movwf	7
  7695     0B3A  0301               	decf	1,w
  7696     0B3B  1D03               	btfss	3,2
  7697     0B3C  2B3E               	goto	u1291
  7698     0B3D  2B3F               	goto	u1290
  7699     0B3E                     u1291:
  7700     0B3E  2B43               	goto	l265
  7701     0B3F                     u1290:
  7702     0B3F                     l2251:
  7703                           
  7704                           ;./Color_Header.h: 413:         IncrementColorStage(colors);
  7705     0B3F  0822               	movf	ReadColorReady@colors,w
  7706     0B40  318A  22A1  318B   	fcall	_IncrementColorStage
  7707     0B43                     l265:
  7708     0B43  0008               	return
  7709     0B44                     __end_of_ReadColorReady:
  7710                           
  7711                           	psect	text40
  7712     0AA1                     __ptext40:	
  7713 ;; *************** function _IncrementColorStage *****************
  7714 ;; Defined at:
  7715 ;;		line 402 in file "./Color_Header.h"
  7716 ;; Parameters:    Size  Location     Type
  7717 ;;  colors          1    wreg     PTR struct colorScheme
  7718 ;;		 -> colors(12), 
  7719 ;; Auto vars:     Size  Location     Type
  7720 ;;  colors          1    0[BANK0 ] PTR struct colorScheme
  7721 ;;		 -> colors(12), 
  7722 ;; Return value:  Size  Location     Type
  7723 ;;                  1    wreg      void 
  7724 ;; Registers used:
  7725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7726 ;; Tracked objects:
  7727 ;;		On entry : 0/0
  7728 ;;		On exit  : 0/0
  7729 ;;		Unchanged: 0/0
  7730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7732 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7734 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7735 ;;Total ram usage:        1 bytes
  7736 ;; Hardware stack levels used: 1
  7737 ;; Hardware stack levels required when called: 2
  7738 ;; This function calls:
  7739 ;;		Nothing
  7740 ;; This function is called by:
  7741 ;;		_ReadColorReady
  7742 ;;		_GetValueAndEndI2C
  7743 ;; This function uses a non-reentrant model
  7744 ;;
  7745                           
  7746     0AA1                     _IncrementColorStage:	
  7747                           ;psect for function _IncrementColorStage
  7748                           
  7749                           
  7750                           ;incstack = 0
  7751                           ; Regs used in _IncrementColorStage: [wreg-fsr1h+status,2+status,0]
  7752                           ;IncrementColorStage@colors stored from wreg
  7753     0AA1  0020               	movlb	0	; select bank0
  7754     0AA2  00A0               	movwf	IncrementColorStage@colors
  7755     0AA3                     l2237:
  7756                           
  7757                           ;./Color_Header.h: 403:     colors->colorStage = colors->colorStage +1;
  7758     0AA3  0820               	movf	IncrementColorStage@colors,w
  7759     0AA4  3E0A               	addlw	10
  7760     0AA5  0086               	movwf	6
  7761     0AA6  3001               	movlw	1	; select bank2/3
  7762     0AA7  0087               	movwf	7
  7763     0AA8  0820               	movf	IncrementColorStage@colors,w
  7764     0AA9  3E0A               	addlw	10
  7765     0AAA  0084               	movwf	4
  7766     0AAB  3001               	movlw	1	; select bank2/3
  7767     0AAC  0085               	movwf	5
  7768     0AAD  0800               	movf	0,w
  7769     0AAE  3E01               	addlw	1
  7770     0AAF  0081               	movwf	1
  7771     0AB0                     l258:
  7772     0AB0  0008               	return
  7773     0AB1                     __end_of_IncrementColorStage:
  7774                           
  7775                           	psect	text41
  7776     0A6F                     __ptext41:	
  7777 ;; *************** function _LoadTemp *****************
  7778 ;; Defined at:
  7779 ;;		line 406 in file "./Color_Header.h"
  7780 ;; Parameters:    Size  Location     Type
  7781 ;;  colors          1    wreg     PTR struct colorScheme
  7782 ;;		 -> colors(12), 
  7783 ;;  value           1    0[BANK0 ] unsigned char 
  7784 ;; Auto vars:     Size  Location     Type
  7785 ;;  colors          1    1[BANK0 ] PTR struct colorScheme
  7786 ;;		 -> colors(12), 
  7787 ;; Return value:  Size  Location     Type
  7788 ;;                  1    wreg      void 
  7789 ;; Registers used:
  7790 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7791 ;; Tracked objects:
  7792 ;;		On entry : 0/0
  7793 ;;		On exit  : 0/0
  7794 ;;		Unchanged: 0/0
  7795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7796 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7797 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7799 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7800 ;;Total ram usage:        2 bytes
  7801 ;; Hardware stack levels used: 1
  7802 ;; Hardware stack levels required when called: 2
  7803 ;; This function calls:
  7804 ;;		Nothing
  7805 ;; This function is called by:
  7806 ;;		_GetValueAndEndI2C
  7807 ;; This function uses a non-reentrant model
  7808 ;;
  7809                           
  7810     0A6F                     _LoadTemp:	
  7811                           ;psect for function _LoadTemp
  7812                           
  7813                           
  7814                           ;incstack = 0
  7815                           ; Regs used in _LoadTemp: [wreg+fsr1l+fsr1h+status,2+status,0]
  7816                           ;LoadTemp@colors stored from wreg
  7817     0A6F  0020               	movlb	0	; select bank0
  7818     0A70  00A1               	movwf	LoadTemp@colors
  7819     0A71                     l2243:
  7820                           
  7821                           ;./Color_Header.h: 407:     colors->temp = value;
  7822     0A71  0821               	movf	LoadTemp@colors,w
  7823     0A72  3E08               	addlw	8
  7824     0A73  0086               	movwf	6
  7825     0A74  3001               	movlw	1	; select bank2/3
  7826     0A75  0087               	movwf	7
  7827     0A76  0820               	movf	LoadTemp@value,w
  7828     0A77  0081               	movwf	1
  7829     0A78                     l261:
  7830     0A78  0008               	return
  7831     0A79                     __end_of_LoadTemp:
  7832                           
  7833                           	psect	text42
  7834     0A25                     __ptext42:	
  7835 ;; *************** function _EndI2C *****************
  7836 ;; Defined at:
  7837 ;;		line 380 in file "./Color_Header.h"
  7838 ;; Parameters:    Size  Location     Type
  7839 ;;		None
  7840 ;; Auto vars:     Size  Location     Type
  7841 ;;		None
  7842 ;; Return value:  Size  Location     Type
  7843 ;;                  1    wreg      void 
  7844 ;; Registers used:
  7845 ;;		None
  7846 ;; Tracked objects:
  7847 ;;		On entry : 0/0
  7848 ;;		On exit  : 0/0
  7849 ;;		Unchanged: 0/0
  7850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7855 ;;Total ram usage:        0 bytes
  7856 ;; Hardware stack levels used: 1
  7857 ;; Hardware stack levels required when called: 2
  7858 ;; This function calls:
  7859 ;;		Nothing
  7860 ;; This function is called by:
  7861 ;;		_GetValueAndEndI2C
  7862 ;; This function uses a non-reentrant model
  7863 ;;
  7864                           
  7865     0A25                     _EndI2C:	
  7866                           ;psect for function _EndI2C
  7867                           
  7868     0A25                     l2241:	
  7869                           ;incstack = 0
  7870                           ; Regs used in _EndI2C: []
  7871                           
  7872                           
  7873                           ;./Color_Header.h: 381:     SSP1CON2bits.PEN = 1;
  7874     0A25  0023               	movlb	3	; select bank3
  7875     0A26  1511               	bsf	17,2	;volatile
  7876     0A27                     l240:
  7877     0A27  0008               	return
  7878     0A28                     __end_of_EndI2C:
  7879                           
  7880                           	psect	text43
  7881     0D37                     __ptext43:	
  7882 ;; *************** function _PlayTune *****************
  7883 ;; Defined at:
  7884 ;;		line 449 in file "./Color_Header.h"
  7885 ;; Parameters:    Size  Location     Type
  7886 ;;  color           1    wreg     unsigned char 
  7887 ;; Auto vars:     Size  Location     Type
  7888 ;;  color           1    1[BANK0 ] unsigned char 
  7889 ;; Return value:  Size  Location     Type
  7890 ;;                  1    wreg      void 
  7891 ;; Registers used:
  7892 ;;		wreg, status,2, status,0
  7893 ;; Tracked objects:
  7894 ;;		On entry : 0/0
  7895 ;;		On exit  : 0/0
  7896 ;;		Unchanged: 0/0
  7897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7899 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7900 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7901 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7902 ;;Total ram usage:        2 bytes
  7903 ;; Hardware stack levels used: 1
  7904 ;; Hardware stack levels required when called: 2
  7905 ;; This function calls:
  7906 ;;		Nothing
  7907 ;; This function is called by:
  7908 ;;		_ColorSensor
  7909 ;; This function uses a non-reentrant model
  7910 ;;
  7911                           
  7912     0D37                     _PlayTune:	
  7913                           ;psect for function _PlayTune
  7914                           
  7915                           
  7916                           ;incstack = 0
  7917                           ; Regs used in _PlayTune: [wreg+status,2+status,0]
  7918                           ;PlayTune@color stored from wreg
  7919     0D37  0020               	movlb	0	; select bank0
  7920     0D38  00A1               	movwf	PlayTune@color
  7921     0D39                     l2489:
  7922                           
  7923                           ;./Color_Header.h: 450:     if(color == RED){
  7924     0D39  0321               	decf	PlayTune@color,w
  7925     0D3A  1D03               	btfss	3,2
  7926     0D3B  2D3D               	goto	u1571
  7927     0D3C  2D3E               	goto	u1570
  7928     0D3D                     u1571:
  7929     0D3D  2D57               	goto	l2497
  7930     0D3E                     u1570:
  7931     0D3E                     l2491:
  7932                           
  7933                           ;./Color_Header.h: 451:             DAC1CON1bits.DAC1R = 31;
  7934     0D3E  301F               	movlw	31
  7935     0D3F  0032               	movlb	18	; select bank18
  7936     0D40  048F               	iorwf	15,f	;volatile
  7937     0D41                     l2493:
  7938                           
  7939                           ;./Color_Header.h: 452:             _delay((unsigned long)((2700 /262/2)*(32000000/4000.
      +                          0)));
  7940     0D41  3034               	movlw	52
  7941     0D42  0020               	movlb	0	; select bank0
  7942     0D43  00A0               	movwf	??_PlayTune
  7943     0D44  30F1               	movlw	241
  7944     0D45                     u2667:
  7945     0D45  0B89               	decfsz	9,f
  7946     0D46  2D45               	goto	u2667
  7947     0D47  0BA0               	decfsz	??_PlayTune,f
  7948     0D48  2D45               	goto	u2667
  7949     0D49  3200               	nop2
  7950     0D4A                     l2495:
  7951                           
  7952                           ;./Color_Header.h: 453:             DAC1CON1bits.DAC1R = 0;
  7953     0D4A  30E0               	movlw	-32
  7954     0D4B  0032               	movlb	18	; select bank18
  7955     0D4C  058F               	andwf	15,f	;volatile
  7956                           
  7957                           ;./Color_Header.h: 454:             _delay((unsigned long)((2700 /262/2)*(32000000/4000.
      +                          0)));
  7958     0D4D  3034               	movlw	52
  7959     0D4E  0020               	movlb	0	; select bank0
  7960     0D4F  00A0               	movwf	??_PlayTune
  7961     0D50  30F1               	movlw	241
  7962     0D51                     u2677:
  7963     0D51  0B89               	decfsz	9,f
  7964     0D52  2D51               	goto	u2677
  7965     0D53  0BA0               	decfsz	??_PlayTune,f
  7966     0D54  2D51               	goto	u2677
  7967     0D55  3200               	nop2
  7968                           
  7969                           ;./Color_Header.h: 455:         }
  7970     0D56  2D8E               	goto	l298
  7971     0D57                     l2497:
  7972     0D57  3002               	movlw	2
  7973     0D58  0621               	xorwf	PlayTune@color,w
  7974     0D59  1D03               	btfss	3,2
  7975     0D5A  2D5C               	goto	u1581
  7976     0D5B  2D5D               	goto	u1580
  7977     0D5C                     u1581:
  7978     0D5C  2D76               	goto	l2505
  7979     0D5D                     u1580:
  7980     0D5D                     l2499:
  7981                           
  7982                           ;./Color_Header.h: 457:             DAC1CON1bits.DAC1R = 31;
  7983     0D5D  301F               	movlw	31
  7984     0D5E  0032               	movlb	18	; select bank18
  7985     0D5F  048F               	iorwf	15,f	;volatile
  7986     0D60                     l2501:
  7987                           
  7988                           ;./Color_Header.h: 458:             _delay((unsigned long)((2700/ 440/2)*(32000000/4000.
      +                          0)));
  7989     0D60  3020               	movlw	32
  7990     0D61  0020               	movlb	0	; select bank0
  7991     0D62  00A0               	movwf	??_PlayTune
  7992     0D63  3029               	movlw	41
  7993     0D64                     u2687:
  7994     0D64  0B89               	decfsz	9,f
  7995     0D65  2D64               	goto	u2687
  7996     0D66  0BA0               	decfsz	??_PlayTune,f
  7997     0D67  2D64               	goto	u2687
  7998     0D68  3200               	nop2
  7999     0D69                     l2503:
  8000                           
  8001                           ;./Color_Header.h: 459:             DAC1CON1bits.DAC1R = 0;
  8002     0D69  30E0               	movlw	-32
  8003     0D6A  0032               	movlb	18	; select bank18
  8004     0D6B  058F               	andwf	15,f	;volatile
  8005                           
  8006                           ;./Color_Header.h: 460:             _delay((unsigned long)((2700/ 440/2)*(32000000/4000.
      +                          0)));
  8007     0D6C  3020               	movlw	32
  8008     0D6D  0020               	movlb	0	; select bank0
  8009     0D6E  00A0               	movwf	??_PlayTune
  8010     0D6F  3029               	movlw	41
  8011     0D70                     u2697:
  8012     0D70  0B89               	decfsz	9,f
  8013     0D71  2D70               	goto	u2697
  8014     0D72  0BA0               	decfsz	??_PlayTune,f
  8015     0D73  2D70               	goto	u2697
  8016     0D74  3200               	nop2
  8017                           
  8018                           ;./Color_Header.h: 461:         }
  8019     0D75  2D8E               	goto	l298
  8020     0D76                     l2505:
  8021                           
  8022                           ;./Color_Header.h: 463:             DAC1CON1bits.DAC1R = 31;
  8023     0D76  301F               	movlw	31
  8024     0D77  0032               	movlb	18	; select bank18
  8025     0D78  048F               	iorwf	15,f	;volatile
  8026     0D79                     l2507:
  8027                           
  8028                           ;./Color_Header.h: 464:             _delay((unsigned long)((2700/ 349/2)*(32000000/4000.
      +                          0)));
  8029     0D79  3020               	movlw	32
  8030     0D7A  0020               	movlb	0	; select bank0
  8031     0D7B  00A0               	movwf	??_PlayTune
  8032     0D7C  3029               	movlw	41
  8033     0D7D                     u2707:
  8034     0D7D  0B89               	decfsz	9,f
  8035     0D7E  2D7D               	goto	u2707
  8036     0D7F  0BA0               	decfsz	??_PlayTune,f
  8037     0D80  2D7D               	goto	u2707
  8038     0D81  3200               	nop2
  8039     0D82                     l2509:
  8040                           
  8041                           ;./Color_Header.h: 465:             DAC1CON1bits.DAC1R = 0;
  8042     0D82  30E0               	movlw	-32
  8043     0D83  0032               	movlb	18	; select bank18
  8044     0D84  058F               	andwf	15,f	;volatile
  8045                           
  8046                           ;./Color_Header.h: 466:             _delay((unsigned long)((2700/ 349/2)*(32000000/4000.
      +                          0)));
  8047     0D85  3020               	movlw	32
  8048     0D86  0020               	movlb	0	; select bank0
  8049     0D87  00A0               	movwf	??_PlayTune
  8050     0D88  3029               	movlw	41
  8051     0D89                     u2717:
  8052     0D89  0B89               	decfsz	9,f
  8053     0D8A  2D89               	goto	u2717
  8054     0D8B  0BA0               	decfsz	??_PlayTune,f
  8055     0D8C  2D89               	goto	u2717
  8056     0D8D  3200               	nop2
  8057     0D8E                     l298:
  8058     0D8E  0008               	return
  8059     0D8F                     __end_of_PlayTune:
  8060                           
  8061                           	psect	text44
  8062     0AD1                     __ptext44:	
  8063 ;; *************** function _ActivatePump *****************
  8064 ;; Defined at:
  8065 ;;		line 454 in file "motorMain.c"
  8066 ;; Parameters:    Size  Location     Type
  8067 ;;  switchValue     2    0[BANK0 ] int 
  8068 ;; Auto vars:     Size  Location     Type
  8069 ;;		None
  8070 ;; Return value:  Size  Location     Type
  8071 ;;                  1    wreg      void 
  8072 ;; Registers used:
  8073 ;;		wreg
  8074 ;; Tracked objects:
  8075 ;;		On entry : 0/0
  8076 ;;		On exit  : 0/0
  8077 ;;		Unchanged: 0/0
  8078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8079 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8082 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8083 ;;Total ram usage:        2 bytes
  8084 ;; Hardware stack levels used: 1
  8085 ;; Hardware stack levels required when called: 2
  8086 ;; This function calls:
  8087 ;;		Nothing
  8088 ;; This function is called by:
  8089 ;;		_main
  8090 ;; This function uses a non-reentrant model
  8091 ;;
  8092                           
  8093     0AD1                     _ActivatePump:	
  8094                           ;psect for function _ActivatePump
  8095                           
  8096     0AD1                     l2895:	
  8097                           ;incstack = 0
  8098                           ; Regs used in _ActivatePump: [wreg]
  8099                           
  8100                           
  8101                           ;motorMain.c: 455:     LATBbits.LATB2 = 0;
  8102     0AD1  0020               	movlb	0	; select bank0
  8103     0AD2  1117               	bcf	23,2	;volatile
  8104                           
  8105                           ;motorMain.c: 456:     LATBbits.LATB3 = 0;
  8106     0AD3  1197               	bcf	23,3	;volatile
  8107     0AD4                     l2897:
  8108                           
  8109                           ;motorMain.c: 457:     if(switchValue <= SWITCH_MIN){
  8110     0AD4  3003               	movlw	3
  8111     0AD5  0221               	subwf	ActivatePump@switchValue+1,w
  8112     0AD6  30E9               	movlw	233
  8113     0AD7  1903               	skipnz
  8114     0AD8  0220               	subwf	ActivatePump@switchValue,w
  8115     0AD9  1803               	skipnc
  8116     0ADA  2ADC               	goto	u2201
  8117     0ADB  2ADD               	goto	u2200
  8118     0ADC                     u2201:
  8119     0ADC  2AE0               	goto	l474
  8120     0ADD                     u2200:
  8121     0ADD                     l2899:
  8122                           
  8123                           ;motorMain.c: 458:         LATBbits.LATB2 = 1;
  8124     0ADD  1517               	bsf	23,2	;volatile
  8125                           
  8126                           ;motorMain.c: 459:         LATBbits.LATB3 = 0;
  8127     0ADE  1197               	bcf	23,3	;volatile
  8128                           
  8129                           ;motorMain.c: 460:     }
  8130     0ADF  2AE2               	goto	l476
  8131     0AE0                     l474:	
  8132                           ;motorMain.c: 461:     else{
  8133                           
  8134                           
  8135                           ;motorMain.c: 462:         LATBbits.LATB2 = 0;
  8136     0AE0  1117               	bcf	23,2	;volatile
  8137                           
  8138                           ;motorMain.c: 463:         LATBbits.LATB3 = 0;
  8139     0AE1  1197               	bcf	23,3	;volatile
  8140     0AE2                     l476:
  8141     0AE2  0008               	return
  8142     0AE3                     __end_of_ActivatePump:
  8143                           
  8144                           	psect	intentry
  8145     0004                     __pintentry:	
  8146 ;; *************** function _myFunction *****************
  8147 ;; Defined at:
  8148 ;;		line 466 in file "motorMain.c"
  8149 ;; Parameters:    Size  Location     Type
  8150 ;;		None
  8151 ;; Auto vars:     Size  Location     Type
  8152 ;;  input           2    7[COMMON] int 
  8153 ;; Return value:  Size  Location     Type
  8154 ;;                  1    wreg      void 
  8155 ;; Registers used:
  8156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8157 ;; Tracked objects:
  8158 ;;		On entry : 0/0
  8159 ;;		On exit  : 0/0
  8160 ;;		Unchanged: 0/0
  8161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8163 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8164 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8165 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8166 ;;Total ram usage:        4 bytes
  8167 ;; Hardware stack levels used: 1
  8168 ;; Hardware stack levels required when called: 1
  8169 ;; This function calls:
  8170 ;;		_GetControllerInput
  8171 ;; This function is called by:
  8172 ;;		Interrupt level 1
  8173 ;; This function uses a non-reentrant model
  8174 ;;
  8175                           
  8176     0004                     _myFunction:
  8177                           
  8178                           ;incstack = 0
  8179     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8180                           
  8181                           ; Regs used in _myFunction: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8182     0005  3180               	pagesel	$
  8183     0006                     i1l3425:
  8184                           
  8185                           ;motorMain.c: 467:     if(PIR3bits.SSP1IF == 1){
  8186     0006  002E               	movlb	14	; select bank14
  8187     0007  1C0F               	btfss	15,0	;volatile
  8188     0008  280A               	goto	u255_21
  8189     0009  280B               	goto	u255_20
  8190     000A                     u255_21:
  8191     000A  2810               	goto	i1l481
  8192     000B                     u255_20:
  8193     000B                     i1l3427:
  8194                           
  8195                           ;motorMain.c: 469:         newI2CMessage = 1;
  8196     000B  0020               	movlb	0	; select bank0
  8197     000C  01EE               	clrf	_newI2CMessage
  8198     000D  0AEE               	incf	_newI2CMessage,f
  8199                           
  8200                           ;motorMain.c: 470:         PIR3bits.SSP1IF = 0;
  8201     000E  002E               	movlb	14	; select bank14
  8202     000F  100F               	bcf	15,0	;volatile
  8203     0010                     i1l481:	
  8204                           ;motorMain.c: 471:     }
  8205                           
  8206                           
  8207                           ;motorMain.c: 472:     if(PIR3bits.RCIF == 1){
  8208     0010  1E8F               	btfss	15,5	;volatile
  8209     0011  2813               	goto	u256_21
  8210     0012  2814               	goto	u256_20
  8211     0013                     u256_21:
  8212     0013  2849               	goto	i1l3445
  8213     0014                     u256_20:
  8214     0014                     i1l3429:
  8215                           
  8216                           ;motorMain.c: 473:         int input = RCREG;
  8217     0014  0022               	movlb	2	; select bank2
  8218     0015  0819               	movf	25,w	;volatile
  8219     0016  00F5               	movwf	??_myFunction
  8220     0017  01F6               	clrf	??_myFunction+1
  8221     0018  0875               	movf	??_myFunction,w
  8222     0019  00F7               	movwf	myFunction@input
  8223     001A  0876               	movf	??_myFunction+1,w
  8224     001B  00F8               	movwf	myFunction@input+1
  8225     001C                     i1l3431:
  8226                           
  8227                           ;motorMain.c: 474:         if(currentCommand.receiveId == CONTROL_INPUT){
  8228     001C  0020               	movlb	0	; select bank0
  8229     001D  0361               	decf	_currentCommand+12,w
  8230     001E  0462               	iorwf	_currentCommand+13,w
  8231     001F  1D03               	btfss	3,2
  8232     0020  2822               	goto	u257_21
  8233     0021  2823               	goto	u257_20
  8234     0022                     u257_21:
  8235     0022  2831               	goto	i1l3437
  8236     0023                     u257_20:
  8237     0023                     i1l3433:
  8238                           
  8239                           ;motorMain.c: 475:             GetControllerInput(input);
  8240     0023  0878               	movf	myFunction@input+1,w
  8241     0024  00F1               	movwf	GetControllerInput@input+1
  8242     0025  0877               	movf	myFunction@input,w
  8243     0026  00F0               	movwf	GetControllerInput@input
  8244     0027  3185  2597  3180   	fcall	_GetControllerInput
  8245     002A                     i1l3435:
  8246                           
  8247                           ;motorMain.c: 476:             currentCommand.receiveIt = currentCommand.receiveIt + 1;
  8248     002A  0020               	movlb	0	; select bank0
  8249     002B  085D               	movf	_currentCommand+8,w
  8250     002C  3E01               	addlw	1
  8251     002D  00DD               	movwf	_currentCommand+8
  8252     002E  3000               	movlw	0
  8253     002F  3D5E               	addwfc	_currentCommand+9,w
  8254     0030  00DE               	movwf	_currentCommand+9
  8255     0031                     i1l3437:
  8256                           
  8257                           ;motorMain.c: 478:         if(currentCommand.receiveIt >= currentCommand.receiveLimit){
  8258     0031  085E               	movf	_currentCommand+9,w
  8259     0032  3A80               	xorlw	128
  8260     0033  00F5               	movwf	??_myFunction
  8261     0034  0860               	movf	_currentCommand+11,w
  8262     0035  3A80               	xorlw	128
  8263     0036  0275               	subwf	??_myFunction,w
  8264     0037  1D03               	skipz
  8265     0038  283B               	goto	u258_25
  8266     0039  085F               	movf	_currentCommand+10,w
  8267     003A  025D               	subwf	_currentCommand+8,w
  8268     003B                     u258_25:
  8269     003B  1C03               	skipc
  8270     003C  283E               	goto	u258_21
  8271     003D  283F               	goto	u258_20
  8272     003E                     u258_21:
  8273     003E  2842               	goto	i1l3441
  8274     003F                     u258_20:
  8275     003F                     i1l3439:
  8276                           
  8277                           ;motorMain.c: 479:             currentCommand.done = 1;
  8278     003F  0020               	movlb	0	; select bank0
  8279     0040  01E3               	clrf	_currentCommand+14
  8280     0041  0AE3               	incf	_currentCommand+14,f
  8281     0042                     i1l3441:
  8282                           
  8283                           ;motorMain.c: 481:         inputStage++;
  8284     0042  3001               	movlw	1
  8285     0043  0021               	movlb	1	; select bank1
  8286     0044  07E8               	addwf	_inputStage^(0+128),f
  8287     0045  3000               	movlw	0
  8288     0046  3DE9               	addwfc	(_inputStage+1)^(0+128),f
  8289     0047                     i1l3443:
  8290                           
  8291                           ;motorMain.c: 482:         PIR3bits.RCIF =0;
  8292     0047  002E               	movlb	14	; select bank14
  8293     0048  128F               	bcf	15,5	;volatile
  8294     0049                     i1l3445:
  8295                           
  8296                           ;motorMain.c: 485:     if(PIR3bits.TXIF == 1){
  8297     0049  1E0F               	btfss	15,4	;volatile
  8298     004A  284C               	goto	u259_21
  8299     004B  284D               	goto	u259_20
  8300     004C                     u259_21:
  8301     004C  2887               	goto	i1l489
  8302     004D                     u259_20:
  8303     004D                     i1l3447:
  8304                           
  8305                           ;motorMain.c: 486:         if(currentCommand.sendIt >= currentCommand.sendLimit){
  8306     004D  0020               	movlb	0	; select bank0
  8307     004E  0858               	movf	_currentCommand+3,w
  8308     004F  3A80               	xorlw	128
  8309     0050  00F5               	movwf	??_myFunction
  8310     0051  0856               	movf	_currentCommand+1,w
  8311     0052  3A80               	xorlw	128
  8312     0053  0275               	subwf	??_myFunction,w
  8313     0054  1D03               	skipz
  8314     0055  2858               	goto	u260_25
  8315     0056  0855               	movf	_currentCommand,w
  8316     0057  0257               	subwf	_currentCommand+2,w
  8317     0058                     u260_25:
  8318     0058  1C03               	skipc
  8319     0059  285B               	goto	u260_21
  8320     005A  285C               	goto	u260_20
  8321     005B                     u260_21:
  8322     005B  2870               	goto	i1l3455
  8323     005C                     u260_20:
  8324     005C                     i1l3449:
  8325                           
  8326                           ;motorMain.c: 487:             PIE3bits.TXIE = 0;
  8327     005C  002E               	movlb	14	; select bank14
  8328     005D  1219               	bcf	25,4	;volatile
  8329     005E                     i1l3451:
  8330                           
  8331                           ;motorMain.c: 488:             if(currentCommand.receiveLimit <= 0){
  8332     005E  0020               	movlb	0	; select bank0
  8333     005F  0860               	movf	_currentCommand+11,w
  8334     0060  3A80               	xorlw	128
  8335     0061  00F5               	movwf	??_myFunction
  8336     0062  3080               	movlw	128
  8337     0063  0275               	subwf	??_myFunction,w
  8338     0064  1D03               	skipz
  8339     0065  2868               	goto	u261_25
  8340     0066  3001               	movlw	1
  8341     0067  025F               	subwf	_currentCommand+10,w
  8342     0068                     u261_25:
  8343     0068  1803               	skipnc
  8344     0069  286B               	goto	u261_21
  8345     006A  286C               	goto	u261_20
  8346     006B                     u261_21:
  8347     006B  2885               	goto	i1l3459
  8348     006C                     u261_20:
  8349     006C                     i1l3453:
  8350                           
  8351                           ;motorMain.c: 489:                 currentCommand.done = 1;
  8352     006C  0020               	movlb	0	; select bank0
  8353     006D  01E3               	clrf	_currentCommand+14
  8354     006E  0AE3               	incf	_currentCommand+14,f
  8355     006F  2885               	goto	i1l3459
  8356     0070                     i1l3455:
  8357                           
  8358                           ;motorMain.c: 493:             TX1REGbits.TX1REG = currentCommand.toSend[currentCommand.
      +                          sendIt];
  8359     0070  3002               	movlw	2
  8360     0071  3E55               	addlw	(low (_currentCommand| 0))& (0+255)
  8361     0072  0086               	movwf	6
  8362     0073  0187               	clrf	7
  8363     0074  3F40               	moviw [0]fsr1
  8364     0075  0020               	movlb	0	; select bank0
  8365     0076  075B               	addwf	low ((_currentCommand| 0+6)),w
  8366     0077  0084               	movwf	4
  8367     0078  3F41               	moviw [1]fsr1
  8368     0079  3D5C               	addwfc	(low ((_currentCommand| 0+6))+1),w
  8369     007A  0085               	movwf	5
  8370     007B  0800               	movf	0,w
  8371     007C  0022               	movlb	2	; select bank2
  8372     007D  009A               	movwf	26	;volatile
  8373     007E                     i1l3457:
  8374                           
  8375                           ;motorMain.c: 494:             currentCommand.sendIt = currentCommand.sendIt + 1;
  8376     007E  0020               	movlb	0	; select bank0
  8377     007F  0857               	movf	_currentCommand+2,w
  8378     0080  3E01               	addlw	1
  8379     0081  00D7               	movwf	_currentCommand+2
  8380     0082  3000               	movlw	0
  8381     0083  3D58               	addwfc	_currentCommand+3,w
  8382     0084  00D8               	movwf	_currentCommand+3
  8383     0085                     i1l3459:
  8384                           
  8385                           ;motorMain.c: 496:         PIR3bits.TXIF = 0;
  8386     0085  002E               	movlb	14	; select bank14
  8387     0086  120F               	bcf	15,4	;volatile
  8388     0087                     i1l489:
  8389     0087  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8390     0088  0009               	retfie
  8391     0089                     __end_of_myFunction:
  8392                           
  8393                           	psect	text46
  8394     0597                     __ptext46:	
  8395 ;; *************** function _GetControllerInput *****************
  8396 ;; Defined at:
  8397 ;;		line 249 in file "motorMain.c"
  8398 ;; Parameters:    Size  Location     Type
  8399 ;;  input           2    0[COMMON] int 
  8400 ;; Auto vars:     Size  Location     Type
  8401 ;;		None
  8402 ;; Return value:  Size  Location     Type
  8403 ;;                  1    wreg      void 
  8404 ;; Registers used:
  8405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  8406 ;; Tracked objects:
  8407 ;;		On entry : 0/0
  8408 ;;		On exit  : 0/0
  8409 ;;		Unchanged: 0/0
  8410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8413 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8414 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8415 ;;Total ram usage:        5 bytes
  8416 ;; Hardware stack levels used: 1
  8417 ;; This function calls:
  8418 ;;		Nothing
  8419 ;; This function is called by:
  8420 ;;		_myFunction
  8421 ;; This function uses a non-reentrant model
  8422 ;;
  8423                           
  8424     0597                     _GetControllerInput:	
  8425                           ;psect for function _GetControllerInput
  8426                           
  8427     0597                     i1l3371:	
  8428                           ;incstack = 0
  8429                           ; Regs used in _GetControllerInput: [wreg-fsr1h+status,2+status,0]
  8430                           
  8431                           
  8432                           ;motorMain.c: 250:     if(currentCommand.receiveIt <0 ){
  8433     0597  3008               	movlw	8
  8434     0598  3E55               	addlw	(low (_currentCommand| 0))& (0+255)
  8435     0599  0086               	movwf	6
  8436     059A  0187               	clrf	7
  8437     059B  3141               	addfsr 1,1
  8438     059C  1F81               	btfss	1,7
  8439     059D  2D9F               	goto	u254_21
  8440     059E  2DA0               	goto	u254_20
  8441     059F                     u254_21:
  8442     059F  2E68               	goto	i1l3419
  8443     05A0                     u254_20:
  8444     05A0  2EAC               	goto	i1l396
  8445     05A1                     i1l3375:
  8446     05A1  0871               	movf	GetControllerInput@input+1,w
  8447     05A2  0021               	movlb	1	; select bank1
  8448     05A3  00E3               	movwf	((_controls+1)^(0+128)+20)
  8449     05A4  0870               	movf	GetControllerInput@input,w
  8450     05A5  00E2               	movwf	(_controls^(0+128)+20)
  8451     05A6  2EAC               	goto	i1l396
  8452     05A7                     i1l3377:
  8453     05A7  3014               	movlw	20
  8454     05A8  3ECE               	addlw	(low (_controls| 0))& (0+255)
  8455     05A9  0086               	movwf	6
  8456     05AA  0187               	clrf	7
  8457     05AB  0871               	movf	GetControllerInput@input+1,w
  8458     05AC  00F3               	movwf	??_GetControllerInput+1
  8459     05AD  0870               	movf	GetControllerInput@input,w
  8460     05AE  00F2               	movwf	??_GetControllerInput
  8461     05AF  0872               	movf	??_GetControllerInput,w
  8462     05B0  00F3               	movwf	??_GetControllerInput+1
  8463     05B1  01F2               	clrf	??_GetControllerInput
  8464     05B2  3F40               	moviw [0]fsr1
  8465     05B3  0772               	addwf	??_GetControllerInput,w
  8466     05B4  0021               	movlb	1	; select bank1
  8467     05B5  00CE               	movwf	_controls^(0+128)
  8468     05B6  3F41               	moviw [1]fsr1
  8469     05B7  3D73               	addwfc	??_GetControllerInput+1,w
  8470     05B8  00CF               	movwf	(_controls^(0+128)+1)
  8471     05B9  2EAC               	goto	i1l396
  8472     05BA                     i1l3381:
  8473     05BA  3014               	movlw	20
  8474     05BB  3ECE               	addlw	(low (_controls| 0))& (0+255)
  8475     05BC  0086               	movwf	6
  8476     05BD  0187               	clrf	7
  8477     05BE  0871               	movf	GetControllerInput@input+1,w
  8478     05BF  00F3               	movwf	??_GetControllerInput+1
  8479     05C0  0870               	movf	GetControllerInput@input,w
  8480     05C1  00F2               	movwf	??_GetControllerInput
  8481     05C2  0872               	movf	??_GetControllerInput,w
  8482     05C3  00F3               	movwf	??_GetControllerInput+1
  8483     05C4  01F2               	clrf	??_GetControllerInput
  8484     05C5  3F40               	moviw [0]fsr1
  8485     05C6  0772               	addwf	??_GetControllerInput,w
  8486     05C7  0021               	movlb	1	; select bank1
  8487     05C8  00D0               	movwf	(_controls^(0+128)+2)
  8488     05C9  3F41               	moviw [1]fsr1
  8489     05CA  3D73               	addwfc	??_GetControllerInput+1,w
  8490     05CB  00D1               	movwf	(_controls^(0+128)+3)
  8491     05CC  2EAC               	goto	i1l396
  8492     05CD                     i1l3385:
  8493     05CD  3014               	movlw	20
  8494     05CE  3ECE               	addlw	(low (_controls| 0))& (0+255)
  8495     05CF  0086               	movwf	6
  8496     05D0  0187               	clrf	7
  8497     05D1  0871               	movf	GetControllerInput@input+1,w
  8498     05D2  00F3               	movwf	??_GetControllerInput+1
  8499     05D3  0870               	movf	GetControllerInput@input,w
  8500     05D4  00F2               	movwf	??_GetControllerInput
  8501     05D5  0872               	movf	??_GetControllerInput,w
  8502     05D6  00F3               	movwf	??_GetControllerInput+1
  8503     05D7  01F2               	clrf	??_GetControllerInput
  8504     05D8  3F40               	moviw [0]fsr1
  8505     05D9  0772               	addwf	??_GetControllerInput,w
  8506     05DA  0021               	movlb	1	; select bank1
  8507     05DB  00D2               	movwf	(_controls^(0+128)+4)
  8508     05DC  3F41               	moviw [1]fsr1
  8509     05DD  3D73               	addwfc	??_GetControllerInput+1,w
  8510     05DE  00D3               	movwf	(_controls^(0+128)+5)
  8511     05DF  2EAC               	goto	i1l396
  8512     05E0                     i1l3389:
  8513     05E0  3014               	movlw	20
  8514     05E1  3ECE               	addlw	(low (_controls| 0))& (0+255)
  8515     05E2  0086               	movwf	6
  8516     05E3  0187               	clrf	7
  8517     05E4  0871               	movf	GetControllerInput@input+1,w
  8518     05E5  00F3               	movwf	??_GetControllerInput+1
  8519     05E6  0870               	movf	GetControllerInput@input,w
  8520     05E7  00F2               	movwf	??_GetControllerInput
  8521     05E8  0872               	movf	??_GetControllerInput,w
  8522     05E9  00F3               	movwf	??_GetControllerInput+1
  8523     05EA  01F2               	clrf	??_GetControllerInput
  8524     05EB  3F40               	moviw [0]fsr1
  8525     05EC  0772               	addwf	??_GetControllerInput,w
  8526     05ED  0021               	movlb	1	; select bank1
  8527     05EE  00D4               	movwf	(_controls^(0+128)+6)
  8528     05EF  3F41               	moviw [1]fsr1
  8529     05F0  3D73               	addwfc	??_GetControllerInput+1,w
  8530     05F1  00D5               	movwf	(_controls^(0+128)+7)
  8531     05F2  2EAC               	goto	i1l396
  8532     05F3                     i1l3393:
  8533     05F3  3014               	movlw	20
  8534     05F4  3ECE               	addlw	(low (_controls| 0))& (0+255)
  8535     05F5  0086               	movwf	6
  8536     05F6  0187               	clrf	7
  8537     05F7  0871               	movf	GetControllerInput@input+1,w
  8538     05F8  00F3               	movwf	??_GetControllerInput+1
  8539     05F9  0870               	movf	GetControllerInput@input,w
  8540     05FA  00F2               	movwf	??_GetControllerInput
  8541     05FB  0872               	movf	??_GetControllerInput,w
  8542     05FC  00F3               	movwf	??_GetControllerInput+1
  8543     05FD  01F2               	clrf	??_GetControllerInput
  8544     05FE  3F40               	moviw [0]fsr1
  8545     05FF  0772               	addwf	??_GetControllerInput,w
  8546     0600  0021               	movlb	1	; select bank1
  8547     0601  00D6               	movwf	(_controls^(0+128)+8)
  8548     0602  3F41               	moviw [1]fsr1
  8549     0603  3D73               	addwfc	??_GetControllerInput+1,w
  8550     0604  00D7               	movwf	(_controls^(0+128)+9)
  8551     0605  2EAC               	goto	i1l396
  8552     0606                     i1l3397:
  8553     0606  3014               	movlw	20
  8554     0607  3ECE               	addlw	(low (_controls| 0))& (0+255)
  8555     0608  0086               	movwf	6
  8556     0609  0187               	clrf	7
  8557     060A  0871               	movf	GetControllerInput@input+1,w
  8558     060B  00F3               	movwf	??_GetControllerInput+1
  8559     060C  0870               	movf	GetControllerInput@input,w
  8560     060D  00F2               	movwf	??_GetControllerInput
  8561     060E  0872               	movf	??_GetControllerInput,w
  8562     060F  00F3               	movwf	??_GetControllerInput+1
  8563     0610  01F2               	clrf	??_GetControllerInput
  8564     0611  3F40               	moviw [0]fsr1
  8565     0612  0772               	addwf	??_GetControllerInput,w
  8566     0613  0021               	movlb	1	; select bank1
  8567     0614  00D8               	movwf	(_controls^(0+128)+10)
  8568     0615  3F41               	moviw [1]fsr1
  8569     0616  3D73               	addwfc	??_GetControllerInput+1,w
  8570     0617  00D9               	movwf	(_controls^(0+128)+11)
  8571     0618  2EAC               	goto	i1l396
  8572     0619                     i1l3401:
  8573     0619  3014               	movlw	20
  8574     061A  3ECE               	addlw	(low (_controls| 0))& (0+255)
  8575     061B  0086               	movwf	6
  8576     061C  0187               	clrf	7
  8577     061D  0871               	movf	GetControllerInput@input+1,w
  8578     061E  00F3               	movwf	??_GetControllerInput+1
  8579     061F  0870               	movf	GetControllerInput@input,w
  8580     0620  00F2               	movwf	??_GetControllerInput
  8581     0621  0872               	movf	??_GetControllerInput,w
  8582     0622  00F3               	movwf	??_GetControllerInput+1
  8583     0623  01F2               	clrf	??_GetControllerInput
  8584     0624  3F40               	moviw [0]fsr1
  8585     0625  0772               	addwf	??_GetControllerInput,w
  8586     0626  0021               	movlb	1	; select bank1
  8587     0627  00DA               	movwf	(_controls^(0+128)+12)
  8588     0628  3F41               	moviw [1]fsr1
  8589     0629  3D73               	addwfc	??_GetControllerInput+1,w
  8590     062A  00DB               	movwf	(_controls^(0+128)+13)
  8591     062B  2EAC               	goto	i1l396
  8592     062C                     i1l3405:
  8593     062C  3014               	movlw	20
  8594     062D  3ECE               	addlw	(low (_controls| 0))& (0+255)
  8595     062E  0086               	movwf	6
  8596     062F  0187               	clrf	7
  8597     0630  0871               	movf	GetControllerInput@input+1,w
  8598     0631  00F3               	movwf	??_GetControllerInput+1
  8599     0632  0870               	movf	GetControllerInput@input,w
  8600     0633  00F2               	movwf	??_GetControllerInput
  8601     0634  0872               	movf	??_GetControllerInput,w
  8602     0635  00F3               	movwf	??_GetControllerInput+1
  8603     0636  01F2               	clrf	??_GetControllerInput
  8604     0637  3F40               	moviw [0]fsr1
  8605     0638  0772               	addwf	??_GetControllerInput,w
  8606     0639  0021               	movlb	1	; select bank1
  8607     063A  00DC               	movwf	(_controls^(0+128)+14)
  8608     063B  3F41               	moviw [1]fsr1
  8609     063C  3D73               	addwfc	??_GetControllerInput+1,w
  8610     063D  00DD               	movwf	(_controls^(0+128)+15)
  8611     063E  2EAC               	goto	i1l396
  8612     063F                     i1l3409:
  8613     063F  3014               	movlw	20
  8614     0640  3ECE               	addlw	(low (_controls| 0))& (0+255)
  8615     0641  0086               	movwf	6
  8616     0642  0187               	clrf	7
  8617     0643  0871               	movf	GetControllerInput@input+1,w
  8618     0644  00F3               	movwf	??_GetControllerInput+1
  8619     0645  0870               	movf	GetControllerInput@input,w
  8620     0646  00F2               	movwf	??_GetControllerInput
  8621     0647  0872               	movf	??_GetControllerInput,w
  8622     0648  00F3               	movwf	??_GetControllerInput+1
  8623     0649  01F2               	clrf	??_GetControllerInput
  8624     064A  3F40               	moviw [0]fsr1
  8625     064B  0772               	addwf	??_GetControllerInput,w
  8626     064C  0021               	movlb	1	; select bank1
  8627     064D  00DE               	movwf	(_controls^(0+128)+16)
  8628     064E  3F41               	moviw [1]fsr1
  8629     064F  3D73               	addwfc	??_GetControllerInput+1,w
  8630     0650  00DF               	movwf	(_controls^(0+128)+17)
  8631     0651  2EAC               	goto	i1l396
  8632     0652                     i1l3413:
  8633     0652  3014               	movlw	20
  8634     0653  3ECE               	addlw	(low (_controls| 0))& (0+255)
  8635     0654  0086               	movwf	6
  8636     0655  0187               	clrf	7
  8637     0656  0871               	movf	GetControllerInput@input+1,w
  8638     0657  00F3               	movwf	??_GetControllerInput+1
  8639     0658  0870               	movf	GetControllerInput@input,w
  8640     0659  00F2               	movwf	??_GetControllerInput
  8641     065A  0872               	movf	??_GetControllerInput,w
  8642     065B  00F3               	movwf	??_GetControllerInput+1
  8643     065C  01F2               	clrf	??_GetControllerInput
  8644     065D  3F40               	moviw [0]fsr1
  8645     065E  0772               	addwf	??_GetControllerInput,w
  8646     065F  0021               	movlb	1	; select bank1
  8647     0660  00E0               	movwf	(_controls^(0+128)+18)
  8648     0661  3F41               	moviw [1]fsr1
  8649     0662  3D73               	addwfc	??_GetControllerInput+1,w
  8650     0663  00E1               	movwf	(_controls^(0+128)+19)
  8651     0664                     i1l3415:
  8652     0664  0020               	movlb	0	; select bank0
  8653     0665  01E4               	clrf	_currentInput
  8654     0666  01E5               	clrf	_currentInput+1
  8655     0667  2EAC               	goto	i1l396
  8656     0668                     i1l3419:
  8657                           
  8658                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8659                           ; Switch size 1, requested type "simple"
  8660                           ; Number of cases is 1, Range of values is 0 to 0
  8661                           ; switch strategies available:
  8662                           ; Name         Instructions Cycles
  8663                           ; simple_byte            4     3 (average)
  8664                           ; direct_byte            8     6 (fixed)
  8665                           ; jumptable            260     6 (fixed)
  8666                           ;	Chosen strategy is simple_byte
  8667     0668  0020               	movlb	0	; select bank0
  8668     0669  085E               	movf	_currentCommand+9,w
  8669     066A  3A00               	xorlw	0	; case 0
  8670     066B  1903               	skipnz
  8671     066C  2E6E               	goto	i1l3535
  8672     066D  2EAC               	goto	i1l396
  8673     066E                     i1l3535:
  8674                           
  8675                           ; Switch size 1, requested type "simple"
  8676                           ; Number of cases is 20, Range of values is 6 to 25
  8677                           ; switch strategies available:
  8678                           ; Name         Instructions Cycles
  8679                           ; direct_byte           49     9 (fixed)
  8680                           ; simple_byte           61    31 (average)
  8681                           ; jumptable            263     9 (fixed)
  8682                           ;	Chosen strategy is simple_byte
  8683     066E  085D               	movf	_currentCommand+8,w
  8684     066F  3A06               	xorlw	6	; case 6
  8685     0670  1903               	skipnz
  8686     0671  2DA1               	goto	i1l3375
  8687     0672  3A01               	xorlw	1	; case 7
  8688     0673  1903               	skipnz
  8689     0674  2DA7               	goto	i1l3377
  8690     0675  3A0F               	xorlw	15	; case 8
  8691     0676  1903               	skipnz
  8692     0677  2DA1               	goto	i1l3375
  8693     0678  3A01               	xorlw	1	; case 9
  8694     0679  1903               	skipnz
  8695     067A  2DBA               	goto	i1l3381
  8696     067B  3A03               	xorlw	3	; case 10
  8697     067C  1903               	skipnz
  8698     067D  2DA1               	goto	i1l3375
  8699     067E  3A01               	xorlw	1	; case 11
  8700     067F  1903               	skipnz
  8701     0680  2DCD               	goto	i1l3385
  8702     0681  3A07               	xorlw	7	; case 12
  8703     0682  1903               	skipnz
  8704     0683  2DA1               	goto	i1l3375
  8705     0684  3A01               	xorlw	1	; case 13
  8706     0685  1903               	skipnz
  8707     0686  2DE0               	goto	i1l3389
  8708     0687  3A03               	xorlw	3	; case 14
  8709     0688  1903               	skipnz
  8710     0689  2DA1               	goto	i1l3375
  8711     068A  3A01               	xorlw	1	; case 15
  8712     068B  1903               	skipnz
  8713     068C  2DF3               	goto	i1l3393
  8714     068D  3A1F               	xorlw	31	; case 16
  8715     068E  1903               	skipnz
  8716     068F  2DA1               	goto	i1l3375
  8717     0690  3A01               	xorlw	1	; case 17
  8718     0691  1903               	skipnz
  8719     0692  2E06               	goto	i1l3397
  8720     0693  3A03               	xorlw	3	; case 18
  8721     0694  1903               	skipnz
  8722     0695  2DA1               	goto	i1l3375
  8723     0696  3A01               	xorlw	1	; case 19
  8724     0697  1903               	skipnz
  8725     0698  2E19               	goto	i1l3401
  8726     0699  3A07               	xorlw	7	; case 20
  8727     069A  1903               	skipnz
  8728     069B  2DA1               	goto	i1l3375
  8729     069C  3A01               	xorlw	1	; case 21
  8730     069D  1903               	skipnz
  8731     069E  2E2C               	goto	i1l3405
  8732     069F  3A03               	xorlw	3	; case 22
  8733     06A0  1903               	skipnz
  8734     06A1  2DA1               	goto	i1l3375
  8735     06A2  3A01               	xorlw	1	; case 23
  8736     06A3  1903               	skipnz
  8737     06A4  2E3F               	goto	i1l3409
  8738     06A5  3A0F               	xorlw	15	; case 24
  8739     06A6  1903               	skipnz
  8740     06A7  2DA1               	goto	i1l3375
  8741     06A8  3A01               	xorlw	1	; case 25
  8742     06A9  1903               	skipnz
  8743     06AA  2E52               	goto	i1l3413
  8744     06AB  2EAC               	goto	i1l396
  8745     06AC                     i1l396:
  8746     06AC  0008               	return
  8747     06AD                     __end_of_GetControllerInput:
  8748     007E                     btemp	set	126	;btemp
  8749     007E                     int$flags	set	126
  8750     007E                     wtemp0	set	126
  8751                           
  8752                           	psect	config
  8753                           
  8754                           ;Config register CONFIG1 @ 0x8007
  8755                           ;	External Oscillator mode selection bits
  8756                           ;	FEXTOSC = ECH, EC above 8MHz; PFM set to high power
  8757                           ;	Power-up default value for COSC bits
  8758                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
  8759                           ;	Clock Out Enable bit
  8760                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  8761                           ;	Clock Switch Enable bit
  8762                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  8763                           ;	Fail-Safe Clock Monitor Enable bit
  8764                           ;	FCMEN = OFF, FSCM timer disabled
  8765     8007                     	org	32775
  8766     8007  1F8F               	dw	8079
  8767                           
  8768                           ;Config register CONFIG2 @ 0x8008
  8769                           ;	Master Clear Enable bit
  8770                           ;	MCLRE = ON, MCLR pin is Master Clear function
  8771                           ;	Power-up Timer Enable bit
  8772                           ;	PWRTE = OFF, PWRT disabled
  8773                           ;	Low-Power BOR enable bit
  8774                           ;	LPBOREN = OFF, ULPBOR disabled
  8775                           ;	Brown-out reset enable bits
  8776                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  8777                           ;	Brown-out Reset Voltage Selection
  8778                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  8779                           ;	Zero-cross detect disable
  8780                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  8781                           ;	Peripheral Pin Select one-way control
  8782                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  8783                           ;	Stack Overflow/Underflow Reset Enable bit
  8784                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  8785                           ;	Background Debugger
  8786                           ;	DEBUG = 0x1, unprogrammed default
  8787     8008                     	org	32776
  8788     8008  3FFF               	dw	16383
  8789                           
  8790                           ;Config register CONFIG3 @ 0x8009
  8791                           ;	WDT Period Select bits
  8792                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8793                           ;	WDT operating mode
  8794                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  8795                           ;	WDT Window Select bits
  8796                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  8797                           ;	WDT input clock selector
  8798                           ;	WDTCCS = SC, Software Control
  8799     8009                     	org	32777
  8800     8009  3F9F               	dw	16287
  8801                           
  8802                           ;Config register CONFIG4 @ 0x800A
  8803                           ;	UserNVM self-write protection bits
  8804                           ;	WRT = OFF, Write protection off
  8805                           ;	Scanner Enable bit
  8806                           ;	SCANE = available, Scanner module is available for use
  8807                           ;	Low Voltage Programming Enable bit
  8808                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  8809     800A                     	org	32778
  8810     800A  3FFF               	dw	16383
  8811                           
  8812                           ;Config register CONFIG5 @ 0x800B
  8813                           ;	UserNVM Program memory code protection bit
  8814                           ;	CP = OFF, Program Memory code protection disabled
  8815                           ;	DataNVM code protection bit
  8816                           ;	CPD = OFF, Data EEPROM code protection disabled
  8817     800B                     	org	32779
  8818     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    6
    Data        93
    BSS         97
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80     53      79
    BANK1            80      0      74
    BANK2            80      0      64
    BANK3            80      0      22
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ColorSensor@color	PTR unsigned char  size(1) Largest target is 1
		 -> color(BANK0[1]), 

    ColorSensor@colors	PTR struct colorScheme size(1) Largest target is 12
		 -> colors(BANK2[12]), 

    ColorSensor@I2CStage	PTR int  size(1) Largest target is 2
		 -> I2CStage(BANK0[2]), 

    ColorSensor@newI2CMessage	PTR unsigned char  size(1) Largest target is 1
		 -> newI2CMessage(BANK0[1]), 

    Command$toSend	PTR unsigned char  size(2) Largest target is 10
		 -> Break(BANK2[10]), FireLaserCommand(BANK1[7]), GetUserDataCommand(BANK1[6]), MoveBackwardCommand(BANK2[10]), 
		 -> MoveForwardCommand(BANK2[10]), ProcessOreCommand(BANK1[7]), TurnLeftCommand(BANK1[10]), TurnRightCommand(BANK1[10]), 

    currentCommand$toSend	PTR unsigned char  size(2) Largest target is 10
		 -> Break(BANK2[10]), FireLaserCommand(BANK1[7]), GetUserDataCommand(BANK1[6]), MoveBackwardCommand(BANK2[10]), 
		 -> MoveForwardCommand(BANK2[10]), ProcessOreCommand(BANK1[7]), TurnLeftCommand(BANK1[10]), TurnRightCommand(BANK1[10]), 

    GetValueAndEndI2C@colors	PTR struct colorScheme size(1) Largest target is 12
		 -> colors(BANK2[12]), 

    IncrementColorStage@colors	PTR struct colorScheme size(1) Largest target is 12
		 -> colors(BANK2[12]), 

    LoadTemp@colors	PTR struct colorScheme size(1) Largest target is 12
		 -> colors(BANK2[12]), 

    ReadColorReady@colors	PTR struct colorScheme size(1) Largest target is 12
		 -> colors(BANK2[12]), 

    Reset@colors	PTR struct colorScheme size(1) Largest target is 12
		 -> colors(BANK2[12]), 

    S417command$toSend	PTR unsigned char  size(2) Largest target is 10
		 -> Break(BANK2[10]), FireLaserCommand(BANK1[7]), GetUserDataCommand(BANK1[6]), MoveBackwardCommand(BANK2[10]), 
		 -> MoveForwardCommand(BANK2[10]), ProcessOreCommand(BANK1[7]), TurnLeftCommand(BANK1[10]), TurnRightCommand(BANK1[10]), 

    UpdateColors@colors	PTR struct colorScheme size(1) Largest target is 12
		 -> colors(BANK2[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myFunction in COMMON

    _myFunction->_GetControllerInput

Critical Paths under _main in BANK0

    _main->_drive
    _drive->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _SetUpColorSensor->_SetUp
    _ColorSensor->_UpdateColors
    _UpdateColors->___awmod
    _GetValueAndEndI2C->_ReadColorReady
    _ReadColorReady->_IncrementColorStage

Critical Paths under _myFunction in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myFunction in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myFunction in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myFunction in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myFunction in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myFunction in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myFunction in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myFunction in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myFunction in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myFunction in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myFunction in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myFunction in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myFunction in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7712
                       _ActivatePump
                        _ColorSensor
              _CreateControlsCommand
                 _CreateLaserCommand
               _CreateProcessCommand
                        _MovePumpArm
                        _SetUpAnalog
                   _SetUpColorSensor
                          _SetUpPump
                       _SetUpPumpArm
                              _drive
 ---------------------------------------------------------------------------------
 (1) _drive                                                3     3      0    3601
                                             50 BANK0      3     3      0
                        _CreateBreak
              _CreateControlsCommand
         _CreateMoveBackwardCommmand
          _CreateMoveForwardCommmand
             _CreateTurnLeftCommmand
            _CreateTurnRightCommmand
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                             40 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    2417
                                             14 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     799
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _CreateTurnRightCommmand                              2     0      2      76
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CreateTurnLeftCommmand                               2     0      2      76
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CreateMoveForwardCommmand                            2     0      2     120
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CreateMoveBackwardCommmand                           2     0      2     120
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CreateControlsCommand                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CreateBreak                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetUpPumpArm                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetUpPump                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetUpColorSensor                                     4     4      0      46
                                              6 BANK0      4     4      0
                              _SetUp
                           _SetUpI2C
 ---------------------------------------------------------------------------------
 (2) _SetUpI2C                                             0     0      0       0
                       _SetUpI2CPins
                      _SetUpIC2Clock
 ---------------------------------------------------------------------------------
 (3) _SetUpIC2Clock                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SetUpI2CPins                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SetUp                                                6     4      2      23
                                              0 BANK0      6     4      2
                 _EndIC2Transmission
                      _RepeatedStart
               _StartIC2Transmission
                   _StartReadRequest
                  _StartWriteRequest
 ---------------------------------------------------------------------------------
 (3) _StartWriteRequest                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _StartReadRequest                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _StartIC2Transmission                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RepeatedStart                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EndIC2Transmission                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetUpAnalog                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MovePumpArm                                          2     0      2     196
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _CreateProcessCommand                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CreateLaserCommand                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ColorSensor                                          9     6      3    3695
                                             12 BANK0      9     6      3
                           _PlayTune
                       _UpdateColors
 ---------------------------------------------------------------------------------
 (2) _UpdateColors                                         5     3      2    2906
                                              7 BANK0      5     3      2
                  _GetValueAndEndI2C
                     _ReadAddressI2C
                            _ReadI2C
                          _RepeatI2C
               _SelectColourRegister
                           _StartI2C
                           _WriteI2C
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     448
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _StartI2C                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SelectColourRegister                                 3     1      2     130
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _RepeatI2C                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ReadI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ReadAddressI2C                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _GetValueAndEndI2C                                    2     2      0    2131
                                              3 BANK0      2     2      0
                             _EndI2C
                _IncrementColorStage
                           _LoadTemp
                     _ReadColorReady
                              _Reset
 ---------------------------------------------------------------------------------
 (4) _Reset                                                1     1      0      99
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ReadColorReady                                       2     1      1     528
                                              1 BANK0      2     1      1
                _IncrementColorStage
 ---------------------------------------------------------------------------------
 (5) _IncrementColorStage                                  1     1      0     308
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _LoadTemp                                             2     1      1     480
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (4) _EndI2C                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PlayTune                                             2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ActivatePump                                         2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _myFunction                                           4     4      0     744
                                              5 COMMON     4     4      0
                 _GetControllerInput
 ---------------------------------------------------------------------------------
 (7) _GetControllerInput                                   5     3      2     710
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ActivatePump
   _ColorSensor
     _PlayTune
     _UpdateColors
       _GetValueAndEndI2C
         _EndI2C
         _IncrementColorStage
         _LoadTemp
         _ReadColorReady
           _IncrementColorStage
         _Reset
       _ReadAddressI2C
       _ReadI2C
       _RepeatI2C
       _SelectColourRegister
       _StartI2C
       _WriteI2C
       ___awmod
   _CreateControlsCommand
   _CreateLaserCommand
   _CreateProcessCommand
   _MovePumpArm
   _SetUpAnalog
   _SetUpColorSensor
     _SetUp
       _EndIC2Transmission
       _RepeatedStart
       _StartIC2Transmission
       _StartReadRequest
       _StartWriteRequest
     _SetUpI2C
       _SetUpI2CPins
       _SetUpIC2Clock
   _SetUpPump
   _SetUpPumpArm
   _drive
     _CreateBreak
     _CreateControlsCommand
     _CreateMoveBackwardCommmand
     _CreateMoveForwardCommmand
     _CreateTurnLeftCommmand
     _CreateTurnRightCommmand
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl

 _myFunction (ROOT)
   _GetControllerInput

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     35      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4A       7       92.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      40       9       80.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      16      11       27.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      FC      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      FC      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Apr 04 19:41:26 2024

               __Umul8_16@word_mpld 0026                                 l200 0E78  
                               l120 0A31                                 l201 0E82  
                               l203 0E87                                 l123 0A8C  
                               l205 0EA5                                 l117 0B0F  
                               l150 0AD0                                 l302 0E40  
                               l231 0CE2                                 l240 0A27  
                               l312 0596                                 l144 0AC4  
                               l153 0AB4                                 l234 0AF8  
                               l306 058E                                 l170 0A64  
                               l162 0A7D                                 l243 0A42  
                               l171 0A65                                 l147 0AC9  
                               l252 0A2A                                 l180 0A5C  
                               l164 0A81                                 l156 0AB9  
                               l261 0A78                                 l237 0A36  
                               l165 0A82                                 l149 0ACE  
                               l246 0A3C                                 l174 0A68  
                               l158 0ABE                                 l255 0A2D  
                               l159 0AC0                                 l183 0E4A  
                               l431 047D                                 l168 0A5F  
                               l176 0A6D                                 l192 0E5E  
                               l440 0C16                                 l265 0B43  
                               l177 0A6E                                 l258 0AB0  
                               l194 0E63                                 l186 0E4F  
                               l434 0BD4                                 l291 0DE7  
                               l195 0E6E                                 l443 0BF5  
                               l452 0B5E                                 l188 0E54  
                               l189 0E59                                 l437 0BB5  
                               l198 0E73                                 l462 0AA0  
                               l446 0B28                                 l279 0FFF  
                               l471 0B79                                 l456 0C84  
                               l465 0A96                                 l449 0B96  
                               l474 0AE0                                 l298 0D8E  
                               l459 0C9E                                 l476 0AE2  
                               l807 0D36                                 l842 07C1  
                               l835 07D6                                 l845 07D6  
                               _RED 006D       __end_of_CreateControlsCommand 0B97  
              _StartIC2Transmission 0A79                        ___awmod@sign 0026  
                               wreg 0009          ?_CreateMoveForwardCommmand 0020  
                      ___flmul@aexp 0040                        ___flmul@bexp 0041  
                      ___flmul@sign 003B                        ___flmul@temp 0046  
                      ___flmul@prod 0042              GetValueAndEndI2C@value 0023  
      __end_of_SelectColourRegister 0CE3                        _BAUD1CONbits 011F  
                      ___fltol@exp1 0051                                l1050 030D  
                              l1044 0299                                l1038 0319  
                              l1057 0C2A                                l1082 0EC9  
                              l1059 0C3A                                l1084 0F50  
                              l2301 0CBA                                l1095 0F1C  
                              l1096 0F28                                l1088 0F02  
                              l2241 0A25                                l2321 0A39  
                              l2305 0CBD                                l2313 0A32  
                              l2401 0D2D                                l3201 06D4  
                              l2243 0A71                                l2251 0B3F  
                              l2331 0F5F                                l2323 0A28  
                              l2307 0CDF                                l2315 0A3D  
                              l2403 0D32                                l2411 0C22  
                              l3211 06DC                                l3203 06D7  
                              l2501 0D60                                l2237 0AA3  
                              l2245 0B2B                                l2341 0F83  
                              l2333 0F65                                l2325 0A2B  
                              l2317 0A3F                                l2261 0B09  
                              l2253 0AF9                                l2421 0A83  
                              l2413 0C26                                l3221 06E6  
                              l3213 06DF                                l3205 06D9  
                              l2503 0D69                                l2247 0B2E  
                              l2239 0AE5                                l2351 0FA8  
                              l2343 0F88                                l2335 0F6B  
                              l2327 0F53                                l2319 0A37  
                              l2431 0E56                                l2263 0B0A  
                              l2255 0B02                                l2271 0A2E  
                              l2423 0A86                                l2511 0B7A  
                              l2415 0C31                                l2407 0C19  
                              l3231 0711                                l3223 06E7  
                              l3215 06E2                                l3207 06DA  
                              l2505 0D76                                l2249 0B35  
                              l2361 0FD5                                l2353 0FB6  
                              l2345 0F97                                l2337 0F78  
                              l2329 0F58                                l2281 0A5D  
                              l2273 0A79                                l2441 0E80  
                              l2433 0E65                                l2265 0B0C  
                              l2257 0B05                                l2425 0A89  
                              l2521 0B8F                                l2513 0B83  
                              l2417 0C36                                l2409 0C1B  
                              l2601 078A                                l3233 071D  
                              l3225 06E8                                l3217 06E3  
                              l3209 06DB                                l2507 0D79  
                              l2355 0FBB                                l2347 0F9C  
                              l2339 0F7D                                l2291 0CAB  
                              l2283 0C9F                                l2371 0CE5  
                              l2275 0AC1                                l2451 0E9E  
                              l2443 0E88                                l2435 0E68  
                              l2427 0E41                                l2267 0B0D  
                              l2259 0B07                                l2523 0B93  
                              l2515 0B85                                l2531 0BBD  
                              l2603 078B                                l3251 073A  
                              l3235 072E                                l3227 06F2  
                              l3219 06E5                                l2509 0D82  
                              l2357 0FC1                                l2349 0FA2  
                              l2365 0FDA                                l2293 0CAE  
                              l2285 0CA2                                l2381 0CF9  
                              l2373 0CE9                                l2461 0D92  
                              l2277 0A66                                l2445 0E91  
                              l2437 0E7A                                l2429 0E44  
                              l2269 0B0E                                l2525 0B94  
                              l2517 0B89                                l2541 0B97  
                              l2533 0BC8                                l2701 01F4  
                              l2605 0793                                l3261 075C  
                              l3253 073E                                l3229 0707  
                              l3181 06AD                                l2359 0FC7  
                              l2367 0FFC                                l2295 0CB1  
                              l2287 0CA5                                l2391 0D0F  
                              l2383 0CFF                                l2375 0CEE  
                              l2471 0DB2                                l2463 0D96  
                              l2279 0AB1                                l2455 0EA3  
                              l2447 0E93                                l2439 0E7D  
                              l2519 0B8D                                l2551 0BAE  
                              l2543 0B9C                                l2535 0BCB  
                              l2527 0BB6                                l2711 024F  
                              l2703 0206                                l2631 00E3  
                              l2623 07B8                                l2615 07A1  
                              l2607 0795                                l3255 0745  
                              l3263 0760                                l3247 072E  
                              l3191 06C6                                l3183 06BA  
                              l2297 0CB4                                l2289 0CA8  
                              l2393 0D19                                l2385 0D02  
                              l2377 0CF0                                l2369 0CE3  
                              l2473 0DB6                                l2465 0D9A  
                              l2449 0E96                                l2561 0C08  
                              l2553 0BB3                                l2545 0B9E  
                              l2537 0BCD                                l2529 0BBB  
                              l2721 026E                                l2713 0256  
                              l2705 0211                                l2641 00F4  
                              l2633 00E5                                l2625 07C6  
                              l2609 0799                                l2617 07B1  
                              l2801 0F2A                                l3257 074F  
                              l3249 0734                                l3193 06C8  
                              l3185 06C0                                l2491 0D3E  
                              l2299 0CB7                                l2395 0D1D  
                              l2387 0D07                                l2379 0CF4  
                              l3531 0DC0                                l2467 0DAA  
                              l2459 0D91                                l2571 0BDA  
                              l2563 0C0B                                l2555 0BF6  
                              l2547 0BA9                                l2539 0BD2  
                              l2731 0282                                l2723 0275  
                              l2715 0262                                l2707 0223  
                              l2651 010D                                l2643 00FC  
                              l2635 00E9                                l2627 07CB  
                              l2803 0F3E                                l3259 0758  
                              l3195 06CD                                l3187 06C2  
                              l2493 0D41                                l3533 0CC2  
                              l2397 0D22                                l2389 0D0B  
                              l2469 0DAE                                l2477 0DBB  
                              l2813 0A55                                l2821 0DFD  
                              l2581 0BF3                                l2573 0BDC  
                              l2565 0C0F                                l2557 0BFB  
                              l2549 0BAC                                l2741 02AB  
                              l2733 0296                                l2717 0269  
                              l2725 0279                                l2709 0238  
                              l2661 0124                                l2653 0111  
                              l2645 00FE                                l2637 00EA  
                              l2629 00DF                                l2805 0F43  
                              l2901 031A                                l3197 06CF  
                              l3189 06C3                                l2495 0D4A  
                              l2399 0D28                                l2479 0DD7  
                              l2831 0E1C                                l2823 0E0A  
                              l2815 0DE8                                l2591 0B26  
                              l2583 0B10                                l2575 0BE7  
                              l2567 0C14                                l2559 0BFD  
                              l2751 02E2                                l2743 02AF  
                              l2727 027D                                l2719 026D  
                              l2663 0126                                l2655 0112  
                              l2647 0106                                l2639 00EF  
                              l2807 0F47                                l2911 038B  
                              l2903 0352                                l3199 06D1  
                              l2497 0D57                                l2489 0D39  
                              l2841 0E30                                l2833 0E1E  
                              l2825 0E0C                                l2817 0DF3  
                              l2585 0B15                                l2577 0BEA  
                              l2569 0BD5                                l2761 030A  
                              l2753 02F0                                l2745 02C7  
                              l2737 029E                                l2729 027E  
                              l2681 017E                                l2673 0141  
                              l2665 012E                                l2657 0117  
                              l2649 010B                                l2593 0766  
                              l2809 0F48                                l2921 03D4  
                              l2913 039B                                l2905 0362  
                              l2499 0D5D                                l2851 048C  
                              l2843 0E31                                l2835 0E1F  
                              l2827 0E0D                                l2819 0DF9  
                              l2587 0B17                                l2579 0BEE  
                              l2763 030B                                l2755 02F9  
                              l2739 02A3                                l2747 02CB  
                              l2691 01C2                                l2683 0196  
                              l2675 014C                                l2667 0133  
                              l2659 011C                                l2595 0770  
                              l2771 0EAD                                l2931 041D  
                              l2923 03E4                                l2915 03AB  
                              l2907 0372                                l2861 04F0  
                              l2853 04A1                                l2845 0E32  
                              l2837 0E20                                l2829 0E0E  
                              l2589 0B22                                l2765 0311  
                              l2757 02FB                                l2749 02D8  
                              l2693 01C9                                l2685 01A3  
                              l2677 0159                                l2669 0138  
                              l2781 0EDA                                l2773 0EB1  
                              l2941 0466                                l2933 042D  
                              l2925 03F4                                l2917 03BB  
                              l2909 0382                                l2871 0542  
                              l2863 04F6                                l2855 04AB  
                              l2847 0480                                l2951 0B4B  
                              l2839 0E2E                                l2759 0306  
                              l2695 01D4                                l2687 01B0  
                              l2679 0171                                l2599 0779  
                              l2791 0EFB                                l2783 0EDD  
                              l2775 0EC1                                l2943 0476  
                              l2935 0436                                l2927 03FD  
                              l2919 03C4                                l2873 0563  
                              l2865 0517                                l2857 04CB  
                              l2849 0488                                l2961 0B5C  
                              l2953 0B51                                l2881 0A97  
                              l2697 01DB                                l2689 01B7  
                              l2793 0F09                                l2785 0EE8  
                              l2777 0ED1                                l2769 0EA8  
                              l2937 0446                                l2945 047A  
                              l2929 040D                                l2875 0584  
                              l2867 0538                                l2859 04EC  
                              l2955 0B55                                l2947 0B44  
                              l2971 0C82                                l2963 0C69  
                              l2891 0B6E                                l2883 0A8D  
                              l2699 01ED                                l2795 0F12  
                              l2787 0EEF                                l2939 0456  
                              l2877 0588                                l2869 053C  
                              l2957 0B57                                l2949 0B49  
                              l2981 0C97                                l2973 0C89  
                              l2965 0C73                                l2893 0B77  
                              l2885 0B5F                                l2797 0F16  
                              l2789 0EF3                                l2895 0AD1  
                              l2879 058E                                l2959 0B5B  
                              l2983 0C9B                                l2975 0C8B  
                              l2967 0C76                                l2887 0B62  
                              l2799 0F20                                l2897 0AD4  
                              l2985 0C9C                                l2977 0C91  
                              l2969 0C7F                                l2889 0B6B  
                              l2899 0ADD                                l2979 0C95  
                              _BLUE 006C                                u2010 0F08  
                              u2011 0F07                                u2100 0488  
                              u1300 0A81                                u2101 0487  
                              u1301 0A80                                u2005 0EFC  
                              u2110 04AB                                u1310 0AC9  
                              u2030 0F16                                u2111 04AA  
                              u1311 0AC8                                u2031 0F15  
                              u2200 0ADD                                u2120 04CB  
                              u1320 0ACE                                u2040 0F1C  
                              u2201 0ADC                                u2121 04CA  
                              u1321 0ACD                                u2041 0F1B  
                              u2025 0F0C                                u1410 0D0F  
                              u2130 04EC                                u1330 0A6D  
                              u2050 0F20                                u2210 0362  
                              u1411 0D0E                                u2131 04EB  
                              u1331 0A6C                                u2051 0F1F  
                              u2211 0361                                u1420 0D19  
                              u2140 0517                                u1340 0AB9  
                              u1500 0E54                                u2060 0F34  
                              u2300 040D                                u2220 0372  
                              u1421 0D18                                u1405 0D03  
                              u2141 0516                                u2125 04C7  
                              u1341 0AB8                                u1501 0E53  
                              u2301 040C                                u2221 0371  
                              u2150 0538                                u1350 0ABE  
                              u1510 0E5E                                u2070 0F43  
                              u2310 041D                                u2230 0382  
                              u2151 0537                                u2135 04E8  
                              u1351 0ABD                                u1511 0E5D  
                              u2071 0F42                                u2311 041C  
                              u2231 0381                                u2215 035E  
                              u1440 0D28                                u2160 0563  
                              u1360 0A64                                u1520 0E63  
                              u1600 0786                                u2080 0F47  
                              u2320 042D                                u2240 039B  
                              u2400 06F2                                u1441 0D27  
                              u1425 0D15                                u2161 0562  
                              u2145 0513                                u1361 0A63  
                              u1521 0E62                                u2081 0F46  
                              u2065 0F30                                u2321 042C  
                              u2305 0409                                u2241 039A  
                              u2225 036E                                u2401 06F1  
                              u1290 0B3F                                u1450 0D2D  
                              u1370 0CE9                                u2170 0584  
                              u1530 0E73                                u2090 0DF9  
                              u1610 0799                                u2330 0446  
                              u2250 03AB                                u2410 0711  
                              u1291 0B3E                                u1451 0D2C  
                              u1435 0D1E                                u1371 0CE8  
                              u2171 0583                                u2155 0534  
                              u1531 0E72                                u2091 0DF8  
                              u1611 0798                                u2331 0445  
                              u2315 0419                                u2251 03AA  
                              u2235 037E                                u2411 0710  
                              u1380 0CF4                                u2180 0B6B  
                              u1540 0E78                                u1460 0C26  
                              u1700 00EF                                u1620 07A0  
                              u2340 0456                                u2260 03BB  
                              u2420 0734                                u1381 0CF3  
                              u2165 055F                                u2181 0B6A  
                              u1541 0E77                                u1461 0C25  
                              u1701 00EE                                u1621 079F  
                              u1605 0782                                u2341 0455  
                              u2325 0429                                u2261 03BA  
                              u2245 0397                                u2421 0733  
                              u1390 0CFF                                u2190 0B77  
                              u1550 0E87                                u1710 00F4  
                              u2350 0466                                u2270 03D4  
                              u2430 073A                                u1391 0CFE  
                              u2175 0580                                u2191 0B76  
                              u1551 0E86                                u1711 00F3  
                              u2351 0465                                u2335 0442  
                              u2271 03D3                                u2255 03A7  
                              u2431 0739                                u1560 0E9E  
                              u1480 0C36                                u1800 0245  
                              u1720 0111                                u1640 07B0  
                              u2360 0476                                u2280 03E4  
                              u2440 0745                                u1561 0E9D  
                              u1481 0C35                                u1721 0110  
                              u1641 07AF                                u2361 0475  
                              u2345 0452                                u2281 03E3  
                              u2265 03B7                                u2441 0744  
                              u1570 0D3E                                u2370 0C73  
                              u1490 0E4F                                u1730 0117  
                              u1650 07B7                                u2290 03F4  
                              u2450 074F                                u1571 0D3D  
                              u2371 0C72                                u1491 0E4E  
                              u1475 0C2B                                u1731 0116  
                              u1651 07B6                                u1635 07A2  
                              u2355 0462                                u2291 03F3  
                              u2275 03D0                                u2451 074E  
                              u1580 0D5D                                u2380 0C7F  
                              u1900 02AF                                u1740 011C  
                              u2460 0758                                u1581 0D5C  
                              u2381 0C7E                                u1901 02AE  
                              u1805 0241                                u1741 011B  
                              u2365 0472                                u2285 03E0  
                              u2461 0757                                u1910 02BD  
                              u1830 026D                                u1750 0133  
                              u1670 07C6                                u1590 0770  
                              u1831 026C                                u1815 0250  
                              u1751 0132                                u1671 07C5  
                              u1591 076F                                u2295 03F0  
                              u1920 02D8                                u1760 0138  
                              u1680 07CB                                u1921 02D7  
                              u1825 0263                                u1761 0137  
                              u1681 07CA                                u1665 07B9  
                              u1930 02F0                                u1850 027D  
                              u1690 00E9                                u2707 0D7D  
                              u2627 0E03                                u1931 02EF  
                              u1915 02B9                                u1851 027C  
                              u1691 00E8                                u1940 030A  
                              u1860 0282                                u2717 0D89  
                              u2637 0E15                                u1941 0309  
                              u1925 02D4                                u1861 0281  
                              u1845 026F                                u1870 0296  
                              u1790 022E                                u1950 0EAD  
                              u2647 0E27                                u1935 02EC  
                              u1871 0295                                u1775 01B1  
                              u1951 0EAC                                u1880 029D  
                              u1960 0EB1                                u2657 0E39  
                              u1881 029C                                u1785 01DC  
                              u1961 0EB0                                u1890 02A3  
                              u1970 0ED1                                u2667 0D45  
                              u1891 02A2                                u1795 022A  
                              u1971 0ED0                                u2677 0D51  
                              u1990 0EEE                                u2687 0D64  
                              u1991 0EED                                u2697 0D70  
                              u1985 0EE2                 __end_of_CreateBreak 0B29  
                              _main 06AD                                fsr0h 0005  
                              fsr1h 0007                                indf0 0000  
                              fsr0l 0004                                indf1 0001  
                              fsr1l 0006                                btemp 007E  
                              start 0089                      _ReadAddressI2C 0A37  
           GetValueAndEndI2C@colors 0024                     __end_of_ReadI2C 0A2B  
            MovePumpArm@switchValue 0020                 __end_of_ColorSensor 0597  
                     ___fltol@sign1 0050           CreateTurnLeftCommmand@pwm 0020  
                             ?_main 0070                     __end_of___awmod 0D37  
                   __end_of___flmul 031A                     __end_of___fltol 07D7  
                             _GREEN 006B               ?_StartIC2Transmission 0070  
                             i1l481 0010                               i1l396 06AC  
                             i1l489 0087                               _RCREG 0119  
                _GetControllerInput 0597                    ColorSensor@color 002E  
                             _Break 0127                               _SetUp 0E41  
                             _Reset 0AE3   __end_of_CreateMoveForwardCommmand 0C17  
         ??_CreateTurnRightCommmand 0022                               _color 0068  
                             _cycle 0079                               _drive 031A  
               ?_GetControllerInput 0070                       PlayTune@color 0021  
      __end_of_CreateProcessCommand 0C9F                               status 0003  
                             wtemp0 007E              __end_of_ReadAddressI2C 0A3D  
                   __initialization 008B                        __end_of_main 0766  
               _MoveBackwardCommand 0131                          SetUp@value 0024  
                    _ReadColorReady 0B29                    __end_of_LoadTemp 0A79  
                  _StartReadRequest 0AB1                ??_GetControllerInput 0072  
                  __end_of_SetUpI2C 0A8D                              ??_main 0055  
                     ??_SetUpAnalog 0020                    __end_of_PlayTune 0D8F  
                            ?_SetUp 0020                              ?_Reset 0070  
                  __end_of_StartI2C 0A37                         _CreateBreak 0B10  
                     ??_MovePumpArm 0022                              ?_drive 0070  
                  __end_of_WriteI2C 0A43                              _RC3PPS 0F23  
                            _RC4PPS 0F24                              _RC5PPS 0F25  
                            i1l3401 0619                              i1l3413 0652  
                            i1l3405 062C                              i1l3415 0664  
                            i1l3431 001C                              i1l3409 063F  
                            i1l3441 0042                              i1l3433 0023  
                            i1l3425 0006                              i1l3419 0668  
                            i1l3371 0597                              i1l3451 005E  
                            i1l3443 0047                              i1l3435 002A  
                            i1l3427 000B                              i1l3381 05BA  
                            i1l3453 006C                              i1l3437 0031  
                            i1l3429 0014                              i1l3445 0049  
                            i1l3535 066E                              i1l3375 05A1  
                            i1l3455 0070                              i1l3447 004D  
                            i1l3439 003F                              i1l3393 05F3  
                            i1l3385 05CD                              i1l3377 05A7  
                            i1l3457 007E                              i1l3449 005C  
                            i1l3459 0085                              i1l3397 0606  
                            i1l3389 05E0                 _IncrementColorStage 0AA1  
                            u260_20 005C                              u260_21 005B  
                            u260_25 0058                              u261_20 006C  
                            u261_21 006B                              u261_25 0068  
                            u254_20 05A0                              u254_21 059F  
                            u255_20 000B                              u255_21 000A  
                            u256_20 0014                              u256_21 0013  
                            u257_20 0023                              u257_21 0022  
                            u258_20 003F                              u258_21 003E  
                            u258_25 003B                              u259_20 004D  
                            u259_21 004C                    __end_of___xxtofl 0F51  
                            _EndI2C 0A25                           ??_ReadI2C 0020  
                   ?_ReadAddressI2C 0070                   ColorSensor@colors 002D  
            __end_of_ReadColorReady 0B44                        _ActivatePump 0AD1  
                       _ColorSensor 047E              _CreateTurnLeftCommmand 0B97  
                         ??___awmod 0024                           ??___flmul 0036  
                         ??___fltol 004C                       ?_SetUpI2CPins 0070  
              _SelectColourRegister 0C9F                              _colors 0154  
              ?_IncrementColorStage 0070                     ___awmod@divisor 0020  
            ??_StartIC2Transmission 0020                     ___awmod@counter 0025  
                      __pdataCOMMON 0079              SetUpColorSensor@result 0028  
               __end_of_SetUpAnalog 0A5D                        ___xxtofl@arg 002A  
                      ___xxtofl@exp 0029                        ___xxtofl@val 0020  
           __end_of__initialization 00DB                 __end_of_MovePumpArm 0B7A  
                        ___fltol@f1 0048                       ?_SetUpPumpArm 0070  
                   ?_ReadColorReady 0021                      __pcstackCOMMON 0070  
                     __end_of_SetUp 0EA6                       __end_of_Reset 0AF9  
                    ??_SetUpI2CPins 0020                        __pidataBANK0 0A4F  
                      __pidataBANK1 0C3B                        __pidataBANK2 07D7  
             ?_SelectColourRegister 0020                       __end_of_drive 047E  
             ??_IncrementColorStage 0020                  _EndIC2Transmission 0A5D  
              _CreateProcessCommand 0C69                    _TurnRightCommand 00A6  
                 _GetValueAndEndI2C 0F51                             ??_SetUp 0022  
       ??_CreateMoveForwardCommmand 0022                             ??_Reset 0020  
                ?_GetValueAndEndI2C 0070                 ?_EndIC2Transmission 0070  
                           ??_drive 0052                   __end_of_RepeatI2C 0A2E  
                       Reset@colors 0020                          __pbssBANK0 0055  
                        __pbssBANK1 00CE                          __pbssBANK2 0145  
                        __pbssBANK3 01A0                   __end_of_SetUpPump 0A97  
                         ?_LoadTemp 0020                 ??_GetValueAndEndI2C 0023  
                           ?_EndI2C 0070               __end_of_CONTROL_INPUT 1006  
                         ?_SetUpI2C 0070                      ??_SetUpPumpArm 0020  
                         ?_PlayTune 0070                   __end_of__Umul8_16 0C3B  
                    _SSP1DATPPSbits 0EC6                ??_EndIC2Transmission 0020  
                        __pmaintext 06AD                           ?_StartI2C 0070  
                        __pintentry 0004                           ?_WriteI2C 0070  
             ?_CreateProcessCommand 0070                      _SSP1CLKPPSbits 0EC5  
         __end_of_GetValueAndEndI2C 1000                         _SetUpAnalog 0A55  
                     _SetUpIC2Clock 0A2E                           ?___xxtofl 0020  
                     LoadTemp@value 0020          CreateTurnRightCommmand@pwm 0020  
             _CreateControlsCommand 0B7A                             _SSP1ADD 018D  
                           _SSP1BUF 018C                         _MovePumpArm 0B5F  
          __end_of_StartReadRequest 0AC1                          ??_LoadTemp 0021  
             __end_of_DRIVE_COMMAND 1004                             _Command 0145  
                           _ReadI2C 0A28       CreateMoveBackwardCommmand@pwm 0020  
                        ??_SetUpI2C 0020            ColorSensor@newI2CMessage 0034  
                        ??_PlayTune 0020           _CreateMoveForwardCommmand 0BF6  
            ??_SelectColourRegister 0022                          ??_StartI2C 0020  
                           ___awmod 0CE3                             ___flmul 00DF  
                           ___fltol 0766                          ??_WriteI2C 0020  
                           __ptext1 031A                             __ptext2 0EA6  
                           __ptext3 0766                             __ptext4 00DF  
                           __ptext5 0C17                             __ptext6 0BB6  
                           __ptext7 0B97                             __ptext8 0BF6  
                           __ptext9 0BD5                      ?_SetUpIC2Clock 0070  
      ??_CreateMoveBackwardCommmand 0022                             _counter 00E4  
                        ??___xxtofl 0024                          _myFunction 0004  
                  ___awmod@dividend 0022               __end_of_LASER_COMMAND 1002  
                        _inputStage 00E8                        ?_CreateBreak 0070  
                     ?_UpdateColors 0027                             clrloop0 0A44  
              __end_of_SetUpI2CPins 0B10                    ??_ReadAddressI2C 0020  
              end_of_initialization 00DB                             init_ram 0A49  
                           initloop 0A4A                       _RepeatedStart 0A66  
            UpdateColors@stageValue 0027             ?_CreateTurnLeftCommmand 0020  
                      ?_ColorSensor 002C                    _SetUpColorSensor 0DE8  
            ??_CreateProcessCommand 0020                     myFunction@input 0077  
          ?_CreateTurnRightCommmand 0020             ActivatePump@switchValue 0020  
            ?_CreateControlsCommand 0070                __end_of_SetUpPumpArm 0AA1  
                     ___xxtofl@sign 0028                           _TRISAbits 0011  
                         _TRISBbits 0012                           _TRISCbits 0013  
                   _TurnLeftCommand 00B0                      ??_UpdateColors 0029  
                         _RXPPSbits 0ECB                         ___flmul@grs 003C  
                    ?_RepeatedStart 0070      __end_of_CreateTurnLeftCommmand 0BB6  
                  ??_ReadColorReady 0022                      __end_of_EndI2C 0A28  
                   ??_SetUpIC2Clock 0020                       __pidataCOMMON 07FC  
                        drive@power 0053                         ?_myFunction 0070  
               start_initialization 008B      SelectColourRegister@colorStage 0020  
                         _RepeatI2C 0A2B                            ??_EndI2C 0020  
                    _CONTROL_OUTPUT 0069                           _SetUpPump 0A8D  
       __end_of_IncrementColorStage 0AB1                    _FireLaserCommand 00C1  
                    _currentCommand 0055                           __Umul8_16 0C17  
                       __pdataBANK0 0069                         __pdataBANK1 00A0  
                       __pdataBANK2 0120     __end_of_CreateTurnRightCommmand 0BD5  
                _MoveForwardCommand 013B                 ColorSensor@I2CStage 002C  
__end_of_CreateMoveBackwardCommmand 0BF6          _CreateMoveBackwardCommmand 0BD5  
           _EnableLaserScopeCommand 0120                        ?_SetUpAnalog 0070  
                         ___flmul@a 0032                           ___flmul@b 002E  
              ReadColorReady@buffer 0021                ReadColorReady@colors 0022  
                         ___latbits 0002                       __pcstackBANK0 0020  
        __end_of_CreateLaserCommand 0B5F                        ?_MovePumpArm 0020  
                   ??_RepeatedStart 0020                   ?_StartReadRequest 0070  
                      _currentInput 0064                          ?_RepeatI2C 0070  
                ??_StartReadRequest 0020                            ?_ReadI2C 0070  
                        ?_SetUpPump 0070             GetControllerInput@input 0070  
              __end_of_UpdateColors 0DE8                            ?___awmod 0020  
                          ?___flmul 002E                            ?___fltol 0048  
                        ?__Umul8_16 0020                        _SetUpI2CPins 0AF9  
                         _commandIt 00E6                            _I2CStage 0066  
                         _frequency 007B            __end_of_SetUpColorSensor 0E41  
                          _LATAbits 0016                            _LATBbits 0017  
                    LoadTemp@colors 0021                           clear_ram0 0A43  
                          _PIE3bits 0719                        _SetUpPumpArm 0A97  
                     ?_ActivatePump 0020                            _PIR3bits 070F  
                          _SSP1CON1 0190      SelectColourRegister@writeValue 0022  
           ??_CreateControlsCommand 0020                            _WPUCbits 0F4F  
                          _Controls 01A0                            _LoadTemp 0A6F  
                       ??_RepeatI2C 0020                         ??_SetUpPump 0020  
                          _SetUpI2C 0A83                       _CONTROL_INPUT 1004  
                          _PlayTune 0D37                      ??_ActivatePump 0022  
        __end_of_GetControllerInput 06AD                            _StartI2C 0A32  
                       ??__Umul8_16 0022                            _WriteI2C 0A3D  
      CreateMoveForwardCommmand@pwm 0020                         _SP1BRGLbits 011B  
                        _ANSELAbits 0F38                          _ANSELBbits 0F43  
                        _ANSELCbits 0F4E                   _StartWriteRequest 0AC1  
                      ??_myFunction 0075                            ___xxtofl 0EA6  
                ?_StartWriteRequest 0070                            __ptext10 0B7A  
                          __ptext11 0B10                            __ptext20 0AB1  
                          __ptext12 0A97                            __ptext21 0A79  
                          __ptext13 0A8D                            __ptext30 0CE3  
                          __ptext22 0A66                            __ptext14 0DE8  
                          __ptext31 0A3D                            __ptext23 0A5D  
                          __ptext15 0A83                            __ptext40 0AA1  
                          __ptext32 0A32                            __ptext24 0A55  
                          __ptext16 0A2E                            __ptext41 0A6F  
                          __ptext33 0C9F                            __ptext25 0B5F  
                          __ptext17 0AF9                            __ptext42 0A25  
                          __ptext34 0A2B                            __ptext26 0C69  
                          __ptext18 0E41                            __ptext43 0D37  
                          __ptext35 0A28                            __ptext27 0B44  
                          __ptext19 0AC1                            __ptext44 0AD1  
                          __ptext36 0A37                            __ptext28 047E  
                          __ptext37 0F51                            __ptext29 0D8F  
                          __ptext46 0597                            __ptext38 0AE3  
                          __ptext39 0B29                        _SSP1CON2bits 0191  
                          _controls 00CE                 ??_StartWriteRequest 0020  
                     _DRIVE_COMMAND 1002        __end_of_StartIC2Transmission 0A83  
                        _RC1STAbits 011D                  __end_of_myFunction 0089  
                          int$flags 007E           __end_of_StartWriteRequest 0AD1  
       ?_CreateMoveBackwardCommmand 0020               __end_of_SetUpIC2Clock 0A32  
                        _INTCONbits 000B                       _LASER_COMMAND 1000  
                      _UpdateColors 0D8F                       _newI2CMessage 006E  
                          intlevel1 0000                        _DAC1CON0bits 090E  
                      _DAC1CON1bits 090F                  _GetUserDataCommand 00C8  
                _CreateLaserCommand 0B44                         _SSP1BUFbits 018C  
               ?_CreateLaserCommand 0070                       __pstringtext1 1000  
                     __pstringtext2 1002                       __pstringtext3 1004  
            __Umul8_16@multiplicand 0020                  UpdateColors@colors 002B  
                 _ProcessOreCommand 00BA                          _TX1REGbits 011A  
              __end_of_ActivatePump 0AE3                       ??_CreateBreak 0020  
          ??_CreateTurnLeftCommmand 0022                          _TX1STAbits 011E  
              ??_CreateLaserCommand 0020           IncrementColorStage@colors 0020  
                 ?_SetUpColorSensor 0070             _CreateTurnRightCommmand 0BB6  
             __end_of_RepeatedStart 0A6F                  ??_SetUpColorSensor 0026  
              __Umul8_16@multiplier 0028          __end_of_EndIC2Transmission 0A66  
                 __Umul8_16@product 0024                          _SWITCH_MID 00A0  
                        _SWITCH_MAX 00A4                       ??_ColorSensor 002F  
                        _SWITCH_MIN 00A2  



Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Mar 27 14:59:50 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	inittext,global,class=CODE,delta=2
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31     0000                     
    32                           ; Generated 21/06/2023 GMT
    33                           ; 
    34                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F18855 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0000                     	;# 
    67     0001                     	;# 
    68     0002                     	;# 
    69     0003                     	;# 
    70     0004                     	;# 
    71     0005                     	;# 
    72     0006                     	;# 
    73     0007                     	;# 
    74     0008                     	;# 
    75     0009                     	;# 
    76     000A                     	;# 
    77     000B                     	;# 
    78     000C                     	;# 
    79     000D                     	;# 
    80     000E                     	;# 
    81     0010                     	;# 
    82     0011                     	;# 
    83     0012                     	;# 
    84     0013                     	;# 
    85     0016                     	;# 
    86     0017                     	;# 
    87     0018                     	;# 
    88     001C                     	;# 
    89     001C                     	;# 
    90     001D                     	;# 
    91     001D                     	;# 
    92     001E                     	;# 
    93     001F                     	;# 
    94     008C                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     008E                     	;# 
    99     008F                     	;# 
   100     0090                     	;# 
   101     0090                     	;# 
   102     0091                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0095                     	;# 
   106     0096                     	;# 
   107     0097                     	;# 
   108     0098                     	;# 
   109     0099                     	;# 
   110     009A                     	;# 
   111     009B                     	;# 
   112     009C                     	;# 
   113     009D                     	;# 
   114     009E                     	;# 
   115     010C                     	;# 
   116     010D                     	;# 
   117     010E                     	;# 
   118     010E                     	;# 
   119     010F                     	;# 
   120     0110                     	;# 
   121     0110                     	;# 
   122     0111                     	;# 
   123     0112                     	;# 
   124     0112                     	;# 
   125     0113                     	;# 
   126     0114                     	;# 
   127     0114                     	;# 
   128     0115                     	;# 
   129     0116                     	;# 
   130     0116                     	;# 
   131     0117                     	;# 
   132     0119                     	;# 
   133     0119                     	;# 
   134     0119                     	;# 
   135     011A                     	;# 
   136     011A                     	;# 
   137     011A                     	;# 
   138     011B                     	;# 
   139     011B                     	;# 
   140     011B                     	;# 
   141     011B                     	;# 
   142     011B                     	;# 
   143     011C                     	;# 
   144     011C                     	;# 
   145     011C                     	;# 
   146     011D                     	;# 
   147     011D                     	;# 
   148     011D                     	;# 
   149     011E                     	;# 
   150     011E                     	;# 
   151     011E                     	;# 
   152     011F                     	;# 
   153     011F                     	;# 
   154     011F                     	;# 
   155     011F                     	;# 
   156     011F                     	;# 
   157     018C                     	;# 
   158     018D                     	;# 
   159     018E                     	;# 
   160     018F                     	;# 
   161     0190                     	;# 
   162     0191                     	;# 
   163     0192                     	;# 
   164     0196                     	;# 
   165     0197                     	;# 
   166     0198                     	;# 
   167     0199                     	;# 
   168     019A                     	;# 
   169     019B                     	;# 
   170     019C                     	;# 
   171     020C                     	;# 
   172     020C                     	;# 
   173     020D                     	;# 
   174     020E                     	;# 
   175     020F                     	;# 
   176     020F                     	;# 
   177     0210                     	;# 
   178     0210                     	;# 
   179     0211                     	;# 
   180     0211                     	;# 
   181     0212                     	;# 
   182     0212                     	;# 
   183     0213                     	;# 
   184     0214                     	;# 
   185     0215                     	;# 
   186     0215                     	;# 
   187     0216                     	;# 
   188     0216                     	;# 
   189     0217                     	;# 
   190     0217                     	;# 
   191     0218                     	;# 
   192     0218                     	;# 
   193     0219                     	;# 
   194     021A                     	;# 
   195     021B                     	;# 
   196     021B                     	;# 
   197     021C                     	;# 
   198     021C                     	;# 
   199     021D                     	;# 
   200     021D                     	;# 
   201     021E                     	;# 
   202     021F                     	;# 
   203     028C                     	;# 
   204     028C                     	;# 
   205     028D                     	;# 
   206     028D                     	;# 
   207     028E                     	;# 
   208     028F                     	;# 
   209     0290                     	;# 
   210     0290                     	;# 
   211     0291                     	;# 
   212     0292                     	;# 
   213     0292                     	;# 
   214     0293                     	;# 
   215     0293                     	;# 
   216     0294                     	;# 
   217     0295                     	;# 
   218     0296                     	;# 
   219     0296                     	;# 
   220     0297                     	;# 
   221     0298                     	;# 
   222     0298                     	;# 
   223     0299                     	;# 
   224     0299                     	;# 
   225     029A                     	;# 
   226     029B                     	;# 
   227     029C                     	;# 
   228     029C                     	;# 
   229     029D                     	;# 
   230     030C                     	;# 
   231     030C                     	;# 
   232     030D                     	;# 
   233     030E                     	;# 
   234     030F                     	;# 
   235     0310                     	;# 
   236     0310                     	;# 
   237     0311                     	;# 
   238     0312                     	;# 
   239     0313                     	;# 
   240     0314                     	;# 
   241     0314                     	;# 
   242     0315                     	;# 
   243     0316                     	;# 
   244     0317                     	;# 
   245     0318                     	;# 
   246     0318                     	;# 
   247     0319                     	;# 
   248     031A                     	;# 
   249     031B                     	;# 
   250     031C                     	;# 
   251     031C                     	;# 
   252     031D                     	;# 
   253     031E                     	;# 
   254     031F                     	;# 
   255     038C                     	;# 
   256     038C                     	;# 
   257     038D                     	;# 
   258     038E                     	;# 
   259     0390                     	;# 
   260     0390                     	;# 
   261     0391                     	;# 
   262     0392                     	;# 
   263     040C                     	;# 
   264     040D                     	;# 
   265     040E                     	;# 
   266     040F                     	;# 
   267     0410                     	;# 
   268     0411                     	;# 
   269     0416                     	;# 
   270     0416                     	;# 
   271     0417                     	;# 
   272     0418                     	;# 
   273     0418                     	;# 
   274     0419                     	;# 
   275     041A                     	;# 
   276     041A                     	;# 
   277     041B                     	;# 
   278     041C                     	;# 
   279     041C                     	;# 
   280     041D                     	;# 
   281     041E                     	;# 
   282     041F                     	;# 
   283     048C                     	;# 
   284     048C                     	;# 
   285     048D                     	;# 
   286     048E                     	;# 
   287     048F                     	;# 
   288     048F                     	;# 
   289     0490                     	;# 
   290     0491                     	;# 
   291     0492                     	;# 
   292     0492                     	;# 
   293     0493                     	;# 
   294     0494                     	;# 
   295     0495                     	;# 
   296     0495                     	;# 
   297     0496                     	;# 
   298     0497                     	;# 
   299     0498                     	;# 
   300     0499                     	;# 
   301     049A                     	;# 
   302     049B                     	;# 
   303     049C                     	;# 
   304     049D                     	;# 
   305     050C                     	;# 
   306     050C                     	;# 
   307     050D                     	;# 
   308     050E                     	;# 
   309     050F                     	;# 
   310     050F                     	;# 
   311     0510                     	;# 
   312     0511                     	;# 
   313     0512                     	;# 
   314     0512                     	;# 
   315     0513                     	;# 
   316     0514                     	;# 
   317     0515                     	;# 
   318     0515                     	;# 
   319     0516                     	;# 
   320     0517                     	;# 
   321     0518                     	;# 
   322     0519                     	;# 
   323     051A                     	;# 
   324     051B                     	;# 
   325     051C                     	;# 
   326     051D                     	;# 
   327     058C                     	;# 
   328     058C                     	;# 
   329     058D                     	;# 
   330     058E                     	;# 
   331     058F                     	;# 
   332     058F                     	;# 
   333     0590                     	;# 
   334     0591                     	;# 
   335     0592                     	;# 
   336     0593                     	;# 
   337     060C                     	;# 
   338     060D                     	;# 
   339     060E                     	;# 
   340     060F                     	;# 
   341     0610                     	;# 
   342     0611                     	;# 
   343     0612                     	;# 
   344     0613                     	;# 
   345     0614                     	;# 
   346     0616                     	;# 
   347     0617                     	;# 
   348     0618                     	;# 
   349     0619                     	;# 
   350     061A                     	;# 
   351     061B                     	;# 
   352     061C                     	;# 
   353     061D                     	;# 
   354     061E                     	;# 
   355     068C                     	;# 
   356     068D                     	;# 
   357     068E                     	;# 
   358     068F                     	;# 
   359     0690                     	;# 
   360     0691                     	;# 
   361     0692                     	;# 
   362     0693                     	;# 
   363     0694                     	;# 
   364     070C                     	;# 
   365     070D                     	;# 
   366     070E                     	;# 
   367     070F                     	;# 
   368     0710                     	;# 
   369     0711                     	;# 
   370     0712                     	;# 
   371     0713                     	;# 
   372     0714                     	;# 
   373     0716                     	;# 
   374     0717                     	;# 
   375     0718                     	;# 
   376     0719                     	;# 
   377     071A                     	;# 
   378     071B                     	;# 
   379     071C                     	;# 
   380     071D                     	;# 
   381     071E                     	;# 
   382     0796                     	;# 
   383     0797                     	;# 
   384     0798                     	;# 
   385     0799                     	;# 
   386     079A                     	;# 
   387     079B                     	;# 
   388     080C                     	;# 
   389     080D                     	;# 
   390     080E                     	;# 
   391     080F                     	;# 
   392     0810                     	;# 
   393     0811                     	;# 
   394     0812                     	;# 
   395     0813                     	;# 
   396     0814                     	;# 
   397     081A                     	;# 
   398     081B                     	;# 
   399     081C                     	;# 
   400     081D                     	;# 
   401     081E                     	;# 
   402     081F                     	;# 
   403     088C                     	;# 
   404     088D                     	;# 
   405     088E                     	;# 
   406     088F                     	;# 
   407     0890                     	;# 
   408     0891                     	;# 
   409     0892                     	;# 
   410     0893                     	;# 
   411     0895                     	;# 
   412     0896                     	;# 
   413     0897                     	;# 
   414     0898                     	;# 
   415     0899                     	;# 
   416     089A                     	;# 
   417     089B                     	;# 
   418     090C                     	;# 
   419     090E                     	;# 
   420     090F                     	;# 
   421     091F                     	;# 
   422     091F                     	;# 
   423     098F                     	;# 
   424     098F                     	;# 
   425     0990                     	;# 
   426     0991                     	;# 
   427     0992                     	;# 
   428     0993                     	;# 
   429     0994                     	;# 
   430     0995                     	;# 
   431     0996                     	;# 
   432     0997                     	;# 
   433     0E0F                     	;# 
   434     0E10                     	;# 
   435     0E11                     	;# 
   436     0E12                     	;# 
   437     0E13                     	;# 
   438     0E14                     	;# 
   439     0E15                     	;# 
   440     0E16                     	;# 
   441     0E17                     	;# 
   442     0E18                     	;# 
   443     0E19                     	;# 
   444     0E1A                     	;# 
   445     0E1B                     	;# 
   446     0E1C                     	;# 
   447     0E1D                     	;# 
   448     0E1E                     	;# 
   449     0E1F                     	;# 
   450     0E20                     	;# 
   451     0E21                     	;# 
   452     0E22                     	;# 
   453     0E23                     	;# 
   454     0E24                     	;# 
   455     0E25                     	;# 
   456     0E26                     	;# 
   457     0E27                     	;# 
   458     0E28                     	;# 
   459     0E29                     	;# 
   460     0E2A                     	;# 
   461     0E2B                     	;# 
   462     0E2C                     	;# 
   463     0E2D                     	;# 
   464     0E2E                     	;# 
   465     0E2F                     	;# 
   466     0E30                     	;# 
   467     0E31                     	;# 
   468     0E32                     	;# 
   469     0E33                     	;# 
   470     0E34                     	;# 
   471     0E35                     	;# 
   472     0E36                     	;# 
   473     0E37                     	;# 
   474     0E8F                     	;# 
   475     0E90                     	;# 
   476     0E91                     	;# 
   477     0E92                     	;# 
   478     0E93                     	;# 
   479     0E94                     	;# 
   480     0E95                     	;# 
   481     0E96                     	;# 
   482     0E97                     	;# 
   483     0E9C                     	;# 
   484     0E9D                     	;# 
   485     0E9E                     	;# 
   486     0EA1                     	;# 
   487     0EA2                     	;# 
   488     0EA3                     	;# 
   489     0EA4                     	;# 
   490     0EA5                     	;# 
   491     0EA9                     	;# 
   492     0EAA                     	;# 
   493     0EAB                     	;# 
   494     0EAC                     	;# 
   495     0EB1                     	;# 
   496     0EB2                     	;# 
   497     0EB3                     	;# 
   498     0EB8                     	;# 
   499     0EB9                     	;# 
   500     0EBA                     	;# 
   501     0EBB                     	;# 
   502     0EBC                     	;# 
   503     0EBD                     	;# 
   504     0EBE                     	;# 
   505     0EC3                     	;# 
   506     0EC5                     	;# 
   507     0EC6                     	;# 
   508     0EC7                     	;# 
   509     0EC8                     	;# 
   510     0EC9                     	;# 
   511     0ECA                     	;# 
   512     0ECB                     	;# 
   513     0ECC                     	;# 
   514     0F10                     	;# 
   515     0F11                     	;# 
   516     0F12                     	;# 
   517     0F13                     	;# 
   518     0F14                     	;# 
   519     0F15                     	;# 
   520     0F16                     	;# 
   521     0F17                     	;# 
   522     0F18                     	;# 
   523     0F19                     	;# 
   524     0F1A                     	;# 
   525     0F1B                     	;# 
   526     0F1C                     	;# 
   527     0F1D                     	;# 
   528     0F1E                     	;# 
   529     0F1F                     	;# 
   530     0F20                     	;# 
   531     0F21                     	;# 
   532     0F22                     	;# 
   533     0F23                     	;# 
   534     0F24                     	;# 
   535     0F25                     	;# 
   536     0F26                     	;# 
   537     0F27                     	;# 
   538     0F38                     	;# 
   539     0F39                     	;# 
   540     0F3A                     	;# 
   541     0F3B                     	;# 
   542     0F3C                     	;# 
   543     0F3D                     	;# 
   544     0F3E                     	;# 
   545     0F3F                     	;# 
   546     0F40                     	;# 
   547     0F41                     	;# 
   548     0F43                     	;# 
   549     0F44                     	;# 
   550     0F45                     	;# 
   551     0F46                     	;# 
   552     0F47                     	;# 
   553     0F48                     	;# 
   554     0F49                     	;# 
   555     0F4A                     	;# 
   556     0F4B                     	;# 
   557     0F4C                     	;# 
   558     0F4E                     	;# 
   559     0F4F                     	;# 
   560     0F50                     	;# 
   561     0F51                     	;# 
   562     0F52                     	;# 
   563     0F53                     	;# 
   564     0F54                     	;# 
   565     0F55                     	;# 
   566     0F56                     	;# 
   567     0F57                     	;# 
   568     0F65                     	;# 
   569     0F68                     	;# 
   570     0F69                     	;# 
   571     0F6A                     	;# 
   572     0F6B                     	;# 
   573     0FE4                     	;# 
   574     0FE5                     	;# 
   575     0FE6                     	;# 
   576     0FE7                     	;# 
   577     0FE8                     	;# 
   578     0FE9                     	;# 
   579     0FEA                     	;# 
   580     0FEB                     	;# 
   581     0FED                     	;# 
   582     0FEE                     	;# 
   583     0FEF                     	;# 
   584     0000                     	;# 
   585     0001                     	;# 
   586     0002                     	;# 
   587     0003                     	;# 
   588     0004                     	;# 
   589     0005                     	;# 
   590     0006                     	;# 
   591     0007                     	;# 
   592     0008                     	;# 
   593     0009                     	;# 
   594     000A                     	;# 
   595     000B                     	;# 
   596     000C                     	;# 
   597     000D                     	;# 
   598     000E                     	;# 
   599     0010                     	;# 
   600     0011                     	;# 
   601     0012                     	;# 
   602     0013                     	;# 
   603     0016                     	;# 
   604     0017                     	;# 
   605     0018                     	;# 
   606     001C                     	;# 
   607     001C                     	;# 
   608     001D                     	;# 
   609     001D                     	;# 
   610     001E                     	;# 
   611     001F                     	;# 
   612     008C                     	;# 
   613     008C                     	;# 
   614     008D                     	;# 
   615     008E                     	;# 
   616     008E                     	;# 
   617     008F                     	;# 
   618     0090                     	;# 
   619     0090                     	;# 
   620     0091                     	;# 
   621     0093                     	;# 
   622     0094                     	;# 
   623     0095                     	;# 
   624     0096                     	;# 
   625     0097                     	;# 
   626     0098                     	;# 
   627     0099                     	;# 
   628     009A                     	;# 
   629     009B                     	;# 
   630     009C                     	;# 
   631     009D                     	;# 
   632     009E                     	;# 
   633     010C                     	;# 
   634     010D                     	;# 
   635     010E                     	;# 
   636     010E                     	;# 
   637     010F                     	;# 
   638     0110                     	;# 
   639     0110                     	;# 
   640     0111                     	;# 
   641     0112                     	;# 
   642     0112                     	;# 
   643     0113                     	;# 
   644     0114                     	;# 
   645     0114                     	;# 
   646     0115                     	;# 
   647     0116                     	;# 
   648     0116                     	;# 
   649     0117                     	;# 
   650     0119                     	;# 
   651     0119                     	;# 
   652     0119                     	;# 
   653     011A                     	;# 
   654     011A                     	;# 
   655     011A                     	;# 
   656     011B                     	;# 
   657     011B                     	;# 
   658     011B                     	;# 
   659     011B                     	;# 
   660     011B                     	;# 
   661     011C                     	;# 
   662     011C                     	;# 
   663     011C                     	;# 
   664     011D                     	;# 
   665     011D                     	;# 
   666     011D                     	;# 
   667     011E                     	;# 
   668     011E                     	;# 
   669     011E                     	;# 
   670     011F                     	;# 
   671     011F                     	;# 
   672     011F                     	;# 
   673     011F                     	;# 
   674     011F                     	;# 
   675     018C                     	;# 
   676     018D                     	;# 
   677     018E                     	;# 
   678     018F                     	;# 
   679     0190                     	;# 
   680     0191                     	;# 
   681     0192                     	;# 
   682     0196                     	;# 
   683     0197                     	;# 
   684     0198                     	;# 
   685     0199                     	;# 
   686     019A                     	;# 
   687     019B                     	;# 
   688     019C                     	;# 
   689     020C                     	;# 
   690     020C                     	;# 
   691     020D                     	;# 
   692     020E                     	;# 
   693     020F                     	;# 
   694     020F                     	;# 
   695     0210                     	;# 
   696     0210                     	;# 
   697     0211                     	;# 
   698     0211                     	;# 
   699     0212                     	;# 
   700     0212                     	;# 
   701     0213                     	;# 
   702     0214                     	;# 
   703     0215                     	;# 
   704     0215                     	;# 
   705     0216                     	;# 
   706     0216                     	;# 
   707     0217                     	;# 
   708     0217                     	;# 
   709     0218                     	;# 
   710     0218                     	;# 
   711     0219                     	;# 
   712     021A                     	;# 
   713     021B                     	;# 
   714     021B                     	;# 
   715     021C                     	;# 
   716     021C                     	;# 
   717     021D                     	;# 
   718     021D                     	;# 
   719     021E                     	;# 
   720     021F                     	;# 
   721     028C                     	;# 
   722     028C                     	;# 
   723     028D                     	;# 
   724     028D                     	;# 
   725     028E                     	;# 
   726     028F                     	;# 
   727     0290                     	;# 
   728     0290                     	;# 
   729     0291                     	;# 
   730     0292                     	;# 
   731     0292                     	;# 
   732     0293                     	;# 
   733     0293                     	;# 
   734     0294                     	;# 
   735     0295                     	;# 
   736     0296                     	;# 
   737     0296                     	;# 
   738     0297                     	;# 
   739     0298                     	;# 
   740     0298                     	;# 
   741     0299                     	;# 
   742     0299                     	;# 
   743     029A                     	;# 
   744     029B                     	;# 
   745     029C                     	;# 
   746     029C                     	;# 
   747     029D                     	;# 
   748     030C                     	;# 
   749     030C                     	;# 
   750     030D                     	;# 
   751     030E                     	;# 
   752     030F                     	;# 
   753     0310                     	;# 
   754     0310                     	;# 
   755     0311                     	;# 
   756     0312                     	;# 
   757     0313                     	;# 
   758     0314                     	;# 
   759     0314                     	;# 
   760     0315                     	;# 
   761     0316                     	;# 
   762     0317                     	;# 
   763     0318                     	;# 
   764     0318                     	;# 
   765     0319                     	;# 
   766     031A                     	;# 
   767     031B                     	;# 
   768     031C                     	;# 
   769     031C                     	;# 
   770     031D                     	;# 
   771     031E                     	;# 
   772     031F                     	;# 
   773     038C                     	;# 
   774     038C                     	;# 
   775     038D                     	;# 
   776     038E                     	;# 
   777     0390                     	;# 
   778     0390                     	;# 
   779     0391                     	;# 
   780     0392                     	;# 
   781     040C                     	;# 
   782     040D                     	;# 
   783     040E                     	;# 
   784     040F                     	;# 
   785     0410                     	;# 
   786     0411                     	;# 
   787     0416                     	;# 
   788     0416                     	;# 
   789     0417                     	;# 
   790     0418                     	;# 
   791     0418                     	;# 
   792     0419                     	;# 
   793     041A                     	;# 
   794     041A                     	;# 
   795     041B                     	;# 
   796     041C                     	;# 
   797     041C                     	;# 
   798     041D                     	;# 
   799     041E                     	;# 
   800     041F                     	;# 
   801     048C                     	;# 
   802     048C                     	;# 
   803     048D                     	;# 
   804     048E                     	;# 
   805     048F                     	;# 
   806     048F                     	;# 
   807     0490                     	;# 
   808     0491                     	;# 
   809     0492                     	;# 
   810     0492                     	;# 
   811     0493                     	;# 
   812     0494                     	;# 
   813     0495                     	;# 
   814     0495                     	;# 
   815     0496                     	;# 
   816     0497                     	;# 
   817     0498                     	;# 
   818     0499                     	;# 
   819     049A                     	;# 
   820     049B                     	;# 
   821     049C                     	;# 
   822     049D                     	;# 
   823     050C                     	;# 
   824     050C                     	;# 
   825     050D                     	;# 
   826     050E                     	;# 
   827     050F                     	;# 
   828     050F                     	;# 
   829     0510                     	;# 
   830     0511                     	;# 
   831     0512                     	;# 
   832     0512                     	;# 
   833     0513                     	;# 
   834     0514                     	;# 
   835     0515                     	;# 
   836     0515                     	;# 
   837     0516                     	;# 
   838     0517                     	;# 
   839     0518                     	;# 
   840     0519                     	;# 
   841     051A                     	;# 
   842     051B                     	;# 
   843     051C                     	;# 
   844     051D                     	;# 
   845     058C                     	;# 
   846     058C                     	;# 
   847     058D                     	;# 
   848     058E                     	;# 
   849     058F                     	;# 
   850     058F                     	;# 
   851     0590                     	;# 
   852     0591                     	;# 
   853     0592                     	;# 
   854     0593                     	;# 
   855     060C                     	;# 
   856     060D                     	;# 
   857     060E                     	;# 
   858     060F                     	;# 
   859     0610                     	;# 
   860     0611                     	;# 
   861     0612                     	;# 
   862     0613                     	;# 
   863     0614                     	;# 
   864     0616                     	;# 
   865     0617                     	;# 
   866     0618                     	;# 
   867     0619                     	;# 
   868     061A                     	;# 
   869     061B                     	;# 
   870     061C                     	;# 
   871     061D                     	;# 
   872     061E                     	;# 
   873     068C                     	;# 
   874     068D                     	;# 
   875     068E                     	;# 
   876     068F                     	;# 
   877     0690                     	;# 
   878     0691                     	;# 
   879     0692                     	;# 
   880     0693                     	;# 
   881     0694                     	;# 
   882     070C                     	;# 
   883     070D                     	;# 
   884     070E                     	;# 
   885     070F                     	;# 
   886     0710                     	;# 
   887     0711                     	;# 
   888     0712                     	;# 
   889     0713                     	;# 
   890     0714                     	;# 
   891     0716                     	;# 
   892     0717                     	;# 
   893     0718                     	;# 
   894     0719                     	;# 
   895     071A                     	;# 
   896     071B                     	;# 
   897     071C                     	;# 
   898     071D                     	;# 
   899     071E                     	;# 
   900     0796                     	;# 
   901     0797                     	;# 
   902     0798                     	;# 
   903     0799                     	;# 
   904     079A                     	;# 
   905     079B                     	;# 
   906     080C                     	;# 
   907     080D                     	;# 
   908     080E                     	;# 
   909     080F                     	;# 
   910     0810                     	;# 
   911     0811                     	;# 
   912     0812                     	;# 
   913     0813                     	;# 
   914     0814                     	;# 
   915     081A                     	;# 
   916     081B                     	;# 
   917     081C                     	;# 
   918     081D                     	;# 
   919     081E                     	;# 
   920     081F                     	;# 
   921     088C                     	;# 
   922     088D                     	;# 
   923     088E                     	;# 
   924     088F                     	;# 
   925     0890                     	;# 
   926     0891                     	;# 
   927     0892                     	;# 
   928     0893                     	;# 
   929     0895                     	;# 
   930     0896                     	;# 
   931     0897                     	;# 
   932     0898                     	;# 
   933     0899                     	;# 
   934     089A                     	;# 
   935     089B                     	;# 
   936     090C                     	;# 
   937     090E                     	;# 
   938     090F                     	;# 
   939     091F                     	;# 
   940     091F                     	;# 
   941     098F                     	;# 
   942     098F                     	;# 
   943     0990                     	;# 
   944     0991                     	;# 
   945     0992                     	;# 
   946     0993                     	;# 
   947     0994                     	;# 
   948     0995                     	;# 
   949     0996                     	;# 
   950     0997                     	;# 
   951     0E0F                     	;# 
   952     0E10                     	;# 
   953     0E11                     	;# 
   954     0E12                     	;# 
   955     0E13                     	;# 
   956     0E14                     	;# 
   957     0E15                     	;# 
   958     0E16                     	;# 
   959     0E17                     	;# 
   960     0E18                     	;# 
   961     0E19                     	;# 
   962     0E1A                     	;# 
   963     0E1B                     	;# 
   964     0E1C                     	;# 
   965     0E1D                     	;# 
   966     0E1E                     	;# 
   967     0E1F                     	;# 
   968     0E20                     	;# 
   969     0E21                     	;# 
   970     0E22                     	;# 
   971     0E23                     	;# 
   972     0E24                     	;# 
   973     0E25                     	;# 
   974     0E26                     	;# 
   975     0E27                     	;# 
   976     0E28                     	;# 
   977     0E29                     	;# 
   978     0E2A                     	;# 
   979     0E2B                     	;# 
   980     0E2C                     	;# 
   981     0E2D                     	;# 
   982     0E2E                     	;# 
   983     0E2F                     	;# 
   984     0E30                     	;# 
   985     0E31                     	;# 
   986     0E32                     	;# 
   987     0E33                     	;# 
   988     0E34                     	;# 
   989     0E35                     	;# 
   990     0E36                     	;# 
   991     0E37                     	;# 
   992     0E8F                     	;# 
   993     0E90                     	;# 
   994     0E91                     	;# 
   995     0E92                     	;# 
   996     0E93                     	;# 
   997     0E94                     	;# 
   998     0E95                     	;# 
   999     0E96                     	;# 
  1000     0E97                     	;# 
  1001     0E9C                     	;# 
  1002     0E9D                     	;# 
  1003     0E9E                     	;# 
  1004     0EA1                     	;# 
  1005     0EA2                     	;# 
  1006     0EA3                     	;# 
  1007     0EA4                     	;# 
  1008     0EA5                     	;# 
  1009     0EA9                     	;# 
  1010     0EAA                     	;# 
  1011     0EAB                     	;# 
  1012     0EAC                     	;# 
  1013     0EB1                     	;# 
  1014     0EB2                     	;# 
  1015     0EB3                     	;# 
  1016     0EB8                     	;# 
  1017     0EB9                     	;# 
  1018     0EBA                     	;# 
  1019     0EBB                     	;# 
  1020     0EBC                     	;# 
  1021     0EBD                     	;# 
  1022     0EBE                     	;# 
  1023     0EC3                     	;# 
  1024     0EC5                     	;# 
  1025     0EC6                     	;# 
  1026     0EC7                     	;# 
  1027     0EC8                     	;# 
  1028     0EC9                     	;# 
  1029     0ECA                     	;# 
  1030     0ECB                     	;# 
  1031     0ECC                     	;# 
  1032     0F10                     	;# 
  1033     0F11                     	;# 
  1034     0F12                     	;# 
  1035     0F13                     	;# 
  1036     0F14                     	;# 
  1037     0F15                     	;# 
  1038     0F16                     	;# 
  1039     0F17                     	;# 
  1040     0F18                     	;# 
  1041     0F19                     	;# 
  1042     0F1A                     	;# 
  1043     0F1B                     	;# 
  1044     0F1C                     	;# 
  1045     0F1D                     	;# 
  1046     0F1E                     	;# 
  1047     0F1F                     	;# 
  1048     0F20                     	;# 
  1049     0F21                     	;# 
  1050     0F22                     	;# 
  1051     0F23                     	;# 
  1052     0F24                     	;# 
  1053     0F25                     	;# 
  1054     0F26                     	;# 
  1055     0F27                     	;# 
  1056     0F38                     	;# 
  1057     0F39                     	;# 
  1058     0F3A                     	;# 
  1059     0F3B                     	;# 
  1060     0F3C                     	;# 
  1061     0F3D                     	;# 
  1062     0F3E                     	;# 
  1063     0F3F                     	;# 
  1064     0F40                     	;# 
  1065     0F41                     	;# 
  1066     0F43                     	;# 
  1067     0F44                     	;# 
  1068     0F45                     	;# 
  1069     0F46                     	;# 
  1070     0F47                     	;# 
  1071     0F48                     	;# 
  1072     0F49                     	;# 
  1073     0F4A                     	;# 
  1074     0F4B                     	;# 
  1075     0F4C                     	;# 
  1076     0F4E                     	;# 
  1077     0F4F                     	;# 
  1078     0F50                     	;# 
  1079     0F51                     	;# 
  1080     0F52                     	;# 
  1081     0F53                     	;# 
  1082     0F54                     	;# 
  1083     0F55                     	;# 
  1084     0F56                     	;# 
  1085     0F57                     	;# 
  1086     0F65                     	;# 
  1087     0F68                     	;# 
  1088     0F69                     	;# 
  1089     0F6A                     	;# 
  1090     0F6B                     	;# 
  1091     0FE4                     	;# 
  1092     0FE5                     	;# 
  1093     0FE6                     	;# 
  1094     0FE7                     	;# 
  1095     0FE8                     	;# 
  1096     0FE9                     	;# 
  1097     0FEA                     	;# 
  1098     0FEB                     	;# 
  1099     0FED                     	;# 
  1100     0FEE                     	;# 
  1101     0FEF                     	;# 
  1102                           
  1103                           	psect	idataCOMMON
  1104     0434                     __pidataCOMMON:
  1105                           
  1106                           ;initializer for _CONTROL_OUTPUT
  1107     0434  3401               	retlw	1
  1108     0435  3400               	retlw	0
  1109                           
  1110                           	psect	idataBANK0
  1111     033F                     __pidataBANK0:
  1112                           
  1113                           ;initializer for _EnableLaserScopeCommand
  1114     033F  34FE               	retlw	254
  1115     0340  3419               	retlw	25
  1116     0341  3401               	retlw	1
  1117     0342  3408               	retlw	8
  1118     0343  3401               	retlw	1
  1119     0344  3400               	retlw	0
  1120     0345  3401               	retlw	1
  1121                           
  1122                           ;initializer for _SWITCH_MIN
  1123     0346  344C               	retlw	76
  1124     0347  3404               	retlw	4
  1125                           
  1126                           ;initializer for _SWITCH_MAX
  1127     0348  346C               	retlw	108
  1128     0349  3407               	retlw	7
  1129                           
  1130                           ;initializer for _TurnRightCommand
  1131     034A  34FE               	retlw	254
  1132     034B  3419               	retlw	25
  1133     034C  3401               	retlw	1
  1134     034D  3406               	retlw	6
  1135     034E  3404               	retlw	4
  1136     034F  3400               	retlw	0
  1137     0350  3402               	retlw	2
  1138     0351  3432               	retlw	50
  1139     0352  3401               	retlw	1
  1140     0353  3432               	retlw	50
  1141                           
  1142                           ;initializer for _TurnLeftCommand
  1143     0354  34FE               	retlw	254
  1144     0355  3419               	retlw	25
  1145     0356  3401               	retlw	1
  1146     0357  3406               	retlw	6
  1147     0358  3404               	retlw	4
  1148     0359  3400               	retlw	0
  1149     035A  3401               	retlw	1
  1150     035B  3432               	retlw	50
  1151     035C  3402               	retlw	2
  1152     035D  3432               	retlw	50
  1153                           
  1154                           ;initializer for _GetUserDataCommand
  1155     035E  34FE               	retlw	254
  1156     035F  3419               	retlw	25
  1157     0360  3401               	retlw	1
  1158     0361  3405               	retlw	5
  1159     0362  3400               	retlw	0
  1160     0363  3400               	retlw	0
  1161                           
  1162                           	psect	idataBANK1
  1163     03A2                     __pidataBANK1:
  1164                           
  1165                           ;initializer for _Break
  1166     03A2  34FE               	retlw	254
  1167     03A3  3419               	retlw	25
  1168     03A4  3401               	retlw	1
  1169     03A5  3406               	retlw	6
  1170     03A6  3404               	retlw	4
  1171     03A7  3400               	retlw	0
  1172     03A8  3400               	retlw	0
  1173     03A9  3400               	retlw	0
  1174     03AA  3400               	retlw	0
  1175     03AB  3400               	retlw	0
  1176                           
  1177                           ;initializer for _MoveBackwardCommand
  1178     03AC  34FE               	retlw	254
  1179     03AD  3419               	retlw	25
  1180     03AE  3401               	retlw	1
  1181     03AF  3406               	retlw	6
  1182     03B0  3404               	retlw	4
  1183     03B1  3400               	retlw	0
  1184     03B2  3402               	retlw	2
  1185     03B3  3432               	retlw	50
  1186     03B4  3402               	retlw	2
  1187     03B5  3432               	retlw	50
  1188                           
  1189                           ;initializer for _MoveForwardCommand
  1190     03B6  34FE               	retlw	254
  1191     03B7  3419               	retlw	25
  1192     03B8  3401               	retlw	1
  1193     03B9  3406               	retlw	6
  1194     03BA  3404               	retlw	4
  1195     03BB  3400               	retlw	0
  1196     03BC  3401               	retlw	1
  1197     03BD  3432               	retlw	50
  1198     03BE  3401               	retlw	1
  1199     03BF  3432               	retlw	50
  1200                           
  1201                           	psect	stringtext1
  1202     0436                     __pstringtext1:
  1203     0436                     _CONTROL_INPUT:
  1204     0436  3401               	retlw	1
  1205     0437  3400               	retlw	0
  1206     0438                     __end_of_CONTROL_INPUT:
  1207     000B                     _INTCONbits	set	11
  1208     0013                     _TRISCbits	set	19
  1209     0016                     _LATAbits	set	22
  1210     0011                     _TRISAbits	set	17
  1211     011A                     _TX1REGbits	set	282
  1212     0119                     _RCREG	set	281
  1213     011D                     _RC1STAbits	set	285
  1214     011B                     _SP1BRGLbits	set	283
  1215     011E                     _TX1STAbits	set	286
  1216     011F                     _BAUD1CONbits	set	287
  1217     070F                     _PIR3bits	set	1807
  1218     0719                     _PIE3bits	set	1817
  1219     0ECB                     _RXPPSbits	set	3787
  1220     0F4E                     _ANSELCbits	set	3918
  1221     0F25                     _RC5PPS	set	3877
  1222     0F38                     _ANSELAbits	set	3896
  1223                           
  1224                           	psect	cinit
  1225     007F                     start_initialization:	
  1226                           ; #config settings
  1227                           
  1228     007F                     __initialization:
  1229                           
  1230                           ; Initialize objects allocated to COMMON
  1231     007F  3184  2434  3180   	fcall	__pidataCOMMON	;fetch initializer
  1232     0082  00FB               	movwf	__pdataCOMMON& (0+127)
  1233     0083  3184  2435  3180   	fcall	__pidataCOMMON+1	;fetch initializer
  1234     0086  00FC               	movwf	(__pdataCOMMON+1)& (0+127)
  1235                           
  1236                           ; Initialize objects allocated to BANK0
  1237     0087  303F               	movlw	low __pidataBANK0
  1238     0088  0084               	movwf	4
  1239     0089  3083               	movlw	(high __pidataBANK0)| (0+128)
  1240     008A  0085               	movwf	5
  1241     008B  3048               	movlw	low __pdataBANK0
  1242     008C  0086               	movwf	6
  1243     008D  3000               	movlw	high __pdataBANK0
  1244     008E  0087               	movwf	7
  1245     008F  3025               	movlw	37
  1246     0090  3184  2428  3180   	fcall	init_ram
  1247                           
  1248                           ; Initialize objects allocated to BANK1
  1249     0093  30A2               	movlw	low __pidataBANK1
  1250     0094  0084               	movwf	4
  1251     0095  3083               	movlw	(high __pidataBANK1)| (0+128)
  1252     0096  0085               	movwf	5
  1253     0097  30C4               	movlw	low __pdataBANK1
  1254     0098  0086               	movwf	6
  1255     0099  3000               	movlw	high __pdataBANK1
  1256     009A  0087               	movwf	7
  1257     009B  301E               	movlw	30
  1258     009C  3184  2428  3180   	fcall	init_ram
  1259                           
  1260                           ; Clear objects allocated to COMMON
  1261     009F  01F9               	clrf	__pbssCOMMON& (0+127)
  1262     00A0  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  1263                           
  1264                           ; Clear objects allocated to BANK0
  1265     00A1  3020               	movlw	low __pbssBANK0
  1266     00A2  0084               	movwf	4
  1267     00A3  3000               	movlw	high __pbssBANK0
  1268     00A4  0085               	movwf	5
  1269     00A5  3028               	movlw	40
  1270     00A6  3184  242E  3180   	fcall	clear_ram0
  1271                           
  1272                           ; Clear objects allocated to BANK1
  1273     00A9  30A0               	movlw	low __pbssBANK1
  1274     00AA  0084               	movwf	4
  1275     00AB  3000               	movlw	high __pbssBANK1
  1276     00AC  0085               	movwf	5
  1277     00AD  3024               	movlw	36
  1278     00AE  3184  242E  3180   	fcall	clear_ram0
  1279     00B1                     end_of_initialization:	
  1280                           ;End of C runtime variable initialization code
  1281                           
  1282     00B1                     __end_of__initialization:
  1283     00B1  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1284     00B2  0020               	movlb	0
  1285     00B3  3182  2ACB         	ljmp	_main	;jump to C main() function
  1286                           
  1287                           	psect	bssCOMMON
  1288     0079                     __pbssCOMMON:
  1289     0079                     _currentInput:
  1290     0079                     	ds	2
  1291                           
  1292                           	psect	dataCOMMON
  1293     007B                     __pdataCOMMON:
  1294     007B                     _CONTROL_OUTPUT:
  1295     007B                     	ds	2
  1296                           
  1297                           	psect	bssBANK0
  1298     0020                     __pbssBANK0:
  1299     0020                     _controls:
  1300     0020                     	ds	22
  1301     0036                     _currentCommand:
  1302     0036                     	ds	14
  1303     0044                     _commandIt:
  1304     0044                     	ds	2
  1305     0046                     _inputStage:
  1306     0046                     	ds	2
  1307                           
  1308                           	psect	dataBANK0
  1309     0048                     __pdataBANK0:
  1310     0048                     _EnableLaserScopeCommand:
  1311     0048                     	ds	7
  1312     004F                     _SWITCH_MIN:
  1313     004F                     	ds	2
  1314     0051                     _SWITCH_MAX:
  1315     0051                     	ds	2
  1316     0053                     _TurnRightCommand:
  1317     0053                     	ds	10
  1318     005D                     _TurnLeftCommand:
  1319     005D                     	ds	10
  1320     0067                     _GetUserDataCommand:
  1321     0067                     	ds	6
  1322                           
  1323                           	psect	bssBANK1
  1324     00A0                     __pbssBANK1:
  1325     00A0                     _Controls:
  1326     00A0                     	ds	22
  1327     00B6                     _Command:
  1328     00B6                     	ds	14
  1329                           
  1330                           	psect	dataBANK1
  1331     00C4                     __pdataBANK1:
  1332     00C4                     _Break:
  1333     00C4                     	ds	10
  1334     00CE                     _MoveBackwardCommand:
  1335     00CE                     	ds	10
  1336     00D8                     _MoveForwardCommand:
  1337     00D8                     	ds	10
  1338                           
  1339                           	psect	inittext
  1340     0428                     init_ram:
  1341     0428  00FE               	movwf	btemp
  1342     0429                     initloop:
  1343     0429  0012               	moviw fsr0++
  1344     042A  001E               	movwi fsr1++
  1345     042B  0BFE               	decfsz	btemp,f
  1346     042C  2C29               	goto	initloop
  1347     042D  3400               	retlw	0
  1348                           
  1349                           	psect	clrtext
  1350     042E                     clear_ram0:	
  1351                           ;	Called with FSR0 containing the base address, and
  1352                           ;	WREG with the size to clear
  1353                           
  1354     042E  0064               	clrwdt	;clear the watchdog before getting into this loop
  1355     042F                     clrloop0:
  1356     042F  0180               	clrf	0	;clear RAM location pointed to by FSR
  1357     0430  3101               	addfsr 0,1
  1358     0431  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1359     0432  2C2F               	goto	clrloop0	;have we reached the end yet?
  1360     0433  3400               	retlw	0	;all done for this memory range, return
  1361                           
  1362                           	psect	cstackCOMMON
  1363     0070                     __pcstackCOMMON:
  1364     0070                     ?_CreateControlsCommand:
  1365     0070                     ?_drive:	
  1366                           ; 1 bytes @ 0x0
  1367                           
  1368     0070                     ?_CreateBreak:	
  1369                           ; 1 bytes @ 0x0
  1370                           
  1371     0070                     ?_main:	
  1372                           ; 1 bytes @ 0x0
  1373                           
  1374     0070                     ?_GetControllerInput:	
  1375                           ; 1 bytes @ 0x0
  1376                           
  1377     0070                     ?_myFunction:	
  1378                           ; 1 bytes @ 0x0
  1379                           
  1380     0070                     GetControllerInput@input:	
  1381                           ; 1 bytes @ 0x0
  1382                           
  1383                           
  1384                           ; 2 bytes @ 0x0
  1385     0070                     	ds	2
  1386     0072                     ??_GetControllerInput:
  1387                           
  1388                           ; 1 bytes @ 0x2
  1389     0072                     	ds	3
  1390     0075                     ??_myFunction:
  1391                           
  1392                           ; 1 bytes @ 0x5
  1393     0075                     	ds	2
  1394     0077                     myFunction@input:
  1395                           
  1396                           ; 2 bytes @ 0x7
  1397     0077                     	ds	2
  1398                           
  1399                           	psect	cstackBANK0
  1400     006D                     __pcstackBANK0:
  1401     006D                     ??_CreateControlsCommand:
  1402     006D                     ?_CreateTurnRightCommmand:	
  1403                           ; 1 bytes @ 0x0
  1404                           
  1405     006D                     ?_CreateTurnLeftCommmand:	
  1406                           ; 1 bytes @ 0x0
  1407                           
  1408     006D                     ?_CreateMoveForwardCommmand:	
  1409                           ; 1 bytes @ 0x0
  1410                           
  1411     006D                     ?_CreateMoveBackwardCommmand:	
  1412                           ; 1 bytes @ 0x0
  1413                           
  1414     006D                     ??_CreateBreak:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417     006D                     CreateTurnRightCommmand@pwm:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420     006D                     CreateTurnLeftCommmand@pwm:	
  1421                           ; 2 bytes @ 0x0
  1422                           
  1423     006D                     CreateMoveForwardCommmand@pwm:	
  1424                           ; 2 bytes @ 0x0
  1425                           
  1426     006D                     CreateMoveBackwardCommmand@pwm:	
  1427                           ; 2 bytes @ 0x0
  1428                           
  1429                           
  1430                           ; 2 bytes @ 0x0
  1431     006D                     	ds	2
  1432     006F                     ??_drive:
  1433     006F                     ??_CreateTurnRightCommmand:	
  1434                           ; 1 bytes @ 0x2
  1435                           
  1436     006F                     ??_CreateTurnLeftCommmand:	
  1437                           ; 1 bytes @ 0x2
  1438                           
  1439     006F                     ??_CreateMoveForwardCommmand:	
  1440                           ; 1 bytes @ 0x2
  1441                           
  1442     006F                     ??_CreateMoveBackwardCommmand:	
  1443                           ; 1 bytes @ 0x2
  1444                           
  1445                           
  1446                           ; 1 bytes @ 0x2
  1447     006F                     	ds	1
  1448     0070                     ??_main:
  1449                           
  1450                           	psect	maintext
  1451     02CB                     __pmaintext:	
  1452                           ; 1 bytes @ 0x3
  1453 ;;
  1454 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1455 ;;
  1456 ;; *************** function _main *****************
  1457 ;; Defined at:
  1458 ;;		line 102 in file "motorMain.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;		None
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;		None
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  1    wreg      void 
  1465 ;; Registers used:
  1466 ;;		wreg, status,2, status,0, pclath, cstack
  1467 ;; Tracked objects:
  1468 ;;		On entry : B1F/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1476 ;;Total ram usage:        0 bytes
  1477 ;; Hardware stack levels required when called: 4
  1478 ;; This function calls:
  1479 ;;		_CreateControlsCommand
  1480 ;;		_drive
  1481 ;; This function is called by:
  1482 ;;		Startup code after reset
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486     02CB                     _main:	
  1487                           ;psect for function _main
  1488                           
  1489     02CB                     l1245:	
  1490                           ;incstack = 0
  1491                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1492                           
  1493                           
  1494                           ;motorMain.c: 104:    TRISAbits.TRISA5 = 1;
  1495     02CB  0020               	movlb	0	; select bank0
  1496     02CC  1691               	bsf	17,5	;volatile
  1497                           
  1498                           ;motorMain.c: 105:     ANSELAbits.ANSA5 = 0;
  1499     02CD  003E               	movlb	30	; select bank30
  1500     02CE  12B8               	bcf	56,5	;volatile
  1501                           
  1502                           ;motorMain.c: 107:     TRISAbits.TRISA0 = 0;
  1503     02CF  0020               	movlb	0	; select bank0
  1504     02D0  1011               	bcf	17,0	;volatile
  1505                           
  1506                           ;motorMain.c: 108:     TRISAbits.TRISA1 = 0;
  1507     02D1  1091               	bcf	17,1	;volatile
  1508                           
  1509                           ;motorMain.c: 109:     TRISAbits.TRISA2 = 0;
  1510     02D2  1111               	bcf	17,2	;volatile
  1511                           
  1512                           ;motorMain.c: 110:     TRISAbits.TRISA3 = 0;
  1513     02D3  1191               	bcf	17,3	;volatile
  1514                           
  1515                           ;motorMain.c: 113:     LATAbits.LATA0 = 0;
  1516     02D4  1016               	bcf	22,0	;volatile
  1517                           
  1518                           ;motorMain.c: 114:     LATAbits.LATA1 = 0;
  1519     02D5  1096               	bcf	22,1	;volatile
  1520                           
  1521                           ;motorMain.c: 115:     LATAbits.LATA2 = 0;
  1522     02D6  1116               	bcf	22,2	;volatile
  1523                           
  1524                           ;motorMain.c: 116:     LATAbits.LATA3 = 0;
  1525     02D7  1196               	bcf	22,3	;volatile
  1526                           
  1527                           ;motorMain.c: 119:     BAUD1CONbits.BRG16=1;
  1528     02D8  0022               	movlb	2	; select bank2
  1529     02D9  159F               	bsf	31,3	;volatile
  1530                           
  1531                           ;motorMain.c: 121:     TX1STAbits.BRGH = 0x1;
  1532     02DA  151E               	bsf	30,2	;volatile
  1533     02DB                     l1247:
  1534                           
  1535                           ;motorMain.c: 125:     RC5PPS = 0x10;
  1536     02DB  3010               	movlw	16
  1537     02DC  003E               	movlb	30	; select bank30
  1538     02DD  00A5               	movwf	37	;volatile
  1539     02DE                     l1249:
  1540                           
  1541                           ;motorMain.c: 126:     TRISCbits.TRISC5 = 0;
  1542     02DE  0020               	movlb	0	; select bank0
  1543     02DF  1293               	bcf	19,5	;volatile
  1544     02E0                     l1251:
  1545                           
  1546                           ;motorMain.c: 128:     RXPPSbits.RXPPS = 0x16;
  1547     02E0  003D               	movlb	29	; select bank29
  1548     02E1  084B               	movf	75,w	;volatile
  1549     02E2  39E0               	andlw	-32
  1550     02E3  3816               	iorlw	22
  1551     02E4  00CB               	movwf	75	;volatile
  1552     02E5                     l1253:
  1553                           
  1554                           ;motorMain.c: 129:     TRISCbits.TRISC6 = 1;
  1555     02E5  0020               	movlb	0	; select bank0
  1556     02E6  1713               	bsf	19,6	;volatile
  1557     02E7                     l1255:
  1558                           
  1559                           ;motorMain.c: 130:     ANSELCbits.ANSC6 = 0;
  1560     02E7  003E               	movlb	30	; select bank30
  1561     02E8  134E               	bcf	78,6	;volatile
  1562     02E9                     l1257:
  1563                           
  1564                           ;motorMain.c: 133:     SP1BRGLbits.SP1BRGL = 68;
  1565     02E9  3044               	movlw	68
  1566     02EA  0022               	movlb	2	; select bank2
  1567     02EB  009B               	movwf	27	;volatile
  1568     02EC                     l1259:
  1569                           
  1570                           ;motorMain.c: 135:     CreateControlsCommand();
  1571     02EC  3183  23F6  3182   	fcall	_CreateControlsCommand
  1572     02EF                     l1261:
  1573                           
  1574                           ;motorMain.c: 138:     RC1STAbits.SPEN = 1;
  1575     02EF  0022               	movlb	2	; select bank2
  1576     02F0  179D               	bsf	29,7	;volatile
  1577     02F1                     l1263:
  1578                           
  1579                           ;motorMain.c: 139:     TX1STAbits.TXEN =1;
  1580     02F1  169E               	bsf	30,5	;volatile
  1581     02F2                     l1265:
  1582                           
  1583                           ;motorMain.c: 140:     TX1STAbits.SYNC=0;
  1584     02F2  121E               	bcf	30,4	;volatile
  1585     02F3                     l1267:
  1586                           
  1587                           ;motorMain.c: 142:     RC1STAbits.CREN = 1;
  1588     02F3  161D               	bsf	29,4	;volatile
  1589     02F4                     l1269:
  1590                           
  1591                           ;motorMain.c: 145:     INTCONbits.GIE = 1;
  1592     02F4  178B               	bsf	11,7	;volatile
  1593     02F5                     l1271:
  1594                           
  1595                           ;motorMain.c: 146:     INTCONbits.PEIE = 1;
  1596     02F5  170B               	bsf	11,6	;volatile
  1597     02F6                     l1273:
  1598                           
  1599                           ;motorMain.c: 147:     PIE3bits.RCIE = 1;
  1600     02F6  002E               	movlb	14	; select bank14
  1601     02F7  1699               	bsf	25,5	;volatile
  1602     02F8                     l1275:
  1603                           
  1604                           ;motorMain.c: 148:     PIE3bits.TXIE = 1;
  1605     02F8  1619               	bsf	25,4	;volatile
  1606     02F9                     l1277:
  1607                           
  1608                           ;motorMain.c: 152:         if(controls.switchA < SWITCH_MIN){
  1609     02F9  3004               	movlw	4
  1610     02FA  0020               	movlb	0	; select bank0
  1611     02FB  0229               	subwf	_controls+9,w
  1612     02FC  304C               	movlw	76
  1613     02FD  1903               	skipnz
  1614     02FE  0228               	subwf	_controls+8,w
  1615     02FF  1803               	skipnc
  1616     0300  2B02               	goto	u471
  1617     0301  2B03               	goto	u470
  1618     0302                     u471:
  1619     0302  2B05               	goto	l88
  1620     0303                     u470:
  1621     0303                     l1279:
  1622                           
  1623                           ;motorMain.c: 153:             LATAbits.LATA0 = 1;
  1624     0303  1416               	bsf	22,0	;volatile
  1625                           
  1626                           ;motorMain.c: 154:         }
  1627     0304  2B06               	goto	l1281
  1628     0305                     l88:	
  1629                           ;motorMain.c: 155:         else{
  1630                           
  1631                           
  1632                           ;motorMain.c: 156:             LATAbits.LATA0 = 0;
  1633     0305  1016               	bcf	22,0	;volatile
  1634     0306                     l1281:
  1635                           
  1636                           ;motorMain.c: 158:         if(controls.switchB <= SWITCH_MIN){
  1637     0306  3004               	movlw	4
  1638     0307  022B               	subwf	_controls+11,w
  1639     0308  304D               	movlw	77
  1640     0309  1903               	skipnz
  1641     030A  022A               	subwf	_controls+10,w
  1642     030B  1803               	skipnc
  1643     030C  2B0E               	goto	u481
  1644     030D  2B0F               	goto	u480
  1645     030E                     u481:
  1646     030E  2B11               	goto	l90
  1647     030F                     u480:
  1648     030F                     l1283:
  1649                           
  1650                           ;motorMain.c: 159:             LATAbits.LATA1 = 1;
  1651     030F  1496               	bsf	22,1	;volatile
  1652                           
  1653                           ;motorMain.c: 160:         }
  1654     0310  2B12               	goto	l1285
  1655     0311                     l90:	
  1656                           ;motorMain.c: 161:         else{
  1657                           
  1658                           
  1659                           ;motorMain.c: 162:             LATAbits.LATA1 = 0;
  1660     0311  1096               	bcf	22,1	;volatile
  1661     0312                     l1285:
  1662                           
  1663                           ;motorMain.c: 164:         if(controls.switchC <= SWITCH_MIN){
  1664     0312  3004               	movlw	4
  1665     0313  022D               	subwf	_controls+13,w
  1666     0314  304D               	movlw	77
  1667     0315  1903               	skipnz
  1668     0316  022C               	subwf	_controls+12,w
  1669     0317  1803               	skipnc
  1670     0318  2B1A               	goto	u491
  1671     0319  2B1B               	goto	u490
  1672     031A                     u491:
  1673     031A  2B1D               	goto	l92
  1674     031B                     u490:
  1675     031B                     l1287:
  1676                           
  1677                           ;motorMain.c: 165:             LATAbits.LATA2 = 1;
  1678     031B  1516               	bsf	22,2	;volatile
  1679                           
  1680                           ;motorMain.c: 166:         }
  1681     031C  2B1E               	goto	l1289
  1682     031D                     l92:	
  1683                           ;motorMain.c: 167:         else{
  1684                           
  1685                           
  1686                           ;motorMain.c: 168:             LATAbits.LATA2 = 0;
  1687     031D  1116               	bcf	22,2	;volatile
  1688     031E                     l1289:
  1689                           
  1690                           ;motorMain.c: 170:         if(controls.switchD <= SWITCH_MIN){
  1691     031E  3004               	movlw	4
  1692     031F  022F               	subwf	_controls+15,w
  1693     0320  304D               	movlw	77
  1694     0321  1903               	skipnz
  1695     0322  022E               	subwf	_controls+14,w
  1696     0323  1803               	skipnc
  1697     0324  2B26               	goto	u501
  1698     0325  2B27               	goto	u500
  1699     0326                     u501:
  1700     0326  2B29               	goto	l94
  1701     0327                     u500:
  1702     0327                     l1291:
  1703                           
  1704                           ;motorMain.c: 171:             LATAbits.LATA3 = 1;
  1705     0327  1596               	bsf	22,3	;volatile
  1706                           
  1707                           ;motorMain.c: 172:         }
  1708     0328  2B2A               	goto	l1293
  1709     0329                     l94:	
  1710                           ;motorMain.c: 173:         else{
  1711                           
  1712                           
  1713                           ;motorMain.c: 174:             LATAbits.LATA3 = 0;
  1714     0329  1196               	bcf	22,3	;volatile
  1715     032A                     l1293:
  1716                           
  1717                           ;motorMain.c: 176:         if(currentCommand.done){
  1718     032A  0843               	movf	_currentCommand+13,w
  1719     032B  1903               	btfsc	3,2
  1720     032C  2B2E               	goto	u511
  1721     032D  2B2F               	goto	u510
  1722     032E                     u511:
  1723     032E  2AF9               	goto	l1277
  1724     032F                     u510:
  1725     032F                     l1295:
  1726                           
  1727                           ;motorMain.c: 177:             if(currentCommand.sendId == CONTROL_INPUT){
  1728     032F  033A               	decf	_currentCommand+4,w
  1729     0330  043B               	iorwf	_currentCommand+5,w
  1730     0331  1D03               	btfss	3,2
  1731     0332  2B34               	goto	u521
  1732     0333  2B35               	goto	u520
  1733     0334                     u521:
  1734     0334  2B39               	goto	l1299
  1735     0335                     u520:
  1736     0335                     l1297:
  1737                           
  1738                           ;motorMain.c: 178:                 drive();
  1739     0335  3180  20B5  3182   	fcall	_drive
  1740                           
  1741                           ;motorMain.c: 179:             }
  1742     0338  2AF9               	goto	l1277
  1743     0339                     l1299:
  1744                           
  1745                           ;motorMain.c: 181:                 CreateControlsCommand();
  1746     0339  3183  23F6  3182   	fcall	_CreateControlsCommand
  1747     033C  2AF9               	goto	l1277
  1748     033D  3180  287D         	ljmp	start
  1749     033F                     __end_of_main:
  1750                           
  1751                           	psect	text1
  1752     00B5                     __ptext1:	
  1753 ;; *************** function _drive *****************
  1754 ;; Defined at:
  1755 ;;		line 217 in file "motorMain.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;		None
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  power           2    0        unsigned int 
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg, status,2, status,0, pclath, cstack
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1771 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1772 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1773 ;;Total ram usage:        1 bytes
  1774 ;; Hardware stack levels used: 1
  1775 ;; Hardware stack levels required when called: 3
  1776 ;; This function calls:
  1777 ;;		_CreateBreak
  1778 ;;		_CreateControlsCommand
  1779 ;;		_CreateMoveBackwardCommmand
  1780 ;;		_CreateMoveForwardCommmand
  1781 ;;		_CreateTurnLeftCommmand
  1782 ;;		_CreateTurnRightCommmand
  1783 ;; This function is called by:
  1784 ;;		_main
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788     00B5                     _drive:	
  1789                           ;psect for function _drive
  1790                           
  1791     00B5                     l1147:	
  1792                           ;incstack = 0
  1793                           ; Regs used in _drive: [wreg+status,2+status,0+pclath+cstack]
  1794                           
  1795                           
  1796                           ;motorMain.c: 220:     if((controls.rightX >= 0x6A4) && (controls.rightY >= 0x546 && con
      +                          trols.rightY <= 0x672)){
  1797     00B5  0020               	movlb	0	; select bank0
  1798     00B6  0821               	movf	_controls+1,w
  1799     00B7  3A80               	xorlw	128
  1800     00B8  00EF               	movwf	??_drive
  1801     00B9  3086               	movlw	134
  1802     00BA  026F               	subwf	??_drive,w
  1803     00BB  1D03               	skipz
  1804     00BC  28BF               	goto	u305
  1805     00BD  30A4               	movlw	164
  1806     00BE  0220               	subwf	_controls,w
  1807     00BF                     u305:
  1808     00BF  1C03               	skipc
  1809     00C0  28C2               	goto	u301
  1810     00C1  28C3               	goto	u300
  1811     00C2                     u301:
  1812     00C2  28E8               	goto	l1155
  1813     00C3                     u300:
  1814     00C3                     l1149:
  1815     00C3  0020               	movlb	0	; select bank0
  1816     00C4  0823               	movf	_controls+3,w
  1817     00C5  3A80               	xorlw	128
  1818     00C6  00EF               	movwf	??_drive
  1819     00C7  3085               	movlw	133
  1820     00C8  026F               	subwf	??_drive,w
  1821     00C9  1D03               	skipz
  1822     00CA  28CD               	goto	u315
  1823     00CB  3046               	movlw	70
  1824     00CC  0222               	subwf	_controls+2,w
  1825     00CD                     u315:
  1826     00CD  1C03               	skipc
  1827     00CE  28D0               	goto	u311
  1828     00CF  28D1               	goto	u310
  1829     00D0                     u311:
  1830     00D0  28E8               	goto	l1155
  1831     00D1                     u310:
  1832     00D1                     l1151:
  1833     00D1  0020               	movlb	0	; select bank0
  1834     00D2  0823               	movf	_controls+3,w
  1835     00D3  3A80               	xorlw	128
  1836     00D4  00EF               	movwf	??_drive
  1837     00D5  3086               	movlw	134
  1838     00D6  026F               	subwf	??_drive,w
  1839     00D7  1D03               	skipz
  1840     00D8  28DB               	goto	u325
  1841     00D9  3073               	movlw	115
  1842     00DA  0222               	subwf	_controls+2,w
  1843     00DB                     u325:
  1844     00DB  1803               	skipnc
  1845     00DC  28DE               	goto	u321
  1846     00DD  28DF               	goto	u320
  1847     00DE                     u321:
  1848     00DE  28E8               	goto	l1155
  1849     00DF                     u320:
  1850     00DF                     l1153:
  1851                           
  1852                           ;motorMain.c: 221:         CreateTurnRightCommmand(power);
  1853     00DF  304B               	movlw	75
  1854     00E0  0020               	movlb	0	; select bank0
  1855     00E1  00ED               	movwf	CreateTurnRightCommmand@pwm
  1856     00E2  3000               	movlw	0
  1857     00E3  00EE               	movwf	CreateTurnRightCommmand@pwm+1
  1858     00E4  3183  23C0  3180   	fcall	_CreateTurnRightCommmand
  1859                           
  1860                           ;motorMain.c: 222:     }else if((controls.rightX <= 0x514) && (controls.rightY >= 0x546 
      +                          && controls.rightY <= 0x672)){
  1861     00E7  29C0               	goto	l140
  1862     00E8                     l1155:
  1863     00E8  0020               	movlb	0	; select bank0
  1864     00E9  0821               	movf	_controls+1,w
  1865     00EA  3A80               	xorlw	128
  1866     00EB  00EF               	movwf	??_drive
  1867     00EC  3085               	movlw	133
  1868     00ED  026F               	subwf	??_drive,w
  1869     00EE  1D03               	skipz
  1870     00EF  28F2               	goto	u335
  1871     00F0  3015               	movlw	21
  1872     00F1  0220               	subwf	_controls,w
  1873     00F2                     u335:
  1874     00F2  1803               	skipnc
  1875     00F3  28F5               	goto	u331
  1876     00F4  28F6               	goto	u330
  1877     00F5                     u331:
  1878     00F5  291B               	goto	l1163
  1879     00F6                     u330:
  1880     00F6                     l1157:
  1881     00F6  0020               	movlb	0	; select bank0
  1882     00F7  0823               	movf	_controls+3,w
  1883     00F8  3A80               	xorlw	128
  1884     00F9  00EF               	movwf	??_drive
  1885     00FA  3085               	movlw	133
  1886     00FB  026F               	subwf	??_drive,w
  1887     00FC  1D03               	skipz
  1888     00FD  2900               	goto	u345
  1889     00FE  3046               	movlw	70
  1890     00FF  0222               	subwf	_controls+2,w
  1891     0100                     u345:
  1892     0100  1C03               	skipc
  1893     0101  2903               	goto	u341
  1894     0102  2904               	goto	u340
  1895     0103                     u341:
  1896     0103  291B               	goto	l1163
  1897     0104                     u340:
  1898     0104                     l1159:
  1899     0104  0020               	movlb	0	; select bank0
  1900     0105  0823               	movf	_controls+3,w
  1901     0106  3A80               	xorlw	128
  1902     0107  00EF               	movwf	??_drive
  1903     0108  3086               	movlw	134
  1904     0109  026F               	subwf	??_drive,w
  1905     010A  1D03               	skipz
  1906     010B  290E               	goto	u355
  1907     010C  3073               	movlw	115
  1908     010D  0222               	subwf	_controls+2,w
  1909     010E                     u355:
  1910     010E  1803               	skipnc
  1911     010F  2911               	goto	u351
  1912     0110  2912               	goto	u350
  1913     0111                     u351:
  1914     0111  291B               	goto	l1163
  1915     0112                     u350:
  1916     0112                     l1161:
  1917                           
  1918                           ;motorMain.c: 223:         CreateTurnLeftCommmand(power);
  1919     0112  304B               	movlw	75
  1920     0113  0020               	movlb	0	; select bank0
  1921     0114  00ED               	movwf	CreateTurnLeftCommmand@pwm
  1922     0115  3000               	movlw	0
  1923     0116  00EE               	movwf	CreateTurnLeftCommmand@pwm+1
  1924     0117  3183  23DB  3180   	fcall	_CreateTurnLeftCommmand
  1925                           
  1926                           ;motorMain.c: 224:     }else if((controls.rightY >= 0x6A4) && (controls.rightX >= 0x546 
      +                          && controls.rightX <= 0x672)){
  1927     011A  29C0               	goto	l140
  1928     011B                     l1163:
  1929     011B  0020               	movlb	0	; select bank0
  1930     011C  0823               	movf	_controls+3,w
  1931     011D  3A80               	xorlw	128
  1932     011E  00EF               	movwf	??_drive
  1933     011F  3086               	movlw	134
  1934     0120  026F               	subwf	??_drive,w
  1935     0121  1D03               	skipz
  1936     0122  2925               	goto	u365
  1937     0123  30A4               	movlw	164
  1938     0124  0222               	subwf	_controls+2,w
  1939     0125                     u365:
  1940     0125  1C03               	skipc
  1941     0126  2928               	goto	u361
  1942     0127  2929               	goto	u360
  1943     0128                     u361:
  1944     0128  294E               	goto	l1171
  1945     0129                     u360:
  1946     0129                     l1165:
  1947     0129  0020               	movlb	0	; select bank0
  1948     012A  0821               	movf	_controls+1,w
  1949     012B  3A80               	xorlw	128
  1950     012C  00EF               	movwf	??_drive
  1951     012D  3085               	movlw	133
  1952     012E  026F               	subwf	??_drive,w
  1953     012F  1D03               	skipz
  1954     0130  2933               	goto	u375
  1955     0131  3046               	movlw	70
  1956     0132  0220               	subwf	_controls,w
  1957     0133                     u375:
  1958     0133  1C03               	skipc
  1959     0134  2936               	goto	u371
  1960     0135  2937               	goto	u370
  1961     0136                     u371:
  1962     0136  294E               	goto	l1171
  1963     0137                     u370:
  1964     0137                     l1167:
  1965     0137  0020               	movlb	0	; select bank0
  1966     0138  0821               	movf	_controls+1,w
  1967     0139  3A80               	xorlw	128
  1968     013A  00EF               	movwf	??_drive
  1969     013B  3086               	movlw	134
  1970     013C  026F               	subwf	??_drive,w
  1971     013D  1D03               	skipz
  1972     013E  2941               	goto	u385
  1973     013F  3073               	movlw	115
  1974     0140  0220               	subwf	_controls,w
  1975     0141                     u385:
  1976     0141  1803               	skipnc
  1977     0142  2944               	goto	u381
  1978     0143  2945               	goto	u380
  1979     0144                     u381:
  1980     0144  294E               	goto	l1171
  1981     0145                     u380:
  1982     0145                     l1169:
  1983                           
  1984                           ;motorMain.c: 225:         CreateMoveForwardCommmand(power);
  1985     0145  304B               	movlw	75
  1986     0146  0020               	movlb	0	; select bank0
  1987     0147  00ED               	movwf	CreateMoveForwardCommmand@pwm
  1988     0148  3000               	movlw	0
  1989     0149  00EE               	movwf	CreateMoveForwardCommmand@pwm+1
  1990     014A  3183  2364  3180   	fcall	_CreateMoveForwardCommmand
  1991                           
  1992                           ;motorMain.c: 226:     }else if((controls.rightY <= 0x514) && (controls.rightX >= 0x546 
      +                          && controls.rightX <= 0x672)){
  1993     014D  29C0               	goto	l140
  1994     014E                     l1171:
  1995     014E  0020               	movlb	0	; select bank0
  1996     014F  0823               	movf	_controls+3,w
  1997     0150  3A80               	xorlw	128
  1998     0151  00EF               	movwf	??_drive
  1999     0152  3085               	movlw	133
  2000     0153  026F               	subwf	??_drive,w
  2001     0154  1D03               	skipz
  2002     0155  2958               	goto	u395
  2003     0156  3015               	movlw	21
  2004     0157  0222               	subwf	_controls+2,w
  2005     0158                     u395:
  2006     0158  1803               	skipnc
  2007     0159  295B               	goto	u391
  2008     015A  295C               	goto	u390
  2009     015B                     u391:
  2010     015B  2981               	goto	l1179
  2011     015C                     u390:
  2012     015C                     l1173:
  2013     015C  0020               	movlb	0	; select bank0
  2014     015D  0821               	movf	_controls+1,w
  2015     015E  3A80               	xorlw	128
  2016     015F  00EF               	movwf	??_drive
  2017     0160  3085               	movlw	133
  2018     0161  026F               	subwf	??_drive,w
  2019     0162  1D03               	skipz
  2020     0163  2966               	goto	u405
  2021     0164  3046               	movlw	70
  2022     0165  0220               	subwf	_controls,w
  2023     0166                     u405:
  2024     0166  1C03               	skipc
  2025     0167  2969               	goto	u401
  2026     0168  296A               	goto	u400
  2027     0169                     u401:
  2028     0169  2981               	goto	l1179
  2029     016A                     u400:
  2030     016A                     l1175:
  2031     016A  0020               	movlb	0	; select bank0
  2032     016B  0821               	movf	_controls+1,w
  2033     016C  3A80               	xorlw	128
  2034     016D  00EF               	movwf	??_drive
  2035     016E  3086               	movlw	134
  2036     016F  026F               	subwf	??_drive,w
  2037     0170  1D03               	skipz
  2038     0171  2974               	goto	u415
  2039     0172  3073               	movlw	115
  2040     0173  0220               	subwf	_controls,w
  2041     0174                     u415:
  2042     0174  1803               	skipnc
  2043     0175  2977               	goto	u411
  2044     0176  2978               	goto	u410
  2045     0177                     u411:
  2046     0177  2981               	goto	l1179
  2047     0178                     u410:
  2048     0178                     l1177:
  2049                           
  2050                           ;motorMain.c: 227:         CreateMoveBackwardCommmand(power);
  2051     0178  304B               	movlw	75
  2052     0179  0020               	movlb	0	; select bank0
  2053     017A  00ED               	movwf	CreateMoveBackwardCommmand@pwm
  2054     017B  3000               	movlw	0
  2055     017C  00EE               	movwf	CreateMoveBackwardCommmand@pwm+1
  2056     017D  3183  2383  3180   	fcall	_CreateMoveBackwardCommmand
  2057                           
  2058                           ;motorMain.c: 228:     }else if((controls.rightY >= 0x546 && controls.rightY <= 0x672) &
      +                          & (controls.rightX >= 0x546 && controls.rightX <= 0x672)){
  2059     0180  29C0               	goto	l140
  2060     0181                     l1179:
  2061     0181  0020               	movlb	0	; select bank0
  2062     0182  0823               	movf	_controls+3,w
  2063     0183  3A80               	xorlw	128
  2064     0184  00EF               	movwf	??_drive
  2065     0185  3085               	movlw	133
  2066     0186  026F               	subwf	??_drive,w
  2067     0187  1D03               	skipz
  2068     0188  298B               	goto	u425
  2069     0189  3046               	movlw	70
  2070     018A  0222               	subwf	_controls+2,w
  2071     018B                     u425:
  2072     018B  1C03               	skipc
  2073     018C  298E               	goto	u421
  2074     018D  298F               	goto	u420
  2075     018E                     u421:
  2076     018E  29BD               	goto	l1189
  2077     018F                     u420:
  2078     018F                     l1181:
  2079     018F  0020               	movlb	0	; select bank0
  2080     0190  0823               	movf	_controls+3,w
  2081     0191  3A80               	xorlw	128
  2082     0192  00EF               	movwf	??_drive
  2083     0193  3086               	movlw	134
  2084     0194  026F               	subwf	??_drive,w
  2085     0195  1D03               	skipz
  2086     0196  2999               	goto	u435
  2087     0197  3073               	movlw	115
  2088     0198  0222               	subwf	_controls+2,w
  2089     0199                     u435:
  2090     0199  1803               	skipnc
  2091     019A  299C               	goto	u431
  2092     019B  299D               	goto	u430
  2093     019C                     u431:
  2094     019C  29BD               	goto	l1189
  2095     019D                     u430:
  2096     019D                     l1183:
  2097     019D  0020               	movlb	0	; select bank0
  2098     019E  0821               	movf	_controls+1,w
  2099     019F  3A80               	xorlw	128
  2100     01A0  00EF               	movwf	??_drive
  2101     01A1  3085               	movlw	133
  2102     01A2  026F               	subwf	??_drive,w
  2103     01A3  1D03               	skipz
  2104     01A4  29A7               	goto	u445
  2105     01A5  3046               	movlw	70
  2106     01A6  0220               	subwf	_controls,w
  2107     01A7                     u445:
  2108     01A7  1C03               	skipc
  2109     01A8  29AA               	goto	u441
  2110     01A9  29AB               	goto	u440
  2111     01AA                     u441:
  2112     01AA  29BD               	goto	l1189
  2113     01AB                     u440:
  2114     01AB                     l1185:
  2115     01AB  0020               	movlb	0	; select bank0
  2116     01AC  0821               	movf	_controls+1,w
  2117     01AD  3A80               	xorlw	128
  2118     01AE  00EF               	movwf	??_drive
  2119     01AF  3086               	movlw	134
  2120     01B0  026F               	subwf	??_drive,w
  2121     01B1  1D03               	skipz
  2122     01B2  29B5               	goto	u455
  2123     01B3  3073               	movlw	115
  2124     01B4  0220               	subwf	_controls,w
  2125     01B5                     u455:
  2126     01B5  1803               	skipnc
  2127     01B6  29B8               	goto	u451
  2128     01B7  29B9               	goto	u450
  2129     01B8                     u451:
  2130     01B8  29BD               	goto	l1189
  2131     01B9                     u450:
  2132     01B9                     l1187:
  2133                           
  2134                           ;motorMain.c: 229:         CreateBreak();
  2135     01B9  3184  2411  3180   	fcall	_CreateBreak
  2136                           
  2137                           ;motorMain.c: 230:     }
  2138     01BC  29C0               	goto	l140
  2139     01BD                     l1189:
  2140                           
  2141                           ;motorMain.c: 232:         CreateControlsCommand();
  2142     01BD  3183  23F6  3180   	fcall	_CreateControlsCommand
  2143     01C0                     l140:
  2144     01C0  0008               	return
  2145     01C1                     __end_of_drive:
  2146                           
  2147                           	psect	text2
  2148     03C0                     __ptext2:	
  2149 ;; *************** function _CreateTurnRightCommmand *****************
  2150 ;; Defined at:
  2151 ;;		line 236 in file "motorMain.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;  pwm             2    0[BANK0 ] unsigned int 
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;		None
  2156 ;; Return value:  Size  Location     Type
  2157 ;;                  1    wreg      void 
  2158 ;; Registers used:
  2159 ;;		wreg, status,2
  2160 ;; Tracked objects:
  2161 ;;		On entry : 0/0
  2162 ;;		On exit  : 0/0
  2163 ;;		Unchanged: 0/0
  2164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2165 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2168 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2169 ;;Total ram usage:        2 bytes
  2170 ;; Hardware stack levels used: 1
  2171 ;; Hardware stack levels required when called: 2
  2172 ;; This function calls:
  2173 ;;		Nothing
  2174 ;; This function is called by:
  2175 ;;		_drive
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179     03C0                     _CreateTurnRightCommmand:	
  2180                           ;psect for function _CreateTurnRightCommmand
  2181                           
  2182     03C0                     l1081:	
  2183                           ;incstack = 0
  2184                           ; Regs used in _CreateTurnRightCommmand: [wreg+status,2]
  2185                           
  2186                           
  2187                           ;motorMain.c: 237:     currentCommand.sendId = 3;
  2188     03C0  3003               	movlw	3
  2189     03C1  0020               	movlb	0	; select bank0
  2190     03C2  00BA               	movwf	_currentCommand+4
  2191     03C3  3000               	movlw	0
  2192     03C4  00BB               	movwf	_currentCommand+5
  2193     03C5                     l1083:
  2194                           
  2195                           ;motorMain.c: 238:     currentCommand.sendIt = 0;
  2196     03C5  01B8               	clrf	_currentCommand+2
  2197     03C6  01B9               	clrf	_currentCommand+3
  2198     03C7                     l1085:
  2199                           
  2200                           ;motorMain.c: 239:     currentCommand.sendLimit = 10;
  2201     03C7  300A               	movlw	10
  2202     03C8  00B6               	movwf	_currentCommand
  2203     03C9  3000               	movlw	0
  2204     03CA  00B7               	movwf	_currentCommand+1
  2205                           
  2206                           ;motorMain.c: 240:     currentCommand.receiveId = 0;
  2207     03CB  01C1               	clrf	_currentCommand+11
  2208     03CC  01C2               	clrf	_currentCommand+12
  2209                           
  2210                           ;motorMain.c: 241:     currentCommand.receiveLimit = 0;
  2211     03CD  01BF               	clrf	_currentCommand+9
  2212     03CE  01C0               	clrf	_currentCommand+10
  2213                           
  2214                           ;motorMain.c: 242:     currentCommand.receiveIt = 0;
  2215     03CF  01BD               	clrf	_currentCommand+7
  2216     03D0  01BE               	clrf	_currentCommand+8
  2217                           
  2218                           ;motorMain.c: 243:     currentCommand.done = 0;
  2219     03D1  01C3               	clrf	_currentCommand+13
  2220     03D2                     l1087:
  2221                           
  2222                           ;motorMain.c: 245:     TurnRightCommand[7] = pwm;
  2223     03D2  086D               	movf	CreateTurnRightCommmand@pwm,w
  2224     03D3  00DA               	movwf	_TurnRightCommand+7
  2225     03D4                     l1089:
  2226                           
  2227                           ;motorMain.c: 246:     TurnRightCommand[9] = pwm;
  2228     03D4  086D               	movf	CreateTurnRightCommmand@pwm,w
  2229     03D5  00DC               	movwf	_TurnRightCommand+9
  2230     03D6                     l1091:
  2231                           
  2232                           ;motorMain.c: 247:     currentCommand.toSend = TurnRightCommand;
  2233     03D6  3053               	movlw	(low (_TurnRightCommand| 0))& (0+255)
  2234     03D7  00BC               	movwf	low ((_currentCommand| 0+6))
  2235     03D8                     l1093:
  2236                           
  2237                           ;motorMain.c: 248:     PIE3bits.TXIE = 1;
  2238     03D8  002E               	movlb	14	; select bank14
  2239     03D9  1619               	bsf	25,4	;volatile
  2240     03DA                     l143:
  2241     03DA  0008               	return
  2242     03DB                     __end_of_CreateTurnRightCommmand:
  2243                           
  2244                           	psect	text3
  2245     03DB                     __ptext3:	
  2246 ;; *************** function _CreateTurnLeftCommmand *****************
  2247 ;; Defined at:
  2248 ;;		line 251 in file "motorMain.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;  pwm             2    0[BANK0 ] unsigned int 
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;		None
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  1    wreg      void 
  2255 ;; Registers used:
  2256 ;;		wreg, status,2
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2262 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2265 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2266 ;;Total ram usage:        2 bytes
  2267 ;; Hardware stack levels used: 1
  2268 ;; Hardware stack levels required when called: 2
  2269 ;; This function calls:
  2270 ;;		Nothing
  2271 ;; This function is called by:
  2272 ;;		_drive
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276     03DB                     _CreateTurnLeftCommmand:	
  2277                           ;psect for function _CreateTurnLeftCommmand
  2278                           
  2279     03DB                     l1095:	
  2280                           ;incstack = 0
  2281                           ; Regs used in _CreateTurnLeftCommmand: [wreg+status,2]
  2282                           
  2283                           
  2284                           ;motorMain.c: 252:     currentCommand.sendId = 4;
  2285     03DB  3004               	movlw	4
  2286     03DC  0020               	movlb	0	; select bank0
  2287     03DD  00BA               	movwf	_currentCommand+4
  2288     03DE  3000               	movlw	0
  2289     03DF  00BB               	movwf	_currentCommand+5
  2290     03E0                     l1097:
  2291                           
  2292                           ;motorMain.c: 253:     currentCommand.sendIt = 0;
  2293     03E0  01B8               	clrf	_currentCommand+2
  2294     03E1  01B9               	clrf	_currentCommand+3
  2295     03E2                     l1099:
  2296                           
  2297                           ;motorMain.c: 254:     currentCommand.sendLimit = 10;
  2298     03E2  300A               	movlw	10
  2299     03E3  00B6               	movwf	_currentCommand
  2300     03E4  3000               	movlw	0
  2301     03E5  00B7               	movwf	_currentCommand+1
  2302                           
  2303                           ;motorMain.c: 255:     currentCommand.receiveId = 0;
  2304     03E6  01C1               	clrf	_currentCommand+11
  2305     03E7  01C2               	clrf	_currentCommand+12
  2306                           
  2307                           ;motorMain.c: 256:     currentCommand.receiveLimit = 0;
  2308     03E8  01BF               	clrf	_currentCommand+9
  2309     03E9  01C0               	clrf	_currentCommand+10
  2310                           
  2311                           ;motorMain.c: 257:     currentCommand.receiveIt = 0;
  2312     03EA  01BD               	clrf	_currentCommand+7
  2313     03EB  01BE               	clrf	_currentCommand+8
  2314                           
  2315                           ;motorMain.c: 258:     currentCommand.done = 0;
  2316     03EC  01C3               	clrf	_currentCommand+13
  2317     03ED                     l1101:
  2318                           
  2319                           ;motorMain.c: 260:     TurnLeftCommand[7] = pwm;
  2320     03ED  086D               	movf	CreateTurnLeftCommmand@pwm,w
  2321     03EE  00E4               	movwf	_TurnLeftCommand+7
  2322     03EF                     l1103:
  2323                           
  2324                           ;motorMain.c: 261:     TurnLeftCommand[9] = pwm;
  2325     03EF  086D               	movf	CreateTurnLeftCommmand@pwm,w
  2326     03F0  00E6               	movwf	_TurnLeftCommand+9
  2327     03F1                     l1105:
  2328                           
  2329                           ;motorMain.c: 262:     currentCommand.toSend = TurnLeftCommand;
  2330     03F1  305D               	movlw	(low (_TurnLeftCommand| 0))& (0+255)
  2331     03F2  00BC               	movwf	low ((_currentCommand| 0+6))
  2332     03F3                     l1107:
  2333                           
  2334                           ;motorMain.c: 263:     PIE3bits.TXIE = 1;
  2335     03F3  002E               	movlb	14	; select bank14
  2336     03F4  1619               	bsf	25,4	;volatile
  2337     03F5                     l146:
  2338     03F5  0008               	return
  2339     03F6                     __end_of_CreateTurnLeftCommmand:
  2340                           
  2341                           	psect	text4
  2342     0364                     __ptext4:	
  2343 ;; *************** function _CreateMoveForwardCommmand *****************
  2344 ;; Defined at:
  2345 ;;		line 266 in file "motorMain.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;  pwm             2    0[BANK0 ] unsigned int 
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;		None
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      void 
  2352 ;; Registers used:
  2353 ;;		wreg, status,2
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2359 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2362 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2363 ;;Total ram usage:        2 bytes
  2364 ;; Hardware stack levels used: 1
  2365 ;; Hardware stack levels required when called: 2
  2366 ;; This function calls:
  2367 ;;		Nothing
  2368 ;; This function is called by:
  2369 ;;		_drive
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373     0364                     _CreateMoveForwardCommmand:	
  2374                           ;psect for function _CreateMoveForwardCommmand
  2375                           
  2376     0364                     l1109:	
  2377                           ;incstack = 0
  2378                           ; Regs used in _CreateMoveForwardCommmand: [wreg+status,2]
  2379                           
  2380                           
  2381                           ;motorMain.c: 267:     currentCommand.sendId = 5;
  2382     0364  3005               	movlw	5
  2383     0365  0020               	movlb	0	; select bank0
  2384     0366  00BA               	movwf	_currentCommand+4
  2385     0367  3000               	movlw	0
  2386     0368  00BB               	movwf	_currentCommand+5
  2387     0369                     l1111:
  2388                           
  2389                           ;motorMain.c: 268:     currentCommand.sendIt = 0;
  2390     0369  01B8               	clrf	_currentCommand+2
  2391     036A  01B9               	clrf	_currentCommand+3
  2392     036B                     l1113:
  2393                           
  2394                           ;motorMain.c: 269:     currentCommand.sendLimit = 10;
  2395     036B  300A               	movlw	10
  2396     036C  00B6               	movwf	_currentCommand
  2397     036D  3000               	movlw	0
  2398     036E  00B7               	movwf	_currentCommand+1
  2399                           
  2400                           ;motorMain.c: 270:     currentCommand.receiveId = 0;
  2401     036F  01C1               	clrf	_currentCommand+11
  2402     0370  01C2               	clrf	_currentCommand+12
  2403                           
  2404                           ;motorMain.c: 271:     currentCommand.receiveLimit = 0;
  2405     0371  01BF               	clrf	_currentCommand+9
  2406     0372  01C0               	clrf	_currentCommand+10
  2407                           
  2408                           ;motorMain.c: 272:     currentCommand.receiveIt = 0;
  2409     0373  01BD               	clrf	_currentCommand+7
  2410     0374  01BE               	clrf	_currentCommand+8
  2411                           
  2412                           ;motorMain.c: 273:     currentCommand.done = 0;
  2413     0375  01C3               	clrf	_currentCommand+13
  2414     0376                     l1115:
  2415                           
  2416                           ;motorMain.c: 275:     MoveForwardCommand[7] = pwm;
  2417     0376  086D               	movf	CreateMoveForwardCommmand@pwm,w
  2418     0377  0021               	movlb	1	; select bank1
  2419     0378  00DF               	movwf	(_MoveForwardCommand^(0+128)+7)
  2420     0379                     l1117:
  2421                           
  2422                           ;motorMain.c: 276:     MoveForwardCommand[9] = pwm;
  2423     0379  0020               	movlb	0	; select bank0
  2424     037A  086D               	movf	CreateMoveForwardCommmand@pwm,w
  2425     037B  0021               	movlb	1	; select bank1
  2426     037C  00E1               	movwf	(_MoveForwardCommand^(0+128)+9)
  2427     037D                     l1119:
  2428                           
  2429                           ;motorMain.c: 277:     currentCommand.toSend = MoveForwardCommand;
  2430     037D  30D8               	movlw	(low (_MoveForwardCommand| 0))& (0+255)
  2431     037E  0020               	movlb	0	; select bank0
  2432     037F  00BC               	movwf	low ((_currentCommand| 0+6))
  2433     0380                     l1121:
  2434                           
  2435                           ;motorMain.c: 278:     PIE3bits.TXIE = 1;
  2436     0380  002E               	movlb	14	; select bank14
  2437     0381  1619               	bsf	25,4	;volatile
  2438     0382                     l149:
  2439     0382  0008               	return
  2440     0383                     __end_of_CreateMoveForwardCommmand:
  2441                           
  2442                           	psect	text5
  2443     0383                     __ptext5:	
  2444 ;; *************** function _CreateMoveBackwardCommmand *****************
  2445 ;; Defined at:
  2446 ;;		line 281 in file "motorMain.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;  pwm             2    0[BANK0 ] unsigned int 
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;		None
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  1    wreg      void 
  2453 ;; Registers used:
  2454 ;;		wreg, status,2
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2460 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2463 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2464 ;;Total ram usage:        2 bytes
  2465 ;; Hardware stack levels used: 1
  2466 ;; Hardware stack levels required when called: 2
  2467 ;; This function calls:
  2468 ;;		Nothing
  2469 ;; This function is called by:
  2470 ;;		_drive
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474     0383                     _CreateMoveBackwardCommmand:	
  2475                           ;psect for function _CreateMoveBackwardCommmand
  2476                           
  2477     0383                     l1123:	
  2478                           ;incstack = 0
  2479                           ; Regs used in _CreateMoveBackwardCommmand: [wreg+status,2]
  2480                           
  2481                           
  2482                           ;motorMain.c: 282:     currentCommand.sendId = 6;
  2483     0383  3006               	movlw	6
  2484     0384  0020               	movlb	0	; select bank0
  2485     0385  00BA               	movwf	_currentCommand+4
  2486     0386  3000               	movlw	0
  2487     0387  00BB               	movwf	_currentCommand+5
  2488     0388                     l1125:
  2489                           
  2490                           ;motorMain.c: 283:     currentCommand.sendIt = 0;
  2491     0388  01B8               	clrf	_currentCommand+2
  2492     0389  01B9               	clrf	_currentCommand+3
  2493     038A                     l1127:
  2494                           
  2495                           ;motorMain.c: 284:     currentCommand.sendLimit = 10;
  2496     038A  300A               	movlw	10
  2497     038B  00B6               	movwf	_currentCommand
  2498     038C  3000               	movlw	0
  2499     038D  00B7               	movwf	_currentCommand+1
  2500                           
  2501                           ;motorMain.c: 285:     currentCommand.receiveId = 0;
  2502     038E  01C1               	clrf	_currentCommand+11
  2503     038F  01C2               	clrf	_currentCommand+12
  2504                           
  2505                           ;motorMain.c: 286:     currentCommand.receiveLimit = 0;
  2506     0390  01BF               	clrf	_currentCommand+9
  2507     0391  01C0               	clrf	_currentCommand+10
  2508                           
  2509                           ;motorMain.c: 287:     currentCommand.receiveIt = 0;
  2510     0392  01BD               	clrf	_currentCommand+7
  2511     0393  01BE               	clrf	_currentCommand+8
  2512                           
  2513                           ;motorMain.c: 288:     currentCommand.done = 0;
  2514     0394  01C3               	clrf	_currentCommand+13
  2515     0395                     l1129:
  2516                           
  2517                           ;motorMain.c: 290:     MoveBackwardCommand[7] = pwm;
  2518     0395  086D               	movf	CreateMoveBackwardCommmand@pwm,w
  2519     0396  0021               	movlb	1	; select bank1
  2520     0397  00D5               	movwf	(_MoveBackwardCommand^(0+128)+7)
  2521     0398                     l1131:
  2522                           
  2523                           ;motorMain.c: 291:     MoveBackwardCommand[9] = pwm;
  2524     0398  0020               	movlb	0	; select bank0
  2525     0399  086D               	movf	CreateMoveBackwardCommmand@pwm,w
  2526     039A  0021               	movlb	1	; select bank1
  2527     039B  00D7               	movwf	(_MoveBackwardCommand^(0+128)+9)
  2528     039C                     l1133:
  2529                           
  2530                           ;motorMain.c: 292:     currentCommand.toSend = MoveBackwardCommand;
  2531     039C  30CE               	movlw	(low (_MoveBackwardCommand| 0))& (0+255)
  2532     039D  0020               	movlb	0	; select bank0
  2533     039E  00BC               	movwf	low ((_currentCommand| 0+6))
  2534     039F                     l1135:
  2535                           
  2536                           ;motorMain.c: 293:     PIE3bits.TXIE = 1;
  2537     039F  002E               	movlb	14	; select bank14
  2538     03A0  1619               	bsf	25,4	;volatile
  2539     03A1                     l152:
  2540     03A1  0008               	return
  2541     03A2                     __end_of_CreateMoveBackwardCommmand:
  2542                           
  2543                           	psect	text6
  2544     03F6                     __ptext6:	
  2545 ;; *************** function _CreateControlsCommand *****************
  2546 ;; Defined at:
  2547 ;;		line 309 in file "motorMain.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;		None
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;		None
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  1    wreg      void 
  2554 ;; Registers used:
  2555 ;;		wreg, status,2
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2565 ;;Total ram usage:        0 bytes
  2566 ;; Hardware stack levels used: 1
  2567 ;; Hardware stack levels required when called: 2
  2568 ;; This function calls:
  2569 ;;		Nothing
  2570 ;; This function is called by:
  2571 ;;		_main
  2572 ;;		_drive
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576     03F6                     _CreateControlsCommand:	
  2577                           ;psect for function _CreateControlsCommand
  2578                           
  2579     03F6                     l1067:	
  2580                           ;incstack = 0
  2581                           ; Regs used in _CreateControlsCommand: [wreg+status,2]
  2582                           
  2583                           
  2584                           ;motorMain.c: 310:     currentCommand.receiveId = CONTROL_INPUT;
  2585     03F6  3001               	movlw	1
  2586     03F7  0020               	movlb	0	; select bank0
  2587     03F8  00C1               	movwf	_currentCommand+11
  2588     03F9  3000               	movlw	0
  2589     03FA  00C2               	movwf	_currentCommand+12
  2590                           
  2591                           ;motorMain.c: 311:     currentCommand.receiveLimit = 26;
  2592     03FB  301A               	movlw	26
  2593     03FC  00BF               	movwf	_currentCommand+9
  2594     03FD  3000               	movlw	0
  2595     03FE  00C0               	movwf	_currentCommand+10
  2596     03FF                     l1069:
  2597                           
  2598                           ;motorMain.c: 312:     currentCommand.receiveIt = 0;
  2599     03FF  01BD               	clrf	_currentCommand+7
  2600     0400  01BE               	clrf	_currentCommand+8
  2601     0401                     l1071:
  2602                           
  2603                           ;motorMain.c: 313:     currentCommand.sendId = CONTROL_OUTPUT;
  2604     0401  3001               	movlw	1
  2605     0402  00BA               	movwf	_currentCommand+4
  2606     0403  3000               	movlw	0
  2607     0404  00BB               	movwf	_currentCommand+5
  2608     0405                     l1073:
  2609                           
  2610                           ;motorMain.c: 314:     currentCommand.toSend = (unsigned char*) GetUserDataCommand;
  2611     0405  3067               	movlw	(low (_GetUserDataCommand| 0))& (0+255)
  2612     0406  00BC               	movwf	low ((_currentCommand| 0+6))
  2613     0407                     l1075:
  2614                           
  2615                           ;motorMain.c: 315:     currentCommand.sendIt = 0;
  2616     0407  01B8               	clrf	_currentCommand+2
  2617     0408  01B9               	clrf	_currentCommand+3
  2618                           
  2619                           ;motorMain.c: 316:     currentCommand.sendLimit = 6;
  2620     0409  3006               	movlw	6
  2621     040A  00B6               	movwf	_currentCommand
  2622     040B  3000               	movlw	0
  2623     040C  00B7               	movwf	_currentCommand+1
  2624     040D                     l1077:
  2625                           
  2626                           ;motorMain.c: 317:     currentCommand.done = 0;
  2627     040D  01C3               	clrf	_currentCommand+13
  2628     040E                     l1079:
  2629                           
  2630                           ;motorMain.c: 318:     PIE3bits.TXIE = 1;
  2631     040E  002E               	movlb	14	; select bank14
  2632     040F  1619               	bsf	25,4	;volatile
  2633     0410                     l158:
  2634     0410  0008               	return
  2635     0411                     __end_of_CreateControlsCommand:
  2636                           
  2637                           	psect	text7
  2638     0411                     __ptext7:	
  2639 ;; *************** function _CreateBreak *****************
  2640 ;; Defined at:
  2641 ;;		line 296 in file "motorMain.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;		None
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;		None
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  1    wreg      void 
  2648 ;; Registers used:
  2649 ;;		wreg, status,2
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2659 ;;Total ram usage:        0 bytes
  2660 ;; Hardware stack levels used: 1
  2661 ;; Hardware stack levels required when called: 2
  2662 ;; This function calls:
  2663 ;;		Nothing
  2664 ;; This function is called by:
  2665 ;;		_drive
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669     0411                     _CreateBreak:	
  2670                           ;psect for function _CreateBreak
  2671                           
  2672     0411                     l1137:	
  2673                           ;incstack = 0
  2674                           ; Regs used in _CreateBreak: [wreg+status,2]
  2675                           
  2676                           
  2677                           ;motorMain.c: 297:     currentCommand.sendId = 7;
  2678     0411  3007               	movlw	7
  2679     0412  0020               	movlb	0	; select bank0
  2680     0413  00BA               	movwf	_currentCommand+4
  2681     0414  3000               	movlw	0
  2682     0415  00BB               	movwf	_currentCommand+5
  2683     0416                     l1139:
  2684                           
  2685                           ;motorMain.c: 298:     currentCommand.sendIt = 0;
  2686     0416  01B8               	clrf	_currentCommand+2
  2687     0417  01B9               	clrf	_currentCommand+3
  2688     0418                     l1141:
  2689                           
  2690                           ;motorMain.c: 299:     currentCommand.sendLimit = 10;
  2691     0418  300A               	movlw	10
  2692     0419  00B6               	movwf	_currentCommand
  2693     041A  3000               	movlw	0
  2694     041B  00B7               	movwf	_currentCommand+1
  2695                           
  2696                           ;motorMain.c: 300:     currentCommand.receiveId = 0;
  2697     041C  01C1               	clrf	_currentCommand+11
  2698     041D  01C2               	clrf	_currentCommand+12
  2699                           
  2700                           ;motorMain.c: 301:     currentCommand.receiveLimit = 0;
  2701     041E  01BF               	clrf	_currentCommand+9
  2702     041F  01C0               	clrf	_currentCommand+10
  2703                           
  2704                           ;motorMain.c: 302:     currentCommand.receiveIt = 0;
  2705     0420  01BD               	clrf	_currentCommand+7
  2706     0421  01BE               	clrf	_currentCommand+8
  2707                           
  2708                           ;motorMain.c: 303:     currentCommand.done = 0;
  2709     0422  01C3               	clrf	_currentCommand+13
  2710     0423                     l1143:
  2711                           
  2712                           ;motorMain.c: 305:     currentCommand.toSend = Break;
  2713     0423  30C4               	movlw	(low (_Break| 0))& (0+255)
  2714     0424  00BC               	movwf	low ((_currentCommand| 0+6))
  2715     0425                     l1145:
  2716                           
  2717                           ;motorMain.c: 306:     PIE3bits.TXIE = 1;
  2718     0425  002E               	movlb	14	; select bank14
  2719     0426  1619               	bsf	25,4	;volatile
  2720     0427                     l155:
  2721     0427  0008               	return
  2722     0428                     __end_of_CreateBreak:
  2723                           
  2724                           	psect	intentry
  2725     0004                     __pintentry:	
  2726 ;; *************** function _myFunction *****************
  2727 ;; Defined at:
  2728 ;;		line 322 in file "motorMain.c"
  2729 ;; Parameters:    Size  Location     Type
  2730 ;;		None
  2731 ;; Auto vars:     Size  Location     Type
  2732 ;;  input           2    7[COMMON] int 
  2733 ;; Return value:  Size  Location     Type
  2734 ;;                  1    wreg      void 
  2735 ;; Registers used:
  2736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2743 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2744 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2745 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2746 ;;Total ram usage:        4 bytes
  2747 ;; Hardware stack levels used: 1
  2748 ;; Hardware stack levels required when called: 1
  2749 ;; This function calls:
  2750 ;;		_GetControllerInput
  2751 ;; This function is called by:
  2752 ;;		Interrupt level 1
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756     0004                     _myFunction:
  2757                           
  2758                           ;incstack = 0
  2759     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2760                           
  2761                           ; Regs used in _myFunction: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2762     0005  3180               	pagesel	$
  2763     0006                     i1l1301:
  2764                           
  2765                           ;motorMain.c: 323:     if(PIR3bits.RCIF == 1){
  2766     0006  002E               	movlb	14	; select bank14
  2767     0007  1E8F               	btfss	15,5	;volatile
  2768     0008  280A               	goto	u53_21
  2769     0009  280B               	goto	u53_20
  2770     000A                     u53_21:
  2771     000A  2841               	goto	i1l163
  2772     000B                     u53_20:
  2773     000B                     i1l1303:
  2774                           
  2775                           ;motorMain.c: 324:         int input = RCREG;
  2776     000B  0022               	movlb	2	; select bank2
  2777     000C  0819               	movf	25,w	;volatile
  2778     000D  00F5               	movwf	??_myFunction
  2779     000E  01F6               	clrf	??_myFunction+1
  2780     000F  0875               	movf	??_myFunction,w
  2781     0010  00F7               	movwf	myFunction@input
  2782     0011  0876               	movf	??_myFunction+1,w
  2783     0012  00F8               	movwf	myFunction@input+1
  2784     0013                     i1l1305:
  2785                           
  2786                           ;motorMain.c: 325:         if(currentCommand.receiveId == CONTROL_INPUT){
  2787     0013  0020               	movlb	0	; select bank0
  2788     0014  0341               	decf	_currentCommand+11,w
  2789     0015  0442               	iorwf	_currentCommand+12,w
  2790     0016  1D03               	btfss	3,2
  2791     0017  2819               	goto	u54_21
  2792     0018  281A               	goto	u54_20
  2793     0019                     u54_21:
  2794     0019  2828               	goto	i1l1311
  2795     001A                     u54_20:
  2796     001A                     i1l1307:
  2797                           
  2798                           ;motorMain.c: 326:             GetControllerInput(input);
  2799     001A  0878               	movf	myFunction@input+1,w
  2800     001B  00F1               	movwf	GetControllerInput@input+1
  2801     001C  0877               	movf	myFunction@input,w
  2802     001D  00F0               	movwf	GetControllerInput@input
  2803     001E  3181  21C1  3180   	fcall	_GetControllerInput
  2804     0021                     i1l1309:
  2805                           
  2806                           ;motorMain.c: 327:             currentCommand.receiveIt = currentCommand.receiveIt + 1;
  2807     0021  0020               	movlb	0	; select bank0
  2808     0022  083D               	movf	_currentCommand+7,w
  2809     0023  3E01               	addlw	1
  2810     0024  00BD               	movwf	_currentCommand+7
  2811     0025  3000               	movlw	0
  2812     0026  3D3E               	addwfc	_currentCommand+8,w
  2813     0027  00BE               	movwf	_currentCommand+8
  2814     0028                     i1l1311:
  2815                           
  2816                           ;motorMain.c: 329:         if(currentCommand.receiveIt >= currentCommand.receiveLimit){
  2817     0028  083E               	movf	_currentCommand+8,w
  2818     0029  3A80               	xorlw	128
  2819     002A  00F5               	movwf	??_myFunction
  2820     002B  0840               	movf	_currentCommand+10,w
  2821     002C  3A80               	xorlw	128
  2822     002D  0275               	subwf	??_myFunction,w
  2823     002E  1D03               	skipz
  2824     002F  2832               	goto	u55_25
  2825     0030  083F               	movf	_currentCommand+9,w
  2826     0031  023D               	subwf	_currentCommand+7,w
  2827     0032                     u55_25:
  2828     0032  1C03               	skipc
  2829     0033  2835               	goto	u55_21
  2830     0034  2836               	goto	u55_20
  2831     0035                     u55_21:
  2832     0035  2839               	goto	i1l1315
  2833     0036                     u55_20:
  2834     0036                     i1l1313:
  2835                           
  2836                           ;motorMain.c: 330:             currentCommand.done = 1;
  2837     0036  0020               	movlb	0	; select bank0
  2838     0037  01C3               	clrf	_currentCommand+13
  2839     0038  0AC3               	incf	_currentCommand+13,f
  2840     0039                     i1l1315:
  2841                           
  2842                           ;motorMain.c: 332:         inputStage++;
  2843     0039  3001               	movlw	1
  2844     003A  0020               	movlb	0	; select bank0
  2845     003B  07C6               	addwf	_inputStage,f
  2846     003C  3000               	movlw	0
  2847     003D  3DC7               	addwfc	_inputStage+1,f
  2848     003E                     i1l1317:
  2849                           
  2850                           ;motorMain.c: 333:         PIR3bits.RCIF =0;
  2851     003E  002E               	movlb	14	; select bank14
  2852     003F  128F               	bcf	15,5	;volatile
  2853                           
  2854                           ;motorMain.c: 334:     }
  2855     0040  287B               	goto	i1l171
  2856     0041                     i1l163:	
  2857                           ;motorMain.c: 335:     else if(PIR3bits.TXIF == 1){
  2858                           
  2859     0041  1E0F               	btfss	15,4	;volatile
  2860     0042  2844               	goto	u56_21
  2861     0043  2845               	goto	u56_20
  2862     0044                     u56_21:
  2863     0044  287B               	goto	i1l171
  2864     0045                     u56_20:
  2865     0045                     i1l1319:
  2866                           
  2867                           ;motorMain.c: 336:         if(currentCommand.sendIt >= currentCommand.sendLimit){
  2868     0045  0020               	movlb	0	; select bank0
  2869     0046  0839               	movf	_currentCommand+3,w
  2870     0047  3A80               	xorlw	128
  2871     0048  00F5               	movwf	??_myFunction
  2872     0049  0837               	movf	_currentCommand+1,w
  2873     004A  3A80               	xorlw	128
  2874     004B  0275               	subwf	??_myFunction,w
  2875     004C  1D03               	skipz
  2876     004D  2850               	goto	u57_25
  2877     004E  0836               	movf	_currentCommand,w
  2878     004F  0238               	subwf	_currentCommand+2,w
  2879     0050                     u57_25:
  2880     0050  1C03               	skipc
  2881     0051  2853               	goto	u57_21
  2882     0052  2854               	goto	u57_20
  2883     0053                     u57_21:
  2884     0053  2868               	goto	i1l1327
  2885     0054                     u57_20:
  2886     0054                     i1l1321:
  2887                           
  2888                           ;motorMain.c: 337:             PIE3bits.TXIE = 0;
  2889     0054  002E               	movlb	14	; select bank14
  2890     0055  1219               	bcf	25,4	;volatile
  2891     0056                     i1l1323:
  2892                           
  2893                           ;motorMain.c: 338:             if(currentCommand.receiveLimit <= 0){
  2894     0056  0020               	movlb	0	; select bank0
  2895     0057  0840               	movf	_currentCommand+10,w
  2896     0058  3A80               	xorlw	128
  2897     0059  00F5               	movwf	??_myFunction
  2898     005A  3080               	movlw	128
  2899     005B  0275               	subwf	??_myFunction,w
  2900     005C  1D03               	skipz
  2901     005D  2860               	goto	u58_25
  2902     005E  3001               	movlw	1
  2903     005F  023F               	subwf	_currentCommand+9,w
  2904     0060                     u58_25:
  2905     0060  1803               	skipnc
  2906     0061  2863               	goto	u58_21
  2907     0062  2864               	goto	u58_20
  2908     0063                     u58_21:
  2909     0063  2879               	goto	i1l1331
  2910     0064                     u58_20:
  2911     0064                     i1l1325:
  2912                           
  2913                           ;motorMain.c: 339:                 currentCommand.done = 1;
  2914     0064  0020               	movlb	0	; select bank0
  2915     0065  01C3               	clrf	_currentCommand+13
  2916     0066  0AC3               	incf	_currentCommand+13,f
  2917     0067  2879               	goto	i1l1331
  2918     0068                     i1l1327:
  2919                           
  2920                           ;motorMain.c: 343:             TX1REGbits.TX1REG = currentCommand.toSend[currentCommand.
      +                          sendIt];
  2921     0068  0020               	movlb	0	; select bank0
  2922     0069  0838               	movf	_currentCommand+2,w
  2923     006A  073C               	addwf	low ((_currentCommand| 0+6)),w
  2924     006B  00F5               	movwf	??_myFunction
  2925     006C  0875               	movf	??_myFunction,w
  2926     006D  0086               	movwf	6
  2927     006E  0187               	clrf	7
  2928     006F  0801               	movf	1,w
  2929     0070  0022               	movlb	2	; select bank2
  2930     0071  009A               	movwf	26	;volatile
  2931     0072                     i1l1329:
  2932                           
  2933                           ;motorMain.c: 344:             currentCommand.sendIt = currentCommand.sendIt + 1;
  2934     0072  0020               	movlb	0	; select bank0
  2935     0073  0838               	movf	_currentCommand+2,w
  2936     0074  3E01               	addlw	1
  2937     0075  00B8               	movwf	_currentCommand+2
  2938     0076  3000               	movlw	0
  2939     0077  3D39               	addwfc	_currentCommand+3,w
  2940     0078  00B9               	movwf	_currentCommand+3
  2941     0079                     i1l1331:
  2942                           
  2943                           ;motorMain.c: 346:         PIR3bits.TXIF = 0;
  2944     0079  002E               	movlb	14	; select bank14
  2945     007A  120F               	bcf	15,4	;volatile
  2946     007B                     i1l171:
  2947     007B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2948     007C  0009               	retfie
  2949     007D                     __end_of_myFunction:
  2950                           
  2951                           	psect	text9
  2952     01C1                     __ptext9:	
  2953 ;; *************** function _GetControllerInput *****************
  2954 ;; Defined at:
  2955 ;;		line 188 in file "motorMain.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;  input           2    0[COMMON] int 
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;		None
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2969 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2971 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2972 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2973 ;;Total ram usage:        5 bytes
  2974 ;; Hardware stack levels used: 1
  2975 ;; This function calls:
  2976 ;;		Nothing
  2977 ;; This function is called by:
  2978 ;;		_myFunction
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982     01C1                     _GetControllerInput:	
  2983                           ;psect for function _GetControllerInput
  2984                           
  2985     01C1                     i1l1191:	
  2986                           ;incstack = 0
  2987                           ; Regs used in _GetControllerInput: [wreg-fsr1h+status,2+status,0]
  2988                           
  2989                           
  2990                           ;motorMain.c: 189:     if(currentCommand.receiveIt <0 ){
  2991     01C1  3007               	movlw	7
  2992     01C2  3E36               	addlw	(low (_currentCommand| 0))& (0+255)
  2993     01C3  0086               	movwf	6
  2994     01C4  0187               	clrf	7
  2995     01C5  3141               	addfsr 1,1
  2996     01C6  1F81               	btfss	1,7
  2997     01C7  29C9               	goto	u46_21
  2998     01C8  29CA               	goto	u46_20
  2999     01C9                     u46_21:
  3000     01C9  2A86               	goto	i1l1239
  3001     01CA                     u46_20:
  3002     01CA  2ACA               	goto	i1l105
  3003     01CB                     i1l1195:
  3004     01CB  0871               	movf	GetControllerInput@input+1,w
  3005     01CC  00B5               	movwf	_controls+21
  3006     01CD  0870               	movf	GetControllerInput@input,w
  3007     01CE  00B4               	movwf	_controls+20
  3008     01CF  2ACA               	goto	i1l105
  3009     01D0                     i1l1197:
  3010     01D0  3014               	movlw	20
  3011     01D1  3E20               	addlw	(low (_controls| 0))& (0+255)
  3012     01D2  0086               	movwf	6
  3013     01D3  0187               	clrf	7
  3014     01D4  0871               	movf	GetControllerInput@input+1,w
  3015     01D5  00F3               	movwf	??_GetControllerInput+1
  3016     01D6  0870               	movf	GetControllerInput@input,w
  3017     01D7  00F2               	movwf	??_GetControllerInput
  3018     01D8  0872               	movf	??_GetControllerInput,w
  3019     01D9  00F3               	movwf	??_GetControllerInput+1
  3020     01DA  01F2               	clrf	??_GetControllerInput
  3021     01DB  3F40               	moviw [0]fsr1
  3022     01DC  0772               	addwf	??_GetControllerInput,w
  3023     01DD  00A0               	movwf	_controls
  3024     01DE  3F41               	moviw [1]fsr1
  3025     01DF  3D73               	addwfc	??_GetControllerInput+1,w
  3026     01E0  00A1               	movwf	_controls+1
  3027     01E1  2ACA               	goto	i1l105
  3028     01E2                     i1l1201:
  3029     01E2  3014               	movlw	20
  3030     01E3  3E20               	addlw	(low (_controls| 0))& (0+255)
  3031     01E4  0086               	movwf	6
  3032     01E5  0187               	clrf	7
  3033     01E6  0871               	movf	GetControllerInput@input+1,w
  3034     01E7  00F3               	movwf	??_GetControllerInput+1
  3035     01E8  0870               	movf	GetControllerInput@input,w
  3036     01E9  00F2               	movwf	??_GetControllerInput
  3037     01EA  0872               	movf	??_GetControllerInput,w
  3038     01EB  00F3               	movwf	??_GetControllerInput+1
  3039     01EC  01F2               	clrf	??_GetControllerInput
  3040     01ED  3F40               	moviw [0]fsr1
  3041     01EE  0772               	addwf	??_GetControllerInput,w
  3042     01EF  00A2               	movwf	_controls+2
  3043     01F0  3F41               	moviw [1]fsr1
  3044     01F1  3D73               	addwfc	??_GetControllerInput+1,w
  3045     01F2  00A3               	movwf	_controls+3
  3046     01F3  2ACA               	goto	i1l105
  3047     01F4                     i1l1205:
  3048     01F4  3014               	movlw	20
  3049     01F5  3E20               	addlw	(low (_controls| 0))& (0+255)
  3050     01F6  0086               	movwf	6
  3051     01F7  0187               	clrf	7
  3052     01F8  0871               	movf	GetControllerInput@input+1,w
  3053     01F9  00F3               	movwf	??_GetControllerInput+1
  3054     01FA  0870               	movf	GetControllerInput@input,w
  3055     01FB  00F2               	movwf	??_GetControllerInput
  3056     01FC  0872               	movf	??_GetControllerInput,w
  3057     01FD  00F3               	movwf	??_GetControllerInput+1
  3058     01FE  01F2               	clrf	??_GetControllerInput
  3059     01FF  3F40               	moviw [0]fsr1
  3060     0200  0772               	addwf	??_GetControllerInput,w
  3061     0201  00A4               	movwf	_controls+4
  3062     0202  3F41               	moviw [1]fsr1
  3063     0203  3D73               	addwfc	??_GetControllerInput+1,w
  3064     0204  00A5               	movwf	_controls+5
  3065     0205  2ACA               	goto	i1l105
  3066     0206                     i1l1209:
  3067     0206  3014               	movlw	20
  3068     0207  3E20               	addlw	(low (_controls| 0))& (0+255)
  3069     0208  0086               	movwf	6
  3070     0209  0187               	clrf	7
  3071     020A  0871               	movf	GetControllerInput@input+1,w
  3072     020B  00F3               	movwf	??_GetControllerInput+1
  3073     020C  0870               	movf	GetControllerInput@input,w
  3074     020D  00F2               	movwf	??_GetControllerInput
  3075     020E  0872               	movf	??_GetControllerInput,w
  3076     020F  00F3               	movwf	??_GetControllerInput+1
  3077     0210  01F2               	clrf	??_GetControllerInput
  3078     0211  3F40               	moviw [0]fsr1
  3079     0212  0772               	addwf	??_GetControllerInput,w
  3080     0213  00A6               	movwf	_controls+6
  3081     0214  3F41               	moviw [1]fsr1
  3082     0215  3D73               	addwfc	??_GetControllerInput+1,w
  3083     0216  00A7               	movwf	_controls+7
  3084     0217  2ACA               	goto	i1l105
  3085     0218                     i1l1213:
  3086     0218  3014               	movlw	20
  3087     0219  3E20               	addlw	(low (_controls| 0))& (0+255)
  3088     021A  0086               	movwf	6
  3089     021B  0187               	clrf	7
  3090     021C  0871               	movf	GetControllerInput@input+1,w
  3091     021D  00F3               	movwf	??_GetControllerInput+1
  3092     021E  0870               	movf	GetControllerInput@input,w
  3093     021F  00F2               	movwf	??_GetControllerInput
  3094     0220  0872               	movf	??_GetControllerInput,w
  3095     0221  00F3               	movwf	??_GetControllerInput+1
  3096     0222  01F2               	clrf	??_GetControllerInput
  3097     0223  3F40               	moviw [0]fsr1
  3098     0224  0772               	addwf	??_GetControllerInput,w
  3099     0225  00A8               	movwf	_controls+8
  3100     0226  3F41               	moviw [1]fsr1
  3101     0227  3D73               	addwfc	??_GetControllerInput+1,w
  3102     0228  00A9               	movwf	_controls+9
  3103     0229  2ACA               	goto	i1l105
  3104     022A                     i1l1217:
  3105     022A  3014               	movlw	20
  3106     022B  3E20               	addlw	(low (_controls| 0))& (0+255)
  3107     022C  0086               	movwf	6
  3108     022D  0187               	clrf	7
  3109     022E  0871               	movf	GetControllerInput@input+1,w
  3110     022F  00F3               	movwf	??_GetControllerInput+1
  3111     0230  0870               	movf	GetControllerInput@input,w
  3112     0231  00F2               	movwf	??_GetControllerInput
  3113     0232  0872               	movf	??_GetControllerInput,w
  3114     0233  00F3               	movwf	??_GetControllerInput+1
  3115     0234  01F2               	clrf	??_GetControllerInput
  3116     0235  3F40               	moviw [0]fsr1
  3117     0236  0772               	addwf	??_GetControllerInput,w
  3118     0237  00AA               	movwf	_controls+10
  3119     0238  3F41               	moviw [1]fsr1
  3120     0239  3D73               	addwfc	??_GetControllerInput+1,w
  3121     023A  00AB               	movwf	_controls+11
  3122     023B  2ACA               	goto	i1l105
  3123     023C                     i1l1221:
  3124     023C  3014               	movlw	20
  3125     023D  3E20               	addlw	(low (_controls| 0))& (0+255)
  3126     023E  0086               	movwf	6
  3127     023F  0187               	clrf	7
  3128     0240  0871               	movf	GetControllerInput@input+1,w
  3129     0241  00F3               	movwf	??_GetControllerInput+1
  3130     0242  0870               	movf	GetControllerInput@input,w
  3131     0243  00F2               	movwf	??_GetControllerInput
  3132     0244  0872               	movf	??_GetControllerInput,w
  3133     0245  00F3               	movwf	??_GetControllerInput+1
  3134     0246  01F2               	clrf	??_GetControllerInput
  3135     0247  3F40               	moviw [0]fsr1
  3136     0248  0772               	addwf	??_GetControllerInput,w
  3137     0249  00AC               	movwf	_controls+12
  3138     024A  3F41               	moviw [1]fsr1
  3139     024B  3D73               	addwfc	??_GetControllerInput+1,w
  3140     024C  00AD               	movwf	_controls+13
  3141     024D  2ACA               	goto	i1l105
  3142     024E                     i1l1225:
  3143     024E  3014               	movlw	20
  3144     024F  3E20               	addlw	(low (_controls| 0))& (0+255)
  3145     0250  0086               	movwf	6
  3146     0251  0187               	clrf	7
  3147     0252  0871               	movf	GetControllerInput@input+1,w
  3148     0253  00F3               	movwf	??_GetControllerInput+1
  3149     0254  0870               	movf	GetControllerInput@input,w
  3150     0255  00F2               	movwf	??_GetControllerInput
  3151     0256  0872               	movf	??_GetControllerInput,w
  3152     0257  00F3               	movwf	??_GetControllerInput+1
  3153     0258  01F2               	clrf	??_GetControllerInput
  3154     0259  3F40               	moviw [0]fsr1
  3155     025A  0772               	addwf	??_GetControllerInput,w
  3156     025B  00AE               	movwf	_controls+14
  3157     025C  3F41               	moviw [1]fsr1
  3158     025D  3D73               	addwfc	??_GetControllerInput+1,w
  3159     025E  00AF               	movwf	_controls+15
  3160     025F  2ACA               	goto	i1l105
  3161     0260                     i1l1229:
  3162     0260  3014               	movlw	20
  3163     0261  3E20               	addlw	(low (_controls| 0))& (0+255)
  3164     0262  0086               	movwf	6
  3165     0263  0187               	clrf	7
  3166     0264  0871               	movf	GetControllerInput@input+1,w
  3167     0265  00F3               	movwf	??_GetControllerInput+1
  3168     0266  0870               	movf	GetControllerInput@input,w
  3169     0267  00F2               	movwf	??_GetControllerInput
  3170     0268  0872               	movf	??_GetControllerInput,w
  3171     0269  00F3               	movwf	??_GetControllerInput+1
  3172     026A  01F2               	clrf	??_GetControllerInput
  3173     026B  3F40               	moviw [0]fsr1
  3174     026C  0772               	addwf	??_GetControllerInput,w
  3175     026D  00B0               	movwf	_controls+16
  3176     026E  3F41               	moviw [1]fsr1
  3177     026F  3D73               	addwfc	??_GetControllerInput+1,w
  3178     0270  00B1               	movwf	_controls+17
  3179     0271  2ACA               	goto	i1l105
  3180     0272                     i1l1233:
  3181     0272  3014               	movlw	20
  3182     0273  3E20               	addlw	(low (_controls| 0))& (0+255)
  3183     0274  0086               	movwf	6
  3184     0275  0187               	clrf	7
  3185     0276  0871               	movf	GetControllerInput@input+1,w
  3186     0277  00F3               	movwf	??_GetControllerInput+1
  3187     0278  0870               	movf	GetControllerInput@input,w
  3188     0279  00F2               	movwf	??_GetControllerInput
  3189     027A  0872               	movf	??_GetControllerInput,w
  3190     027B  00F3               	movwf	??_GetControllerInput+1
  3191     027C  01F2               	clrf	??_GetControllerInput
  3192     027D  3F40               	moviw [0]fsr1
  3193     027E  0772               	addwf	??_GetControllerInput,w
  3194     027F  00B2               	movwf	_controls+18
  3195     0280  3F41               	moviw [1]fsr1
  3196     0281  3D73               	addwfc	??_GetControllerInput+1,w
  3197     0282  00B3               	movwf	_controls+19
  3198     0283                     i1l1235:
  3199     0283  01F9               	clrf	_currentInput
  3200     0284  01FA               	clrf	_currentInput+1
  3201     0285  2ACA               	goto	i1l105
  3202     0286                     i1l1239:
  3203                           
  3204                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3205                           ; Switch size 1, requested type "simple"
  3206                           ; Number of cases is 1, Range of values is 0 to 0
  3207                           ; switch strategies available:
  3208                           ; Name         Instructions Cycles
  3209                           ; simple_byte            4     3 (average)
  3210                           ; direct_byte            8     6 (fixed)
  3211                           ; jumptable            260     6 (fixed)
  3212                           ;	Chosen strategy is simple_byte
  3213     0286  0020               	movlb	0	; select bank0
  3214     0287  083E               	movf	_currentCommand+8,w
  3215     0288  3A00               	xorlw	0	; case 0
  3216     0289  1903               	skipnz
  3217     028A  2A8C               	goto	i1l1353
  3218     028B  2ACA               	goto	i1l105
  3219     028C                     i1l1353:
  3220                           
  3221                           ; Switch size 1, requested type "simple"
  3222                           ; Number of cases is 20, Range of values is 6 to 25
  3223                           ; switch strategies available:
  3224                           ; Name         Instructions Cycles
  3225                           ; direct_byte           49     9 (fixed)
  3226                           ; simple_byte           61    31 (average)
  3227                           ; jumptable            263     9 (fixed)
  3228                           ;	Chosen strategy is simple_byte
  3229     028C  083D               	movf	_currentCommand+7,w
  3230     028D  3A06               	xorlw	6	; case 6
  3231     028E  1903               	skipnz
  3232     028F  29CB               	goto	i1l1195
  3233     0290  3A01               	xorlw	1	; case 7
  3234     0291  1903               	skipnz
  3235     0292  29D0               	goto	i1l1197
  3236     0293  3A0F               	xorlw	15	; case 8
  3237     0294  1903               	skipnz
  3238     0295  29CB               	goto	i1l1195
  3239     0296  3A01               	xorlw	1	; case 9
  3240     0297  1903               	skipnz
  3241     0298  29E2               	goto	i1l1201
  3242     0299  3A03               	xorlw	3	; case 10
  3243     029A  1903               	skipnz
  3244     029B  29CB               	goto	i1l1195
  3245     029C  3A01               	xorlw	1	; case 11
  3246     029D  1903               	skipnz
  3247     029E  29F4               	goto	i1l1205
  3248     029F  3A07               	xorlw	7	; case 12
  3249     02A0  1903               	skipnz
  3250     02A1  29CB               	goto	i1l1195
  3251     02A2  3A01               	xorlw	1	; case 13
  3252     02A3  1903               	skipnz
  3253     02A4  2A06               	goto	i1l1209
  3254     02A5  3A03               	xorlw	3	; case 14
  3255     02A6  1903               	skipnz
  3256     02A7  29CB               	goto	i1l1195
  3257     02A8  3A01               	xorlw	1	; case 15
  3258     02A9  1903               	skipnz
  3259     02AA  2A18               	goto	i1l1213
  3260     02AB  3A1F               	xorlw	31	; case 16
  3261     02AC  1903               	skipnz
  3262     02AD  29CB               	goto	i1l1195
  3263     02AE  3A01               	xorlw	1	; case 17
  3264     02AF  1903               	skipnz
  3265     02B0  2A2A               	goto	i1l1217
  3266     02B1  3A03               	xorlw	3	; case 18
  3267     02B2  1903               	skipnz
  3268     02B3  29CB               	goto	i1l1195
  3269     02B4  3A01               	xorlw	1	; case 19
  3270     02B5  1903               	skipnz
  3271     02B6  2A3C               	goto	i1l1221
  3272     02B7  3A07               	xorlw	7	; case 20
  3273     02B8  1903               	skipnz
  3274     02B9  29CB               	goto	i1l1195
  3275     02BA  3A01               	xorlw	1	; case 21
  3276     02BB  1903               	skipnz
  3277     02BC  2A4E               	goto	i1l1225
  3278     02BD  3A03               	xorlw	3	; case 22
  3279     02BE  1903               	skipnz
  3280     02BF  29CB               	goto	i1l1195
  3281     02C0  3A01               	xorlw	1	; case 23
  3282     02C1  1903               	skipnz
  3283     02C2  2A60               	goto	i1l1229
  3284     02C3  3A0F               	xorlw	15	; case 24
  3285     02C4  1903               	skipnz
  3286     02C5  29CB               	goto	i1l1195
  3287     02C6  3A01               	xorlw	1	; case 25
  3288     02C7  1903               	skipnz
  3289     02C8  2A72               	goto	i1l1233
  3290     02C9  2ACA               	goto	i1l105
  3291     02CA                     i1l105:
  3292     02CA  0008               	return
  3293     02CB                     __end_of_GetControllerInput:
  3294     007E                     btemp	set	126	;btemp
  3295     007E                     int$flags	set	126
  3296     007E                     wtemp0	set	126
  3297                           
  3298                           	psect	config
  3299                           
  3300                           ;Config register CONFIG1 @ 0x8007
  3301                           ;	External Oscillator mode selection bits
  3302                           ;	FEXTOSC = ECH, EC above 8MHz; PFM set to high power
  3303                           ;	Power-up default value for COSC bits
  3304                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
  3305                           ;	Clock Out Enable bit
  3306                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  3307                           ;	Clock Switch Enable bit
  3308                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3309                           ;	Fail-Safe Clock Monitor Enable bit
  3310                           ;	FCMEN = OFF, FSCM timer disabled
  3311     8007                     	org	32775
  3312     8007  1F8F               	dw	8079
  3313                           
  3314                           ;Config register CONFIG2 @ 0x8008
  3315                           ;	Master Clear Enable bit
  3316                           ;	MCLRE = ON, MCLR pin is Master Clear function
  3317                           ;	Power-up Timer Enable bit
  3318                           ;	PWRTE = OFF, PWRT disabled
  3319                           ;	Low-Power BOR enable bit
  3320                           ;	LPBOREN = OFF, ULPBOR disabled
  3321                           ;	Brown-out reset enable bits
  3322                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  3323                           ;	Brown-out Reset Voltage Selection
  3324                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  3325                           ;	Zero-cross detect disable
  3326                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  3327                           ;	Peripheral Pin Select one-way control
  3328                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  3329                           ;	Stack Overflow/Underflow Reset Enable bit
  3330                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  3331                           ;	Background Debugger
  3332                           ;	DEBUG = 0x1, unprogrammed default
  3333     8008                     	org	32776
  3334     8008  3FFF               	dw	16383
  3335                           
  3336                           ;Config register CONFIG3 @ 0x8009
  3337                           ;	WDT Period Select bits
  3338                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3339                           ;	WDT operating mode
  3340                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  3341                           ;	WDT Window Select bits
  3342                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3343                           ;	WDT input clock selector
  3344                           ;	WDTCCS = SC, Software Control
  3345     8009                     	org	32777
  3346     8009  3F9F               	dw	16287
  3347                           
  3348                           ;Config register CONFIG4 @ 0x800A
  3349                           ;	UserNVM self-write protection bits
  3350                           ;	WRT = OFF, Write protection off
  3351                           ;	Scanner Enable bit
  3352                           ;	SCANE = available, Scanner module is available for use
  3353                           ;	Low Voltage Programming Enable bit
  3354                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  3355     800A                     	org	32778
  3356     800A  3FFF               	dw	16383
  3357                           
  3358                           ;Config register CONFIG5 @ 0x800B
  3359                           ;	UserNVM Program memory code protection bit
  3360                           ;	CP = OFF, Program Memory code protection disabled
  3361                           ;	DataNVM code protection bit
  3362                           ;	CPD = OFF, Data EEPROM code protection disabled
  3363     800B                     	org	32779
  3364     800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    2
    Data        69
    BSS         78
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80      3      80
    BANK1            80      0      66
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    Command$toSend	PTR unsigned char  size(1) Largest target is 10
		 -> Break(BANK1[10]), GetUserDataCommand(BANK0[6]), MoveBackwardCommand(BANK1[10]), MoveForwardCommand(BANK1[10]), 
		 -> TurnLeftCommand(BANK0[10]), TurnRightCommand(BANK0[10]), 

    currentCommand$toSend	PTR unsigned char  size(1) Largest target is 10
		 -> Break(BANK1[10]), GetUserDataCommand(BANK0[6]), MoveBackwardCommand(BANK1[10]), MoveForwardCommand(BANK1[10]), 
		 -> TurnLeftCommand(BANK0[10]), TurnRightCommand(BANK0[10]), 

    S34command$toSend	PTR unsigned char  size(1) Largest target is 10
		 -> Break(BANK1[10]), GetUserDataCommand(BANK0[6]), MoveBackwardCommand(BANK1[10]), MoveForwardCommand(BANK1[10]), 
		 -> TurnLeftCommand(BANK0[10]), TurnRightCommand(BANK0[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _myFunction in COMMON

    _myFunction->_GetControllerInput

Critical Paths under _main in BANK0

    _main->_drive
    _drive->_CreateMoveBackwardCommmand
    _drive->_CreateMoveForwardCommmand
    _drive->_CreateTurnLeftCommmand
    _drive->_CreateTurnRightCommmand

Critical Paths under _myFunction in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myFunction in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myFunction in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myFunction in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myFunction in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myFunction in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myFunction in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myFunction in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myFunction in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myFunction in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myFunction in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myFunction in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myFunction in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     569
              _CreateControlsCommand
                              _drive
 ---------------------------------------------------------------------------------
 (1) _drive                                                3     3      0     569
                                              2 BANK0      1     1      0
                        _CreateBreak
              _CreateControlsCommand
         _CreateMoveBackwardCommmand
          _CreateMoveForwardCommmand
             _CreateTurnLeftCommmand
            _CreateTurnRightCommmand
 ---------------------------------------------------------------------------------
 (2) _CreateTurnRightCommmand                              2     0      2     120
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CreateTurnLeftCommmand                               2     0      2     120
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CreateMoveForwardCommmand                            2     0      2     120
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CreateMoveBackwardCommmand                           2     0      2     120
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CreateControlsCommand                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CreateBreak                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _myFunction                                           4     4      0     539
                                              5 COMMON     4     4      0
                 _GetControllerInput
 ---------------------------------------------------------------------------------
 (4) _GetControllerInput                                   5     3      2     516
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CreateControlsCommand
   _drive
     _CreateBreak
     _CreateControlsCommand
     _CreateMoveBackwardCommmand
     _CreateMoveForwardCommmand
     _CreateTurnLeftCommmand
     _CreateTurnRightCommmand

 _myFunction (ROOT)
   _GetControllerInput

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      42       7       82.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      9F      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      9F      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Mar 27 14:59:50 2024

                                l90 0311                                  l92 031D  
                                l94 0329                                  l88 0305  
                               l140 01C0                                 l143 03DA  
                               l152 03A1                                 l146 03F5  
                               l155 0427                                 l149 0382  
                               l158 0410                                 u300 00C3  
                               u301 00C2                                 u310 00D1  
                               u311 00D0                                 u400 016A  
                               u320 00DF                                 u401 0169  
                               u321 00DE                                 u305 00BF  
                               u410 0178                                 u330 00F6  
                               u411 0177                                 u331 00F5  
                               u315 00CD                                 u420 018F  
                               u340 0104                                 u500 0327  
                               u421 018E                                 u405 0166  
                               u341 0103                                 u325 00DB  
                               u501 0326                                 u430 019D  
                               u350 0112                                 u510 032F  
                               u431 019C                                 u415 0174  
                               u351 0111                                 u335 00F2  
                               u511 032E                                 u440 01AB  
                               u360 0129                                 u520 0335  
                               u441 01AA                                 u425 018B  
                               u361 0128                                 u345 0100  
                               u521 0334                                 u450 01B9  
                               u370 0137                                 u451 01B8  
                               u435 0199                                 u371 0136  
                               u355 010E                                 u380 0145  
                               u445 01A7                                 u381 0144  
                               u365 0125                                 u390 015C  
                               u470 0303                                 u455 01B5  
                               u391 015B                                 u375 0133  
                               u471 0302                                 u480 030F  
                               u385 0141                                 u481 030E  
                               u490 031B                                 u395 0158  
                               u491 031A       __end_of_CreateControlsCommand 0411  
                               wreg 0009          ?_CreateMoveForwardCommmand 006D  
                      _BAUD1CONbits 011F                                l1101 03ED  
                              l1111 0369                                l1103 03EF  
                              l1121 0380                                l1113 036B  
                              l1105 03F1                                l1131 0398  
                              l1123 0383                                l1115 0376  
                              l1107 03F3                                l1141 0418  
                              l1133 039C                                l1125 0388  
                              l1117 0379                                l1109 0364  
                              l1143 0423                                l1071 0401  
                              l1135 039F                                l1127 038A  
                              l1119 037D                                l1151 00D1  
                              l1145 0425                                l1137 0411  
                              l1073 0405                                l1129 0395  
                              l1081 03C0                                l1161 0112  
                              l1153 00DF                                l1139 0416  
                              l1075 0407                                l1067 03F6  
                              l1091 03D6                                l1083 03C5  
                              l1171 014E                                l1163 011B  
                              l1155 00E8                                l1147 00B5  
                              l1251 02E0                                l1077 040D  
                              l1069 03FF                                l1093 03D8  
                              l1085 03C7                                l1181 018F  
                              l1173 015C                                l1165 0129  
                              l1157 00F6                                l1149 00C3  
                              l1261 02EF                                l1253 02E5  
                              l1245 02CB                                l1079 040E  
                              l1095 03DB                                l1087 03D2  
                              l1183 019D                                l1175 016A  
                              l1167 0137                                l1159 0104  
                              l1271 02F5                                l1263 02F1  
                              l1255 02E7                                l1247 02DB  
                              l1097 03E0                                l1089 03D4  
                              l1185 01AB                                l1177 0178  
                              l1169 0145                                l1281 0306  
                              l1273 02F6                                l1265 02F2  
                              l1257 02E9                                l1249 02DE  
                              l1099 03E2                                l1187 01B9  
                              l1179 0181                                l1291 0327  
                              l1283 030F                                l1275 02F8  
                              l1267 02F3                                l1259 02EC  
                              l1189 01BD                                l1293 032A  
                              l1285 0312                                l1277 02F9  
                              l1269 02F4                                l1295 032F  
                              l1287 031B                                l1279 0303  
                              l1297 0335                                l1289 031E  
                              l1299 0339                 __end_of_CreateBreak 0428  
                              _main 02CB                                fsr0h 0005  
                              fsr1h 0007                                indf0 0000  
                              fsr0l 0004                                indf1 0001  
                              fsr1l 0006                                btemp 007E  
                              start 007D           CreateTurnLeftCommmand@pwm 006D  
                             ?_main 0070                               i1l105 02CA  
                             i1l171 007B                               i1l163 0041  
                             _RCREG 0119                               u53_20 000B  
                             u53_21 000A                               u46_20 01CA  
                             u54_20 001A                               u46_21 01C9  
                             u54_21 0019                               u55_20 0036  
                             u55_21 0035                               u55_25 0032  
                             u56_20 0045                               u56_21 0044  
                             u57_20 0054                               u57_21 0053  
                             u57_25 0050                               u58_20 0064  
                             u58_21 0063                               u58_25 0060  
                _GetControllerInput 01C1                               _Break 00C4  
 __end_of_CreateMoveForwardCommmand 0383           ??_CreateTurnRightCommmand 006F  
                             _drive 00B5                 ?_GetControllerInput 0070  
                             status 0003                               wtemp0 007E  
                   __initialization 007F                        __end_of_main 033F  
               _MoveBackwardCommand 00CE                ??_GetControllerInput 0072  
                            ??_main 0070                         _CreateBreak 0411  
                            ?_drive 0070                              i1l1201 01E2  
                            i1l1221 023C                              i1l1213 0218  
                            i1l1205 01F4                              i1l1301 0006  
                            i1l1311 0028                              i1l1303 000B  
                            i1l1233 0272                              i1l1225 024E  
                            i1l1217 022A                              i1l1209 0206  
                            i1l1321 0054                              i1l1313 0036  
                            i1l1305 0013                              i1l1235 0283  
                            i1l1331 0079                              i1l1323 0056  
                            i1l1315 0039                              i1l1307 001A  
                            _RC5PPS 0F25                              i1l1229 0260  
                            i1l1325 0064                              i1l1317 003E  
                            i1l1309 0021                              i1l1239 0286  
                            i1l1191 01C1                              i1l1327 0068  
                            i1l1319 0045                              i1l1353 028C  
                            i1l1329 0072                              i1l1195 01CB  
                            i1l1197 01D0              _CreateTurnLeftCommmand 03DB  
                      __pdataCOMMON 007B             __end_of__initialization 00B1  
                    __pcstackCOMMON 0070                        __pidataBANK0 033F  
                      __pidataBANK1 03A2                       __end_of_drive 01C1  
                  _TurnRightCommand 0053         ??_CreateMoveForwardCommmand 006F  
                           ??_drive 006F                          __pbssBANK0 0020  
                        __pbssBANK1 00A0               __end_of_CONTROL_INPUT 0438  
                        __pmaintext 02CB                          __pintentry 0004  
        CreateTurnRightCommmand@pwm 006D               _CreateControlsCommand 03F6  
                           _Command 00B6       CreateMoveBackwardCommmand@pwm 006D  
         _CreateMoveForwardCommmand 0364                             __ptext1 00B5  
                           __ptext2 03C0                             __ptext3 03DB  
                           __ptext4 0364                             __ptext5 0383  
                           __ptext6 03F6                             __ptext7 0411  
                           __ptext9 01C1        ??_CreateMoveBackwardCommmand 006F  
                        _myFunction 0004                          _inputStage 0046  
                      ?_CreateBreak 0070                             clrloop0 042F  
              end_of_initialization 00B1                             init_ram 0428  
                           initloop 0429             ?_CreateTurnLeftCommmand 006D  
                   myFunction@input 0077            ?_CreateTurnRightCommmand 006D  
            ?_CreateControlsCommand 0070                           _TRISAbits 0011  
                         _TRISCbits 0013                     _TurnLeftCommand 005D  
                         _RXPPSbits 0ECB      __end_of_CreateTurnLeftCommmand 03F6  
                     __pidataCOMMON 0434                         ?_myFunction 0070  
               start_initialization 007F                      _CONTROL_OUTPUT 007B  
                    _currentCommand 0036                         __pdataBANK0 0048  
                       __pdataBANK1 00C4     __end_of_CreateTurnRightCommmand 03DB  
                _MoveForwardCommand 00D8  __end_of_CreateMoveBackwardCommmand 03A2  
        _CreateMoveBackwardCommmand 0383             _EnableLaserScopeCommand 0048  
                       __pbssCOMMON 0079                           ___latbits 0002  
                     __pcstackBANK0 006D                        _currentInput 0079  
           GetControllerInput@input 0070                           _commandIt 0044  
                          _LATAbits 0016                           clear_ram0 042E  
                          _PIE3bits 0719                            _PIR3bits 070F  
           ??_CreateControlsCommand 006D                            _Controls 00A0  
                     _CONTROL_INPUT 0436          __end_of_GetControllerInput 02CB  
      CreateMoveForwardCommmand@pwm 006D                         _SP1BRGLbits 011B  
                        _ANSELAbits 0F38                          _ANSELCbits 0F4E  
                      ??_myFunction 0075                            _controls 0020  
                        _RC1STAbits 011D                  __end_of_myFunction 007D  
                          int$flags 007E         ?_CreateMoveBackwardCommmand 006D  
                        _INTCONbits 000B                            intlevel1 0000  
                _GetUserDataCommand 0067                       __pstringtext1 0436  
                        _TX1REGbits 011A                       ??_CreateBreak 006D  
          ??_CreateTurnLeftCommmand 006F                          _TX1STAbits 011E  
           _CreateTurnRightCommmand 03C0                          _SWITCH_MAX 0051  
                        _SWITCH_MIN 004F  
